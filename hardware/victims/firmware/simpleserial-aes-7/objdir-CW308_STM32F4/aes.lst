   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"aes.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.KeyExpansion,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	KeyExpansion:
  24              	.LFB1:
  25              		.file 1 ".././crypto7/tiny-AES128-C/aes.c"
   1:.././crypto7/tiny-AES128-C/aes.c **** /* This AES-128 comes from https://github.com/kokke/tiny-AES128-C which is released into public dom
   2:.././crypto7/tiny-AES128-C/aes.c **** 
   3:.././crypto7/tiny-AES128-C/aes.c **** /*
   4:.././crypto7/tiny-AES128-C/aes.c **** 
   5:.././crypto7/tiny-AES128-C/aes.c **** This is an implementation of the AES128 algorithm, specifically ECB and CBC mode.
   6:.././crypto7/tiny-AES128-C/aes.c **** 
   7:.././crypto7/tiny-AES128-C/aes.c **** The implementation is verified against the test vectors in:
   8:.././crypto7/tiny-AES128-C/aes.c ****   National Institute of Standards and Technology Special Publication 800-38A 2001 ED
   9:.././crypto7/tiny-AES128-C/aes.c **** 
  10:.././crypto7/tiny-AES128-C/aes.c **** ECB-AES128
  11:.././crypto7/tiny-AES128-C/aes.c **** ----------
  12:.././crypto7/tiny-AES128-C/aes.c **** 
  13:.././crypto7/tiny-AES128-C/aes.c ****   plain-text:
  14:.././crypto7/tiny-AES128-C/aes.c ****     6bc1bee22e409f96e93d7e117393172a
  15:.././crypto7/tiny-AES128-C/aes.c ****     ae2d8a571e03ac9c9eb76fac45af8e51
  16:.././crypto7/tiny-AES128-C/aes.c ****     30c81c46a35ce411e5fbc1191a0a52ef
  17:.././crypto7/tiny-AES128-C/aes.c ****     f69f2445df4f9b17ad2b417be66c3710
  18:.././crypto7/tiny-AES128-C/aes.c **** 
  19:.././crypto7/tiny-AES128-C/aes.c ****   key:
  20:.././crypto7/tiny-AES128-C/aes.c ****     2b7e151628aed2a6abf7158809cf4f3c
  21:.././crypto7/tiny-AES128-C/aes.c **** 
  22:.././crypto7/tiny-AES128-C/aes.c ****   resulting cipher
  23:.././crypto7/tiny-AES128-C/aes.c ****     3ad77bb40d7a3660a89ecaf32466ef97
  24:.././crypto7/tiny-AES128-C/aes.c ****     f5d3d58503b9699de785895a96fdbaaf
  25:.././crypto7/tiny-AES128-C/aes.c ****     43b1cd7f598ece23881b00e3ed030688
  26:.././crypto7/tiny-AES128-C/aes.c ****     7b0c785e27e8ad3f8223207104725dd4
  27:.././crypto7/tiny-AES128-C/aes.c **** 
  28:.././crypto7/tiny-AES128-C/aes.c **** 
  29:.././crypto7/tiny-AES128-C/aes.c **** NOTE:   String length must be evenly divisible by 16byte (str_len % 16 == 0)
  30:.././crypto7/tiny-AES128-C/aes.c ****         You should pad the end of the string with zeros if this is not the case.
  31:.././crypto7/tiny-AES128-C/aes.c **** 
  32:.././crypto7/tiny-AES128-C/aes.c **** */
  33:.././crypto7/tiny-AES128-C/aes.c **** 
  34:.././crypto7/tiny-AES128-C/aes.c **** /*****************************************************************************/
  35:.././crypto7/tiny-AES128-C/aes.c **** /* Includes:                                                                 */
  36:.././crypto7/tiny-AES128-C/aes.c **** /*****************************************************************************/
  37:.././crypto7/tiny-AES128-C/aes.c **** #include <stdint.h>
  38:.././crypto7/tiny-AES128-C/aes.c **** #include <string.h> // CBC mode, for memset
  39:.././crypto7/tiny-AES128-C/aes.c **** #include "aes.h"
  40:.././crypto7/tiny-AES128-C/aes.c **** #include "random_shift_rows.h"
  41:.././crypto7/tiny-AES128-C/aes.c **** 
  42:.././crypto7/tiny-AES128-C/aes.c **** /*****************************************************************************/
  43:.././crypto7/tiny-AES128-C/aes.c **** /* Defines:                                                                  */
  44:.././crypto7/tiny-AES128-C/aes.c **** /*****************************************************************************/
  45:.././crypto7/tiny-AES128-C/aes.c **** // The number of columns comprising a state in AES. This is a constant in AES. Value=4
  46:.././crypto7/tiny-AES128-C/aes.c **** #define Nb 4
  47:.././crypto7/tiny-AES128-C/aes.c **** // The number of 32 bit words in a key.
  48:.././crypto7/tiny-AES128-C/aes.c **** #define Nk 4
  49:.././crypto7/tiny-AES128-C/aes.c **** // Key length in bytes [128 bit]
  50:.././crypto7/tiny-AES128-C/aes.c **** #define KEYLEN 16
  51:.././crypto7/tiny-AES128-C/aes.c **** // The number of rounds in AES Cipher.
  52:.././crypto7/tiny-AES128-C/aes.c **** // #define Nr 10
  53:.././crypto7/tiny-AES128-C/aes.c **** #define Nr 10
  54:.././crypto7/tiny-AES128-C/aes.c **** 
  55:.././crypto7/tiny-AES128-C/aes.c **** // jcallan@github points out that declaring Multiply as a function
  56:.././crypto7/tiny-AES128-C/aes.c **** // reduces code size considerably with the Keil ARM compiler.
  57:.././crypto7/tiny-AES128-C/aes.c **** // See this link for more information: https://github.com/kokke/tiny-AES128-C/pull/3
  58:.././crypto7/tiny-AES128-C/aes.c **** #ifndef MULTIPLY_AS_A_FUNCTION
  59:.././crypto7/tiny-AES128-C/aes.c **** #define MULTIPLY_AS_A_FUNCTION 0
  60:.././crypto7/tiny-AES128-C/aes.c **** #endif
  61:.././crypto7/tiny-AES128-C/aes.c **** 
  62:.././crypto7/tiny-AES128-C/aes.c **** /*****************************************************************************/
  63:.././crypto7/tiny-AES128-C/aes.c **** /* Private variables:                                                        */
  64:.././crypto7/tiny-AES128-C/aes.c **** /*****************************************************************************/
  65:.././crypto7/tiny-AES128-C/aes.c **** // state - array holding the intermediate results during decryption.
  66:.././crypto7/tiny-AES128-C/aes.c **** typedef uint8_t state_t[4][4];
  67:.././crypto7/tiny-AES128-C/aes.c **** static state_t *state;
  68:.././crypto7/tiny-AES128-C/aes.c **** static state_t *state_copy;
  69:.././crypto7/tiny-AES128-C/aes.c **** 
  70:.././crypto7/tiny-AES128-C/aes.c **** // The array that stores the round keys.
  71:.././crypto7/tiny-AES128-C/aes.c **** static uint8_t RoundKey[176];
  72:.././crypto7/tiny-AES128-C/aes.c **** 
  73:.././crypto7/tiny-AES128-C/aes.c **** static uint8_t input_save[16];
  74:.././crypto7/tiny-AES128-C/aes.c **** 
  75:.././crypto7/tiny-AES128-C/aes.c **** // The Key input to the AES Program
  76:.././crypto7/tiny-AES128-C/aes.c **** static uint8_t *Key;
  77:.././crypto7/tiny-AES128-C/aes.c **** 
  78:.././crypto7/tiny-AES128-C/aes.c **** // The lookup-tables are marked const so they can be placed in read-only storage instead of RAM
  79:.././crypto7/tiny-AES128-C/aes.c **** // The numbers below can be computed dynamically trading ROM for RAM -
  80:.././crypto7/tiny-AES128-C/aes.c **** // This can be useful in (embedded) bootloader applications, where ROM is often limited.
  81:.././crypto7/tiny-AES128-C/aes.c **** AES_CONST_VAR uint8_t sbox[256] = {
  82:.././crypto7/tiny-AES128-C/aes.c ****     // 0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F
  83:.././crypto7/tiny-AES128-C/aes.c ****     0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
  84:.././crypto7/tiny-AES128-C/aes.c ****     0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,
  85:.././crypto7/tiny-AES128-C/aes.c ****     0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,
  86:.././crypto7/tiny-AES128-C/aes.c ****     0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,
  87:.././crypto7/tiny-AES128-C/aes.c ****     0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,
  88:.././crypto7/tiny-AES128-C/aes.c ****     0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,
  89:.././crypto7/tiny-AES128-C/aes.c ****     0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,
  90:.././crypto7/tiny-AES128-C/aes.c ****     0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,
  91:.././crypto7/tiny-AES128-C/aes.c ****     0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,
  92:.././crypto7/tiny-AES128-C/aes.c ****     0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,
  93:.././crypto7/tiny-AES128-C/aes.c ****     0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,
  94:.././crypto7/tiny-AES128-C/aes.c ****     0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,
  95:.././crypto7/tiny-AES128-C/aes.c ****     0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,
  96:.././crypto7/tiny-AES128-C/aes.c ****     0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,
  97:.././crypto7/tiny-AES128-C/aes.c ****     0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
  98:.././crypto7/tiny-AES128-C/aes.c ****     0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16}
  99:.././crypto7/tiny-AES128-C/aes.c **** 
 100:.././crypto7/tiny-AES128-C/aes.c **** AES_CONST_VAR uint8_t rsbox[256] =
 101:.././crypto7/tiny-AES128-C/aes.c ****     {0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb
 102:.././crypto7/tiny-AES128-C/aes.c ****      0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb
 103:.././crypto7/tiny-AES128-C/aes.c ****      0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e
 104:.././crypto7/tiny-AES128-C/aes.c ****      0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25
 105:.././crypto7/tiny-AES128-C/aes.c ****      0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92
 106:.././crypto7/tiny-AES128-C/aes.c ****      0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84
 107:.././crypto7/tiny-AES128-C/aes.c ****      0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06
 108:.././crypto7/tiny-AES128-C/aes.c ****      0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b
 109:.././crypto7/tiny-AES128-C/aes.c ****      0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73
 110:.././crypto7/tiny-AES128-C/aes.c ****      0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e
 111:.././crypto7/tiny-AES128-C/aes.c ****      0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b
 112:.././crypto7/tiny-AES128-C/aes.c ****      0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4
 113:.././crypto7/tiny-AES128-C/aes.c ****      0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f
 114:.././crypto7/tiny-AES128-C/aes.c ****      0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef
 115:.././crypto7/tiny-AES128-C/aes.c ****      0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61
 116:.././crypto7/tiny-AES128-C/aes.c ****      0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d
 117:.././crypto7/tiny-AES128-C/aes.c **** 
 118:.././crypto7/tiny-AES128-C/aes.c **** // The round constant word array, Rcon[i], contains the values given by
 119:.././crypto7/tiny-AES128-C/aes.c **** // x to th e power (i-1) being powers of x (x is denoted as {02}) in the field GF(2^8)
 120:.././crypto7/tiny-AES128-C/aes.c **** // Note that i starts at 1, not 0).
 121:.././crypto7/tiny-AES128-C/aes.c **** AES_CONST_VAR uint8_t Rcon[11] = {
 122:.././crypto7/tiny-AES128-C/aes.c ****     0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36};
 123:.././crypto7/tiny-AES128-C/aes.c **** 
 124:.././crypto7/tiny-AES128-C/aes.c **** static uint8_t instr_AK_order[Nb * 4] = {
 125:.././crypto7/tiny-AES128-C/aes.c ****     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F}
 126:.././crypto7/tiny-AES128-C/aes.c **** 
 127:.././crypto7/tiny-AES128-C/aes.c **** static uint8_t instr_SB_order[Nb * 4] = {
 128:.././crypto7/tiny-AES128-C/aes.c ****     0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F}
 129:.././crypto7/tiny-AES128-C/aes.c **** 
 130:.././crypto7/tiny-AES128-C/aes.c **** /*****************************************************************************/
 131:.././crypto7/tiny-AES128-C/aes.c **** /* Private functions:                                                        */
 132:.././crypto7/tiny-AES128-C/aes.c **** /*****************************************************************************/
 133:.././crypto7/tiny-AES128-C/aes.c **** static uint8_t getSBoxValue(uint8_t num)
 134:.././crypto7/tiny-AES128-C/aes.c **** {
 135:.././crypto7/tiny-AES128-C/aes.c ****   return sbox[num];
 136:.././crypto7/tiny-AES128-C/aes.c **** }
 137:.././crypto7/tiny-AES128-C/aes.c **** 
 138:.././crypto7/tiny-AES128-C/aes.c **** // This function produces Nb(Nr+1) round keys. The round keys are used in each round to decrypt the
 139:.././crypto7/tiny-AES128-C/aes.c **** static void KeyExpansion(void)
 140:.././crypto7/tiny-AES128-C/aes.c **** {
  26              		.loc 1 140 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
 141:.././crypto7/tiny-AES128-C/aes.c ****   uint32_t i, j, k;
  30              		.loc 1 141 3 view .LVU1
 142:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t tempa[4]; // Used for the column/row operations
  31              		.loc 1 142 3 view .LVU2
 143:.././crypto7/tiny-AES128-C/aes.c **** 
 144:.././crypto7/tiny-AES128-C/aes.c ****   // The first round key is the key itself.
 145:.././crypto7/tiny-AES128-C/aes.c ****   for (i = 0; i < Nk; ++i)
  32              		.loc 1 145 3 view .LVU3
  33              	.LVL0:
  34              		.loc 1 145 15 view .LVU4
 140:.././crypto7/tiny-AES128-C/aes.c ****   uint32_t i, j, k;
  35              		.loc 1 140 1 is_stmt 0 view .LVU5
  36 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 24
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42 0002 274A     		ldr	r2, .L9
  43 0004 52F8043B 		ldr	r3, [r2], #4
  44 0008 03F11001 		add	r1, r3, #16
  45              	.LVL1:
  46              	.L2:
 146:.././crypto7/tiny-AES128-C/aes.c ****   {
 147:.././crypto7/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 0] = Key[(i * 4) + 0];
  47              		.loc 1 147 5 is_stmt 1 discriminator 3 view .LVU6
  48              		.loc 1 147 32 is_stmt 0 discriminator 3 view .LVU7
  49 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  50              		.loc 1 147 27 discriminator 3 view .LVU8
  51 000e 1070     		strb	r0, [r2]
 148:.././crypto7/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 1] = Key[(i * 4) + 1];
  52              		.loc 1 148 5 is_stmt 1 discriminator 3 view .LVU9
  53              		.loc 1 148 32 is_stmt 0 discriminator 3 view .LVU10
  54 0010 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
  55              		.loc 1 148 27 discriminator 3 view .LVU11
  56 0012 5070     		strb	r0, [r2, #1]
 149:.././crypto7/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 2] = Key[(i * 4) + 2];
  57              		.loc 1 149 5 is_stmt 1 discriminator 3 view .LVU12
  58              		.loc 1 149 32 is_stmt 0 discriminator 3 view .LVU13
  59 0014 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
  60              		.loc 1 149 27 discriminator 3 view .LVU14
  61 0016 9070     		strb	r0, [r2, #2]
 150:.././crypto7/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 3] = Key[(i * 4) + 3];
  62              		.loc 1 150 5 is_stmt 1 discriminator 3 view .LVU15
  63              		.loc 1 150 32 is_stmt 0 discriminator 3 view .LVU16
  64 0018 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
  65              		.loc 1 150 27 discriminator 3 view .LVU17
  66 001a D070     		strb	r0, [r2, #3]
 145:.././crypto7/tiny-AES128-C/aes.c ****   {
  67              		.loc 1 145 23 is_stmt 1 discriminator 3 view .LVU18
 145:.././crypto7/tiny-AES128-C/aes.c ****   {
  68              		.loc 1 145 15 discriminator 3 view .LVU19
 145:.././crypto7/tiny-AES128-C/aes.c ****   {
  69              		.loc 1 145 3 is_stmt 0 discriminator 3 view .LVU20
  70 001c 0433     		adds	r3, r3, #4
  71 001e 8B42     		cmp	r3, r1
  72 0020 02F10402 		add	r2, r2, #4
  73 0024 F2D1     		bne	.L2
  74 0026 1F4B     		ldr	r3, .L9+4
  75              	.LBB12:
  76              	.LBB13:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
  77              		.loc 1 135 14 view .LVU21
  78 0028 1F48     		ldr	r0, .L9+8
  79              	.LBE13:
  80              	.LBE12:
 145:.././crypto7/tiny-AES128-C/aes.c ****   {
  81              		.loc 1 145 3 view .LVU22
  82 002a 0421     		movs	r1, #4
  83              	.L3:
  84              	.LVL2:
 151:.././crypto7/tiny-AES128-C/aes.c ****   }
 152:.././crypto7/tiny-AES128-C/aes.c **** 
 153:.././crypto7/tiny-AES128-C/aes.c ****   // All other round keys are found from the previous round keys.
 154:.././crypto7/tiny-AES128-C/aes.c ****   for (; (i < (Nb * (Nr + 1))); ++i)
 155:.././crypto7/tiny-AES128-C/aes.c ****   {
 156:.././crypto7/tiny-AES128-C/aes.c ****     for (j = 0; j < 4; ++j)
  85              		.loc 1 156 17 is_stmt 1 view .LVU23
  86 002c 1A68     		ldr	r2, [r3]	@ unaligned
 157:.././crypto7/tiny-AES128-C/aes.c ****     {
 158:.././crypto7/tiny-AES128-C/aes.c ****       tempa[j] = RoundKey[(i - 1) * 4 + j];
  87              		.loc 1 158 16 is_stmt 0 view .LVU24
  88 002e 0192     		str	r2, [sp, #4]
  89              	.LVL3:
 159:.././crypto7/tiny-AES128-C/aes.c ****     }
 160:.././crypto7/tiny-AES128-C/aes.c ****     if (i % Nk == 0)
  90              		.loc 1 160 5 is_stmt 1 view .LVU25
  91              		.loc 1 160 8 is_stmt 0 view .LVU26
  92 0030 8C07     		lsls	r4, r1, #30
  93 0032 16D1     		bne	.L6
 161:.././crypto7/tiny-AES128-C/aes.c ****     {
 162:.././crypto7/tiny-AES128-C/aes.c ****       // This function rotates the 4 bytes in a word to the left once.
 163:.././crypto7/tiny-AES128-C/aes.c ****       // [a0,a1,a2,a3] becomes [a1,a2,a3,a0]
 164:.././crypto7/tiny-AES128-C/aes.c **** 
 165:.././crypto7/tiny-AES128-C/aes.c ****       // Function RotWord()
 166:.././crypto7/tiny-AES128-C/aes.c ****       {
 167:.././crypto7/tiny-AES128-C/aes.c ****         k = tempa[0];
  94              		.loc 1 167 9 is_stmt 1 view .LVU27
  95              	.LVL4:
 168:.././crypto7/tiny-AES128-C/aes.c ****         tempa[0] = tempa[1];
  96              		.loc 1 168 9 view .LVU28
 169:.././crypto7/tiny-AES128-C/aes.c ****         tempa[1] = tempa[2];
  97              		.loc 1 169 9 view .LVU29
 170:.././crypto7/tiny-AES128-C/aes.c ****         tempa[2] = tempa[3];
  98              		.loc 1 170 9 view .LVU30
 171:.././crypto7/tiny-AES128-C/aes.c ****         tempa[3] = k;
  99              		.loc 1 171 9 view .LVU31
 172:.././crypto7/tiny-AES128-C/aes.c ****       }
 173:.././crypto7/tiny-AES128-C/aes.c **** 
 174:.././crypto7/tiny-AES128-C/aes.c ****       // SubWord() is a function that takes a four-byte input word and
 175:.././crypto7/tiny-AES128-C/aes.c ****       // applies the S-box to each of the four bytes to produce an output word.
 176:.././crypto7/tiny-AES128-C/aes.c **** 
 177:.././crypto7/tiny-AES128-C/aes.c ****       // Function Subword()
 178:.././crypto7/tiny-AES128-C/aes.c ****       {
 179:.././crypto7/tiny-AES128-C/aes.c ****         tempa[0] = getSBoxValue(tempa[0]);
 100              		.loc 1 179 9 view .LVU32
 101              	.LBB17:
 102              	.LBI12:
 133:.././crypto7/tiny-AES128-C/aes.c **** {
 103              		.loc 1 133 16 view .LVU33
 104              	.LBB14:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 105              		.loc 1 135 3 view .LVU34
 106              	.LBE14:
 107              	.LBE17:
 108              	.LBB18:
 109              	.LBB19:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 110              		.loc 1 135 14 is_stmt 0 view .LVU35
 111 0034 C2F30745 		ubfx	r5, r2, #16, #8
 112              	.LBE19:
 113              	.LBE18:
 114              	.LBB21:
 115              	.LBB15:
 116 0038 C2F30724 		ubfx	r4, r2, #8, #8
 117              	.LBE15:
 118              	.LBE21:
 180:.././crypto7/tiny-AES128-C/aes.c ****         tempa[1] = getSBoxValue(tempa[1]);
 119              		.loc 1 180 18 view .LVU36
 120 003c 455D     		ldrb	r5, [r0, r5]	@ zero_extendqisi2
 121 003e 8DF80550 		strb	r5, [sp, #5]
 122              	.LVL5:
 123              	.LBB22:
 124              	.LBB23:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 125              		.loc 1 135 14 view .LVU37
 126 0042 150E     		lsrs	r5, r2, #24
 127              	.LBE23:
 128              	.LBE22:
 129              	.LBB25:
 130              	.LBB26:
 131 0044 D2B2     		uxtb	r2, r2
 132              	.LBE26:
 133              	.LBE25:
 134              	.LBB28:
 135              	.LBB16:
 136 0046 045D     		ldrb	r4, [r0, r4]	@ zero_extendqisi2
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 137              		.loc 1 135 14 view .LVU38
 138              	.LBE16:
 139              	.LBE28:
 140              		.loc 1 180 9 is_stmt 1 view .LVU39
 141              	.LVL6:
 142              	.LBB29:
 143              	.LBI18:
 133:.././crypto7/tiny-AES128-C/aes.c **** {
 144              		.loc 1 133 16 view .LVU40
 145              	.LBB20:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 146              		.loc 1 135 3 view .LVU41
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 147              		.loc 1 135 3 is_stmt 0 view .LVU42
 148              	.LBE20:
 149              	.LBE29:
 181:.././crypto7/tiny-AES128-C/aes.c ****         tempa[2] = getSBoxValue(tempa[2]);
 150              		.loc 1 181 9 is_stmt 1 view .LVU43
 151              	.LBB30:
 152              	.LBI22:
 133:.././crypto7/tiny-AES128-C/aes.c **** {
 153              		.loc 1 133 16 view .LVU44
 154              	.LBB24:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 155              		.loc 1 135 3 view .LVU45
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 156              		.loc 1 135 3 is_stmt 0 view .LVU46
 157              	.LBE24:
 158              	.LBE30:
 182:.././crypto7/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 159              		.loc 1 182 18 view .LVU47
 160 0048 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 161 004a 8DF80720 		strb	r2, [sp, #7]
 183:.././crypto7/tiny-AES128-C/aes.c ****       }
 184:.././crypto7/tiny-AES128-C/aes.c **** 
 185:.././crypto7/tiny-AES128-C/aes.c ****       tempa[0] = tempa[0] ^ Rcon[i / Nk];
 162              		.loc 1 185 33 view .LVU48
 163 004e 00EB9102 		add	r2, r0, r1, lsr #2
 181:.././crypto7/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 164              		.loc 1 181 18 view .LVU49
 165 0052 455D     		ldrb	r5, [r0, r5]	@ zero_extendqisi2
 166              		.loc 1 185 16 view .LVU50
 167 0054 92F80021 		ldrb	r2, [r2, #256]	@ zero_extendqisi2
 181:.././crypto7/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 168              		.loc 1 181 18 view .LVU51
 169 0058 8DF80650 		strb	r5, [sp, #6]
 182:.././crypto7/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 170              		.loc 1 182 9 is_stmt 1 view .LVU52
 171              	.LVL7:
 172              	.LBB31:
 173              	.LBI25:
 133:.././crypto7/tiny-AES128-C/aes.c **** {
 174              		.loc 1 133 16 view .LVU53
 175              	.LBB27:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 176              		.loc 1 135 3 view .LVU54
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 177              		.loc 1 135 3 is_stmt 0 view .LVU55
 178              	.LBE27:
 179              	.LBE31:
 180              		.loc 1 185 7 is_stmt 1 view .LVU56
 181              		.loc 1 185 16 is_stmt 0 view .LVU57
 182 005c 6240     		eors	r2, r2, r4
 183 005e 8DF80420 		strb	r2, [sp, #4]
 184              	.LVL8:
 185              	.L6:
 186:.././crypto7/tiny-AES128-C/aes.c ****     }
 187:.././crypto7/tiny-AES128-C/aes.c ****     else if (Nk > 6 && i % Nk == 4)
 188:.././crypto7/tiny-AES128-C/aes.c ****     {
 189:.././crypto7/tiny-AES128-C/aes.c ****       // Function Subword()
 190:.././crypto7/tiny-AES128-C/aes.c ****       {
 191:.././crypto7/tiny-AES128-C/aes.c ****         tempa[0] = getSBoxValue(tempa[0]);
 192:.././crypto7/tiny-AES128-C/aes.c ****         tempa[1] = getSBoxValue(tempa[1]);
 193:.././crypto7/tiny-AES128-C/aes.c ****         tempa[2] = getSBoxValue(tempa[2]);
 194:.././crypto7/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 195:.././crypto7/tiny-AES128-C/aes.c ****       }
 196:.././crypto7/tiny-AES128-C/aes.c ****     }
 197:.././crypto7/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 0] = RoundKey[(i - Nk) * 4 + 0] ^ tempa[0];
 186              		.loc 1 197 5 is_stmt 1 view .LVU58
 187              		.loc 1 197 25 is_stmt 0 view .LVU59
 188 0062 13F80C2C 		ldrb	r2, [r3, #-12]	@ zero_extendqisi2
 189 0066 9DF80440 		ldrb	r4, [sp, #4]	@ zero_extendqisi2
 190 006a 6240     		eors	r2, r2, r4
 191 006c 1A71     		strb	r2, [r3, #4]
 198:.././crypto7/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 1] = RoundKey[(i - Nk) * 4 + 1] ^ tempa[1];
 192              		.loc 1 198 5 is_stmt 1 view .LVU60
 193              		.loc 1 198 25 is_stmt 0 view .LVU61
 194 006e 9DF80540 		ldrb	r4, [sp, #5]	@ zero_extendqisi2
 195 0072 13F80B2C 		ldrb	r2, [r3, #-11]	@ zero_extendqisi2
 196 0076 6240     		eors	r2, r2, r4
 197 0078 5A71     		strb	r2, [r3, #5]
 199:.././crypto7/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 2] = RoundKey[(i - Nk) * 4 + 2] ^ tempa[2];
 198              		.loc 1 199 5 is_stmt 1 view .LVU62
 199              		.loc 1 199 25 is_stmt 0 view .LVU63
 200 007a 9DF80640 		ldrb	r4, [sp, #6]	@ zero_extendqisi2
 201 007e 13F80A2C 		ldrb	r2, [r3, #-10]	@ zero_extendqisi2
 202 0082 6240     		eors	r2, r2, r4
 203 0084 9A71     		strb	r2, [r3, #6]
 200:.././crypto7/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 3] = RoundKey[(i - Nk) * 4 + 3] ^ tempa[3];
 204              		.loc 1 200 5 is_stmt 1 view .LVU64
 205              		.loc 1 200 25 is_stmt 0 view .LVU65
 206 0086 9DF80740 		ldrb	r4, [sp, #7]	@ zero_extendqisi2
 207 008a 13F8092C 		ldrb	r2, [r3, #-9]	@ zero_extendqisi2
 154:.././crypto7/tiny-AES128-C/aes.c ****   {
 208              		.loc 1 154 33 view .LVU66
 209 008e 0131     		adds	r1, r1, #1
 210              	.LVL9:
 211              		.loc 1 200 25 view .LVU67
 212 0090 6240     		eors	r2, r2, r4
 154:.././crypto7/tiny-AES128-C/aes.c ****   {
 213              		.loc 1 154 3 view .LVU68
 214 0092 2C29     		cmp	r1, #44
 215              		.loc 1 200 25 view .LVU69
 216 0094 DA71     		strb	r2, [r3, #7]
 154:.././crypto7/tiny-AES128-C/aes.c ****   {
 217              		.loc 1 154 33 is_stmt 1 view .LVU70
 218              	.LVL10:
 154:.././crypto7/tiny-AES128-C/aes.c ****   {
 219              		.loc 1 154 10 view .LVU71
 154:.././crypto7/tiny-AES128-C/aes.c ****   {
 220              		.loc 1 154 3 is_stmt 0 view .LVU72
 221 0096 03F10403 		add	r3, r3, #4
 222 009a C7D1     		bne	.L3
 201:.././crypto7/tiny-AES128-C/aes.c ****   }
 202:.././crypto7/tiny-AES128-C/aes.c **** }
 223              		.loc 1 202 1 view .LVU73
 224 009c 03B0     		add	sp, sp, #12
 225              	.LCFI1:
 226              		.cfi_def_cfa_offset 12
 227              		@ sp needed
 228 009e 30BD     		pop	{r4, r5, pc}
 229              	.L10:
 230              		.align	2
 231              	.L9:
 232 00a0 00000000 		.word	.LANCHOR0
 233 00a4 10000000 		.word	.LANCHOR0+16
 234 00a8 00000000 		.word	.LANCHOR1
 235              		.cfi_endproc
 236              	.LFE1:
 238              		.section	.text.AddRoundKey,"ax",%progbits
 239              		.align	1
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu softvfp
 245              	AddRoundKey:
 246              	.LVL11:
 247              	.LFB3:
 203:.././crypto7/tiny-AES128-C/aes.c **** 
 204:.././crypto7/tiny-AES128-C/aes.c **** static void Randomize_instruction_AK(uint8_t round)
 205:.././crypto7/tiny-AES128-C/aes.c **** {
 206:.././crypto7/tiny-AES128-C/aes.c ****   srand(clock());
 207:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 208:.././crypto7/tiny-AES128-C/aes.c ****   for (i = Nb * 4 - 1; i > 0; i--)
 209:.././crypto7/tiny-AES128-C/aes.c ****   {
 210:.././crypto7/tiny-AES128-C/aes.c ****     j = ((uint8_t)rand()) % (i + 1); // A random integer Fisher
 211:.././crypto7/tiny-AES128-C/aes.c ****     tmp = instr_AK_order[i];
 212:.././crypto7/tiny-AES128-C/aes.c ****     instr_AK_order[i] = instr_AK_order[j];
 213:.././crypto7/tiny-AES128-C/aes.c ****     instr_AK_order[j] = tmp;
 214:.././crypto7/tiny-AES128-C/aes.c ****   }
 215:.././crypto7/tiny-AES128-C/aes.c **** }
 216:.././crypto7/tiny-AES128-C/aes.c **** 
 217:.././crypto7/tiny-AES128-C/aes.c **** // This function adds the round key to state.
 218:.././crypto7/tiny-AES128-C/aes.c **** // The round key is added to the state by an XOR function.
 219:.././crypto7/tiny-AES128-C/aes.c **** static void AddRoundKey(uint8_t round)
 220:.././crypto7/tiny-AES128-C/aes.c **** {
 248              		.loc 1 220 1 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 221:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i;
 252              		.loc 1 221 3 view .LVU75
 222:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t instr;
 253              		.loc 1 222 3 view .LVU76
 223:.././crypto7/tiny-AES128-C/aes.c ****   for (i = 0; i < Nb * 4; ++i)
 254              		.loc 1 223 3 view .LVU77
 255              		.loc 1 223 15 view .LVU78
 220:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i;
 256              		.loc 1 220 1 is_stmt 0 view .LVU79
 257 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 258              	.LCFI2:
 259              		.cfi_def_cfa_offset 20
 260              		.cfi_offset 4, -20
 261              		.cfi_offset 5, -16
 262              		.cfi_offset 6, -12
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 224:.././crypto7/tiny-AES128-C/aes.c ****   {
 225:.././crypto7/tiny-AES128-C/aes.c ****     instr = instr_AK_order[i];
 226:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[instr / 4][instr % 4] ^= RoundKey[round * Nb * 4 + (instr / 4) * Nb + (instr % 4)];
 265              		.loc 1 226 36 view .LVU80
 266 0002 0E4C     		ldr	r4, .L14
 267 0004 0E4D     		ldr	r5, .L14+4
 268 0006 D4F8B460 		ldr	r6, [r4, #180]
 269              		.loc 1 226 63 view .LVU81
 270 000a 8000     		lsls	r0, r0, #2
 271              	.LVL12:
 223:.././crypto7/tiny-AES128-C/aes.c ****   {
 272              		.loc 1 223 10 view .LVU82
 273 000c 0022     		movs	r2, #0
 274              	.LVL13:
 275              	.L12:
 225:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[instr / 4][instr % 4] ^= RoundKey[round * Nb * 4 + (instr / 4) * Nb + (instr % 4)];
 276              		.loc 1 225 5 is_stmt 1 discriminator 3 view .LVU83
 225:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[instr / 4][instr % 4] ^= RoundKey[round * Nb * 4 + (instr / 4) * Nb + (instr % 4)];
 277              		.loc 1 225 11 is_stmt 0 discriminator 3 view .LVU84
 278 000e 15F8013B 		ldrb	r3, [r5], #1	@ zero_extendqisi2
 279              	.LVL14:
 280              		.loc 1 226 5 is_stmt 1 discriminator 3 view .LVU85
 281              		.loc 1 226 36 is_stmt 0 discriminator 3 view .LVU86
 282 0012 03F00307 		and	r7, r3, #3
 283 0016 03F0FC01 		and	r1, r3, #252
 284              		.loc 1 226 63 discriminator 3 view .LVU87
 285 001a 00EB9303 		add	r3, r0, r3, lsr #2
 286              	.LVL15:
 287              		.loc 1 226 47 discriminator 3 view .LVU88
 288 001e 04EB8303 		add	r3, r4, r3, lsl #2
 289              		.loc 1 226 36 discriminator 3 view .LVU89
 290 0022 3144     		add	r1, r1, r6
 291              		.loc 1 226 47 discriminator 3 view .LVU90
 292 0024 3B44     		add	r3, r3, r7
 293              		.loc 1 226 36 discriminator 3 view .LVU91
 294 0026 11F807C0 		ldrb	ip, [r1, r7]	@ zero_extendqisi2
 295 002a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 223:.././crypto7/tiny-AES128-C/aes.c ****   {
 296              		.loc 1 223 27 discriminator 3 view .LVU92
 297 002c 0132     		adds	r2, r2, #1
 298              	.LVL16:
 223:.././crypto7/tiny-AES128-C/aes.c ****   {
 299              		.loc 1 223 27 discriminator 3 view .LVU93
 300 002e D2B2     		uxtb	r2, r2
 301              		.loc 1 226 36 discriminator 3 view .LVU94
 302 0030 83EA0C03 		eor	r3, r3, ip
 223:.././crypto7/tiny-AES128-C/aes.c ****   {
 303              		.loc 1 223 3 discriminator 3 view .LVU95
 304 0034 102A     		cmp	r2, #16
 305              		.loc 1 226 36 discriminator 3 view .LVU96
 306 0036 CB55     		strb	r3, [r1, r7]
 307              	.LVL17:
 223:.././crypto7/tiny-AES128-C/aes.c ****   {
 308              		.loc 1 223 27 is_stmt 1 discriminator 3 view .LVU97
 223:.././crypto7/tiny-AES128-C/aes.c ****   {
 309              		.loc 1 223 15 discriminator 3 view .LVU98
 223:.././crypto7/tiny-AES128-C/aes.c ****   {
 310              		.loc 1 223 3 is_stmt 0 discriminator 3 view .LVU99
 311 0038 E9D1     		bne	.L12
 227:.././crypto7/tiny-AES128-C/aes.c ****   }
 228:.././crypto7/tiny-AES128-C/aes.c **** }
 312              		.loc 1 228 1 view .LVU100
 313 003a F0BD     		pop	{r4, r5, r6, r7, pc}
 314              	.L15:
 315              		.align	2
 316              	.L14:
 317 003c 00000000 		.word	.LANCHOR0
 318 0040 0B010000 		.word	.LANCHOR1+267
 319              		.cfi_endproc
 320              	.LFE3:
 322              		.section	.text.SubBytes,"ax",%progbits
 323              		.align	1
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu softvfp
 329              	SubBytes:
 330              	.LFB5:
 229:.././crypto7/tiny-AES128-C/aes.c **** 
 230:.././crypto7/tiny-AES128-C/aes.c **** static void Randomize_instruction_SB(uint8_t round)
 231:.././crypto7/tiny-AES128-C/aes.c **** {
 232:.././crypto7/tiny-AES128-C/aes.c ****   srand(clock());
 233:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 234:.././crypto7/tiny-AES128-C/aes.c ****   for (i = Nb * 4 - 1; i > 0; i--)
 235:.././crypto7/tiny-AES128-C/aes.c ****   {
 236:.././crypto7/tiny-AES128-C/aes.c ****     j = ((uint8_t)rand()) % (i + 1); // A random integer Fisher
 237:.././crypto7/tiny-AES128-C/aes.c ****     tmp = instr_SB_order[i];
 238:.././crypto7/tiny-AES128-C/aes.c ****     instr_SB_order[i] = instr_SB_order[j];
 239:.././crypto7/tiny-AES128-C/aes.c ****     instr_SB_order[j] = tmp;
 240:.././crypto7/tiny-AES128-C/aes.c ****   }
 241:.././crypto7/tiny-AES128-C/aes.c **** }
 242:.././crypto7/tiny-AES128-C/aes.c **** 
 243:.././crypto7/tiny-AES128-C/aes.c **** // The SubBytes Function Substitutes the values in the
 244:.././crypto7/tiny-AES128-C/aes.c **** // state matrix with values in an S-box.
 245:.././crypto7/tiny-AES128-C/aes.c **** static void SubBytes(void)
 246:.././crypto7/tiny-AES128-C/aes.c **** {
 331              		.loc 1 246 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 247:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i;
 335              		.loc 1 247 3 view .LVU102
 248:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t instr;
 336              		.loc 1 248 3 view .LVU103
 249:.././crypto7/tiny-AES128-C/aes.c ****   for (i = 0; i < Nb * 4; ++i)
 337              		.loc 1 249 3 view .LVU104
 338              	.LVL18:
 339              		.loc 1 249 15 view .LVU105
 250:.././crypto7/tiny-AES128-C/aes.c ****   {
 251:.././crypto7/tiny-AES128-C/aes.c ****     instr = instr_SB_order[i];
 252:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[instr / 4][instr % 4] = getSBoxValue((*state)[instr / 4][instr % 4]);
 340              		.loc 1 252 52 is_stmt 0 view .LVU106
 341 0000 0B4B     		ldr	r3, .L19
 342 0002 0C49     		ldr	r1, .L19+4
 246:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i;
 343              		.loc 1 246 1 view .LVU107
 344 0004 70B5     		push	{r4, r5, r6, lr}
 345              	.LCFI3:
 346              		.cfi_def_cfa_offset 16
 347              		.cfi_offset 4, -16
 348              		.cfi_offset 5, -12
 349              		.cfi_offset 6, -8
 350              		.cfi_offset 14, -4
 351              		.loc 1 252 52 view .LVU108
 352 0006 D3F8B460 		ldr	r6, [r3, #180]
 353              	.LBB32:
 354              	.LBB33:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 355              		.loc 1 135 14 view .LVU109
 356 000a 6FF48D73 		mvn	r3, #282
 357              	.LBE33:
 358              	.LBE32:
 249:.././crypto7/tiny-AES128-C/aes.c ****   {
 359              		.loc 1 249 10 view .LVU110
 360 000e 0022     		movs	r2, #0
 361              	.LBB38:
 362              	.LBB34:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 363              		.loc 1 135 14 view .LVU111
 364 0010 CD18     		adds	r5, r1, r3
 365              	.LVL19:
 366              	.L17:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 367              		.loc 1 135 14 view .LVU112
 368              	.LBE34:
 369              	.LBE38:
 251:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[instr / 4][instr % 4] = getSBoxValue((*state)[instr / 4][instr % 4]);
 370              		.loc 1 251 5 is_stmt 1 discriminator 3 view .LVU113
 251:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[instr / 4][instr % 4] = getSBoxValue((*state)[instr / 4][instr % 4]);
 371              		.loc 1 251 11 is_stmt 0 discriminator 3 view .LVU114
 372 0012 11F8013B 		ldrb	r3, [r1], #1	@ zero_extendqisi2
 373              	.LVL20:
 374              		.loc 1 252 5 is_stmt 1 discriminator 3 view .LVU115
 375              		.loc 1 252 77 is_stmt 0 discriminator 3 view .LVU116
 376 0016 03F00300 		and	r0, r3, #3
 377              	.LVL21:
 378              	.LBB39:
 379              	.LBI32:
 133:.././crypto7/tiny-AES128-C/aes.c **** {
 380              		.loc 1 133 16 is_stmt 1 discriminator 3 view .LVU117
 381              	.LBB35:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 382              		.loc 1 135 3 discriminator 3 view .LVU118
 383              	.LBE35:
 384              	.LBE39:
 385              		.loc 1 252 38 is_stmt 0 discriminator 3 view .LVU119
 386 001a 03F0FC03 		and	r3, r3, #252
 387              	.LVL22:
 388              		.loc 1 252 38 discriminator 3 view .LVU120
 389 001e 3344     		add	r3, r3, r6
 249:.././crypto7/tiny-AES128-C/aes.c ****   {
 390              		.loc 1 249 27 discriminator 3 view .LVU121
 391 0020 0132     		adds	r2, r2, #1
 392              	.LVL23:
 393              	.LBB40:
 394              	.LBB36:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 395              		.loc 1 135 14 discriminator 3 view .LVU122
 396 0022 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 397              	.LBE36:
 398              	.LBE40:
 249:.././crypto7/tiny-AES128-C/aes.c ****   {
 399              		.loc 1 249 27 discriminator 3 view .LVU123
 400 0024 D2B2     		uxtb	r2, r2
 401              	.LBB41:
 402              	.LBB37:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 403              		.loc 1 135 14 discriminator 3 view .LVU124
 404 0026 2C5D     		ldrb	r4, [r5, r4]	@ zero_extendqisi2
 405              	.LVL24:
 135:.././crypto7/tiny-AES128-C/aes.c **** }
 406              		.loc 1 135 14 discriminator 3 view .LVU125
 407              	.LBE37:
 408              	.LBE41:
 409              		.loc 1 252 36 discriminator 3 view .LVU126
 410 0028 1C54     		strb	r4, [r3, r0]
 411              	.LVL25:
 249:.././crypto7/tiny-AES128-C/aes.c ****   {
 412              		.loc 1 249 27 is_stmt 1 discriminator 3 view .LVU127
 249:.././crypto7/tiny-AES128-C/aes.c ****   {
 413              		.loc 1 249 15 discriminator 3 view .LVU128
 249:.././crypto7/tiny-AES128-C/aes.c ****   {
 414              		.loc 1 249 3 is_stmt 0 discriminator 3 view .LVU129
 415 002a 102A     		cmp	r2, #16
 416 002c F1D1     		bne	.L17
 253:.././crypto7/tiny-AES128-C/aes.c ****   }
 254:.././crypto7/tiny-AES128-C/aes.c **** }
 417              		.loc 1 254 1 view .LVU130
 418 002e 70BD     		pop	{r4, r5, r6, pc}
 419              	.L20:
 420              		.align	2
 421              	.L19:
 422 0030 00000000 		.word	.LANCHOR0
 423 0034 1B010000 		.word	.LANCHOR1+283
 424              		.cfi_endproc
 425              	.LFE5:
 427              		.section	.text.BlockCopy,"ax",%progbits
 428              		.align	1
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu softvfp
 434              	BlockCopy:
 435              	.LVL26:
 436              	.LFB10:
 255:.././crypto7/tiny-AES128-C/aes.c **** 
 256:.././crypto7/tiny-AES128-C/aes.c **** // The ShiftRows() function shifts the rows in the state to the left.
 257:.././crypto7/tiny-AES128-C/aes.c **** // Each row is shifted with different offset.
 258:.././crypto7/tiny-AES128-C/aes.c **** // Offset = Row number. So the first row is not shifted.
 259:.././crypto7/tiny-AES128-C/aes.c **** static void ShiftRows(void)
 260:.././crypto7/tiny-AES128-C/aes.c **** {
 261:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t temp;
 262:.././crypto7/tiny-AES128-C/aes.c ****   state_copy = (state_t *)malloc(sizeof(state_t) * 16);
 263:.././crypto7/tiny-AES128-C/aes.c **** 
 264:.././crypto7/tiny-AES128-C/aes.c ****   // Randomize_permuation();
 265:.././crypto7/tiny-AES128-C/aes.c **** 
 266:.././crypto7/tiny-AES128-C/aes.c ****   for (temp = 0; temp < 16; ++temp)
 267:.././crypto7/tiny-AES128-C/aes.c ****   {
 268:.././crypto7/tiny-AES128-C/aes.c ****     (*state_copy)[temp % 4][temp / 4] = (*state)[temp % 4][temp / 4]; // NOTE: [column index][row i
 269:.././crypto7/tiny-AES128-C/aes.c ****   }
 270:.././crypto7/tiny-AES128-C/aes.c **** 
 271:.././crypto7/tiny-AES128-C/aes.c ****   for (temp = 0; temp < 16; ++temp)
 272:.././crypto7/tiny-AES128-C/aes.c ****   {
 273:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[temp % 4][temp / 4] = (*state_copy)[shift_rows[temp] % 4][shift_rows[temp] / 4];
 274:.././crypto7/tiny-AES128-C/aes.c ****   }
 275:.././crypto7/tiny-AES128-C/aes.c **** 
 276:.././crypto7/tiny-AES128-C/aes.c ****   free(state_copy);
 277:.././crypto7/tiny-AES128-C/aes.c **** 
 278:.././crypto7/tiny-AES128-C/aes.c ****   /*
 279:.././crypto7/tiny-AES128-C/aes.c ****   // Rotate first row 1 columns to left
 280:.././crypto7/tiny-AES128-C/aes.c ****   temp = (*state)[0][1];
 281:.././crypto7/tiny-AES128-C/aes.c ****   (*state)[0][1] = (*state)[1][1];
 282:.././crypto7/tiny-AES128-C/aes.c ****   (*state)[1][1] = (*state)[2][1];
 283:.././crypto7/tiny-AES128-C/aes.c ****   (*state)[2][1] = (*state)[3][1];
 284:.././crypto7/tiny-AES128-C/aes.c ****   (*state)[3][1] = temp;
 285:.././crypto7/tiny-AES128-C/aes.c **** 
 286:.././crypto7/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left
 287:.././crypto7/tiny-AES128-C/aes.c ****   temp = (*state)[0][2];
 288:.././crypto7/tiny-AES128-C/aes.c ****   (*state)[0][2] = (*state)[2][2];
 289:.././crypto7/tiny-AES128-C/aes.c ****   (*state)[2][2] = temp;
 290:.././crypto7/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left
 291:.././crypto7/tiny-AES128-C/aes.c ****   temp = (*state)[1][2];
 292:.././crypto7/tiny-AES128-C/aes.c ****   (*state)[1][2] = (*state)[3][2];
 293:.././crypto7/tiny-AES128-C/aes.c ****   (*state)[3][2] = temp;
 294:.././crypto7/tiny-AES128-C/aes.c **** 
 295:.././crypto7/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left
 296:.././crypto7/tiny-AES128-C/aes.c **** 
 297:.././crypto7/tiny-AES128-C/aes.c ****   // Rotate third row 3 columns to left
 298:.././crypto7/tiny-AES128-C/aes.c ****   temp = (*state)[0][3];
 299:.././crypto7/tiny-AES128-C/aes.c ****   (*state)[0][3] = (*state)[3][3];
 300:.././crypto7/tiny-AES128-C/aes.c ****   (*state)[3][3] = (*state)[2][3];
 301:.././crypto7/tiny-AES128-C/aes.c ****   (*state)[2][3] = (*state)[1][3];
 302:.././crypto7/tiny-AES128-C/aes.c ****   (*state)[1][3] = temp;
 303:.././crypto7/tiny-AES128-C/aes.c ****   */
 304:.././crypto7/tiny-AES128-C/aes.c **** }
 305:.././crypto7/tiny-AES128-C/aes.c **** 
 306:.././crypto7/tiny-AES128-C/aes.c **** static uint8_t xtime(uint8_t x)
 307:.././crypto7/tiny-AES128-C/aes.c **** {
 308:.././crypto7/tiny-AES128-C/aes.c ****   return ((x << 1) ^ (((x >> 7) & 1) * 0x1b));
 309:.././crypto7/tiny-AES128-C/aes.c **** }
 310:.././crypto7/tiny-AES128-C/aes.c **** 
 311:.././crypto7/tiny-AES128-C/aes.c **** // MixColumns function mixes the columns of the state matrix
 312:.././crypto7/tiny-AES128-C/aes.c **** static void MixColumns(void)
 313:.././crypto7/tiny-AES128-C/aes.c **** {
 314:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i;
 315:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t Tmp, Tm, t;
 316:.././crypto7/tiny-AES128-C/aes.c ****   for (i = 0; i < 4; ++i)
 317:.././crypto7/tiny-AES128-C/aes.c ****   {
 318:.././crypto7/tiny-AES128-C/aes.c ****     t = (*state)[i][0];
 319:.././crypto7/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3];
 320:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 321:.././crypto7/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 322:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[i][0] ^= Tm ^ Tmp;
 323:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][1] ^ (*state)[i][2];
 324:.././crypto7/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 325:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[i][1] ^= Tm ^ Tmp;
 326:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][2] ^ (*state)[i][3];
 327:.././crypto7/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 328:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[i][2] ^= Tm ^ Tmp;
 329:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][3] ^ t;
 330:.././crypto7/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 331:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[i][3] ^= Tm ^ Tmp;
 332:.././crypto7/tiny-AES128-C/aes.c ****   }
 333:.././crypto7/tiny-AES128-C/aes.c **** }
 334:.././crypto7/tiny-AES128-C/aes.c **** 
 335:.././crypto7/tiny-AES128-C/aes.c **** // Multiply is used to multiply numbers in the field GF(2^8)
 336:.././crypto7/tiny-AES128-C/aes.c **** #if MULTIPLY_AS_A_FUNCTION
 337:.././crypto7/tiny-AES128-C/aes.c **** static uint8_t Multiply(uint8_t x, uint8_t y)
 338:.././crypto7/tiny-AES128-C/aes.c **** {
 339:.././crypto7/tiny-AES128-C/aes.c ****   return (((y & 1) * x) ^
 340:.././crypto7/tiny-AES128-C/aes.c ****           ((y >> 1 & 1) * xtime(x)) ^
 341:.././crypto7/tiny-AES128-C/aes.c ****           ((y >> 2 & 1) * xtime(xtime(x))) ^
 342:.././crypto7/tiny-AES128-C/aes.c ****           ((y >> 3 & 1) * xtime(xtime(xtime(x)))) ^
 343:.././crypto7/tiny-AES128-C/aes.c ****           ((y >> 4 & 1) * xtime(xtime(xtime(xtime(x))))));
 344:.././crypto7/tiny-AES128-C/aes.c **** }
 345:.././crypto7/tiny-AES128-C/aes.c **** #else
 346:.././crypto7/tiny-AES128-C/aes.c **** #define Multiply(x, y)                       \
 347:.././crypto7/tiny-AES128-C/aes.c ****   (((y & 1) * x) ^                           \
 348:.././crypto7/tiny-AES128-C/aes.c ****    ((y >> 1 & 1) * xtime(x)) ^               \
 349:.././crypto7/tiny-AES128-C/aes.c ****    ((y >> 2 & 1) * xtime(xtime(x))) ^        \
 350:.././crypto7/tiny-AES128-C/aes.c ****    ((y >> 3 & 1) * xtime(xtime(xtime(x)))) ^ \
 351:.././crypto7/tiny-AES128-C/aes.c ****    ((y >> 4 & 1) * xtime(xtime(xtime(xtime(x))))))
 352:.././crypto7/tiny-AES128-C/aes.c **** 
 353:.././crypto7/tiny-AES128-C/aes.c **** #endif
 354:.././crypto7/tiny-AES128-C/aes.c **** 
 355:.././crypto7/tiny-AES128-C/aes.c **** // Cipher is the main function that encrypts the PlainText.
 356:.././crypto7/tiny-AES128-C/aes.c **** static void Cipher(void)
 357:.././crypto7/tiny-AES128-C/aes.c **** {
 358:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t round = 0;
 359:.././crypto7/tiny-AES128-C/aes.c **** 
 360:.././crypto7/tiny-AES128-C/aes.c ****   // Add the First round key to the state before starting the rounds.
 361:.././crypto7/tiny-AES128-C/aes.c ****   Randomize_instruction_AK(round);
 362:.././crypto7/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 363:.././crypto7/tiny-AES128-C/aes.c **** 
 364:.././crypto7/tiny-AES128-C/aes.c ****   // There will be Nr rounds.
 365:.././crypto7/tiny-AES128-C/aes.c ****   // The first Nr-1 rounds are identical.
 366:.././crypto7/tiny-AES128-C/aes.c ****   // These Nr-1 rounds are executed in the loop below.
 367:.././crypto7/tiny-AES128-C/aes.c ****   for (round = 1; round < Nr; ++round)
 368:.././crypto7/tiny-AES128-C/aes.c ****   {
 369:.././crypto7/tiny-AES128-C/aes.c ****     Randomize_instruction_SB(round);
 370:.././crypto7/tiny-AES128-C/aes.c ****     SubBytes();
 371:.././crypto7/tiny-AES128-C/aes.c ****     ShiftRows();
 372:.././crypto7/tiny-AES128-C/aes.c ****     MixColumns();
 373:.././crypto7/tiny-AES128-C/aes.c ****     Randomize_instruction_AK(round);
 374:.././crypto7/tiny-AES128-C/aes.c ****     AddRoundKey(round);
 375:.././crypto7/tiny-AES128-C/aes.c ****   }
 376:.././crypto7/tiny-AES128-C/aes.c **** 
 377:.././crypto7/tiny-AES128-C/aes.c ****   // The last round is given below.
 378:.././crypto7/tiny-AES128-C/aes.c ****   // The MixColumns function is not here in the last round.
 379:.././crypto7/tiny-AES128-C/aes.c ****   SubBytes();
 380:.././crypto7/tiny-AES128-C/aes.c ****   ShiftRows();
 381:.././crypto7/tiny-AES128-C/aes.c ****   AddRoundKey(Nr);
 382:.././crypto7/tiny-AES128-C/aes.c **** }
 383:.././crypto7/tiny-AES128-C/aes.c **** 
 384:.././crypto7/tiny-AES128-C/aes.c **** static void BlockCopy(uint8_t *output, const uint8_t *input)
 385:.././crypto7/tiny-AES128-C/aes.c **** {
 437              		.loc 1 385 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 386:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i;
 442              		.loc 1 386 3 view .LVU132
 387:.././crypto7/tiny-AES128-C/aes.c ****   for (i = 0; i < KEYLEN; ++i)
 443              		.loc 1 387 3 view .LVU133
 444              		.loc 1 387 15 view .LVU134
 445 0000 4B1E     		subs	r3, r1, #1
 446 0002 0138     		subs	r0, r0, #1
 447              	.LVL27:
 448              		.loc 1 387 15 is_stmt 0 view .LVU135
 449 0004 0F31     		adds	r1, r1, #15
 450              	.LVL28:
 451              	.L22:
 388:.././crypto7/tiny-AES128-C/aes.c ****   {
 389:.././crypto7/tiny-AES128-C/aes.c ****     output[i] = input[i];
 452              		.loc 1 389 5 is_stmt 1 discriminator 3 view .LVU136
 453              		.loc 1 389 22 is_stmt 0 discriminator 3 view .LVU137
 454 0006 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
 455              	.LVL29:
 456              		.loc 1 389 15 discriminator 3 view .LVU138
 457 000a 00F8012F 		strb	r2, [r0, #1]!
 387:.././crypto7/tiny-AES128-C/aes.c ****   for (i = 0; i < KEYLEN; ++i)
 458              		.loc 1 387 27 is_stmt 1 discriminator 3 view .LVU139
 459              	.LVL30:
 387:.././crypto7/tiny-AES128-C/aes.c ****   for (i = 0; i < KEYLEN; ++i)
 460              		.loc 1 387 15 discriminator 3 view .LVU140
 387:.././crypto7/tiny-AES128-C/aes.c ****   for (i = 0; i < KEYLEN; ++i)
 461              		.loc 1 387 3 is_stmt 0 discriminator 3 view .LVU141
 462 000e 8B42     		cmp	r3, r1
 463 0010 F9D1     		bne	.L22
 390:.././crypto7/tiny-AES128-C/aes.c ****   }
 391:.././crypto7/tiny-AES128-C/aes.c **** }
 464              		.loc 1 391 1 view .LVU142
 465 0012 7047     		bx	lr
 466              		.cfi_endproc
 467              	.LFE10:
 469              		.section	.text.ShiftRows,"ax",%progbits
 470              		.align	1
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 474              		.fpu softvfp
 476              	ShiftRows:
 477              	.LFB6:
 260:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t temp;
 478              		.loc 1 260 1 is_stmt 1 view -0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 261:.././crypto7/tiny-AES128-C/aes.c ****   state_copy = (state_t *)malloc(sizeof(state_t) * 16);
 482              		.loc 1 261 3 view .LVU144
 262:.././crypto7/tiny-AES128-C/aes.c **** 
 483              		.loc 1 262 3 view .LVU145
 260:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t temp;
 484              		.loc 1 260 1 is_stmt 0 view .LVU146
 485 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 486              	.LCFI4:
 487              		.cfi_def_cfa_offset 24
 488              		.cfi_offset 3, -24
 489              		.cfi_offset 4, -20
 490              		.cfi_offset 5, -16
 491              		.cfi_offset 6, -12
 492              		.cfi_offset 7, -8
 493              		.cfi_offset 14, -4
 262:.././crypto7/tiny-AES128-C/aes.c **** 
 494              		.loc 1 262 27 view .LVU147
 495 0002 4FF48070 		mov	r0, #256
 496 0006 FFF7FEFF 		bl	malloc
 497              	.LVL31:
 266:.././crypto7/tiny-AES128-C/aes.c ****   {
 498              		.loc 1 266 3 is_stmt 1 view .LVU148
 266:.././crypto7/tiny-AES128-C/aes.c ****   {
 499              		.loc 1 266 18 view .LVU149
 268:.././crypto7/tiny-AES128-C/aes.c ****   }
 500              		.loc 1 268 42 is_stmt 0 view .LVU150
 501 000a 144B     		ldr	r3, .L29
 502 000c D3F8B450 		ldr	r5, [r3, #180]
 503 0010 0023     		movs	r3, #0
 504              	.LVL32:
 505              	.L25:
 268:.././crypto7/tiny-AES128-C/aes.c ****   }
 506              		.loc 1 268 5 is_stmt 1 discriminator 3 view .LVU151
 268:.././crypto7/tiny-AES128-C/aes.c ****   }
 507              		.loc 1 268 55 is_stmt 0 discriminator 3 view .LVU152
 508 0012 03F00302 		and	r2, r3, #3
 268:.././crypto7/tiny-AES128-C/aes.c ****   }
 509              		.loc 1 268 65 discriminator 3 view .LVU153
 510 0016 C3F38501 		ubfx	r1, r3, #2, #6
 268:.././crypto7/tiny-AES128-C/aes.c ****   }
 511              		.loc 1 268 39 discriminator 3 view .LVU154
 512 001a 00EB8204 		add	r4, r0, r2, lsl #2
 268:.././crypto7/tiny-AES128-C/aes.c ****   }
 513              		.loc 1 268 59 discriminator 3 view .LVU155
 514 001e 05EB8202 		add	r2, r5, r2, lsl #2
 266:.././crypto7/tiny-AES128-C/aes.c ****   {
 515              		.loc 1 266 3 discriminator 3 view .LVU156
 516 0022 0133     		adds	r3, r3, #1
 517              	.LVL33:
 268:.././crypto7/tiny-AES128-C/aes.c ****   }
 518              		.loc 1 268 39 discriminator 3 view .LVU157
 519 0024 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 520 0026 6254     		strb	r2, [r4, r1]
 266:.././crypto7/tiny-AES128-C/aes.c ****   {
 521              		.loc 1 266 29 is_stmt 1 discriminator 3 view .LVU158
 266:.././crypto7/tiny-AES128-C/aes.c ****   {
 522              		.loc 1 266 18 discriminator 3 view .LVU159
 266:.././crypto7/tiny-AES128-C/aes.c ****   {
 523              		.loc 1 266 3 is_stmt 0 discriminator 3 view .LVU160
 524 0028 102B     		cmp	r3, #16
 525 002a F2D1     		bne	.L25
 526 002c 0C4E     		ldr	r6, .L29+4
 271:.././crypto7/tiny-AES128-C/aes.c ****   {
 527              		.loc 1 271 13 view .LVU161
 528 002e 0023     		movs	r3, #0
 529              	.L26:
 530              	.LVL34:
 273:.././crypto7/tiny-AES128-C/aes.c ****   }
 531              		.loc 1 273 5 is_stmt 1 discriminator 3 view .LVU162
 273:.././crypto7/tiny-AES128-C/aes.c ****   }
 532              		.loc 1 273 60 is_stmt 0 discriminator 3 view .LVU163
 533 0030 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 273:.././crypto7/tiny-AES128-C/aes.c ****   }
 534              		.loc 1 273 67 discriminator 3 view .LVU164
 535 0034 02F00304 		and	r4, r2, #3
 273:.././crypto7/tiny-AES128-C/aes.c ****   }
 536              		.loc 1 273 19 discriminator 3 view .LVU165
 537 0038 03F00301 		and	r1, r3, #3
 273:.././crypto7/tiny-AES128-C/aes.c ****   }
 538              		.loc 1 273 29 discriminator 3 view .LVU166
 539 003c 9F08     		lsrs	r7, r3, #2
 273:.././crypto7/tiny-AES128-C/aes.c ****   }
 540              		.loc 1 273 89 discriminator 3 view .LVU167
 541 003e 9208     		lsrs	r2, r2, #2
 273:.././crypto7/tiny-AES128-C/aes.c ****   }
 542              		.loc 1 273 71 discriminator 3 view .LVU168
 543 0040 00EB8404 		add	r4, r0, r4, lsl #2
 271:.././crypto7/tiny-AES128-C/aes.c ****   {
 544              		.loc 1 271 29 discriminator 3 view .LVU169
 545 0044 0133     		adds	r3, r3, #1
 546              	.LVL35:
 273:.././crypto7/tiny-AES128-C/aes.c ****   }
 547              		.loc 1 273 34 discriminator 3 view .LVU170
 548 0046 05EB8101 		add	r1, r5, r1, lsl #2
 271:.././crypto7/tiny-AES128-C/aes.c ****   {
 549              		.loc 1 271 29 discriminator 3 view .LVU171
 550 004a DBB2     		uxtb	r3, r3
 273:.././crypto7/tiny-AES128-C/aes.c ****   }
 551              		.loc 1 273 34 discriminator 3 view .LVU172
 552 004c A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 553 004e CA55     		strb	r2, [r1, r7]
 271:.././crypto7/tiny-AES128-C/aes.c ****   {
 554              		.loc 1 271 29 is_stmt 1 discriminator 3 view .LVU173
 555              	.LVL36:
 271:.././crypto7/tiny-AES128-C/aes.c ****   {
 556              		.loc 1 271 18 discriminator 3 view .LVU174
 271:.././crypto7/tiny-AES128-C/aes.c ****   {
 557              		.loc 1 271 3 is_stmt 0 discriminator 3 view .LVU175
 558 0050 102B     		cmp	r3, #16
 559 0052 EDD1     		bne	.L26
 276:.././crypto7/tiny-AES128-C/aes.c **** 
 560              		.loc 1 276 3 is_stmt 1 view .LVU176
 304:.././crypto7/tiny-AES128-C/aes.c **** 
 561              		.loc 1 304 1 is_stmt 0 view .LVU177
 562 0054 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 563              	.LCFI5:
 564              		.cfi_restore 14
 565              		.cfi_restore 7
 566              		.cfi_restore 6
 567              		.cfi_restore 5
 568              		.cfi_restore 4
 569              		.cfi_restore 3
 570              		.cfi_def_cfa_offset 0
 571              	.LVL37:
 276:.././crypto7/tiny-AES128-C/aes.c **** 
 572              		.loc 1 276 3 view .LVU178
 573 0058 FFF7FEBF 		b	free
 574              	.LVL38:
 575              	.L30:
 576              		.align	2
 577              	.L29:
 578 005c 00000000 		.word	.LANCHOR0
 579 0060 00000000 		.word	shift_rows
 580              		.cfi_endproc
 581              	.LFE6:
 583              		.section	.text.Randomize_instruction_AK.constprop.0,"ax",%progbits
 584              		.align	1
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu softvfp
 590              	Randomize_instruction_AK.constprop.0:
 591              	.LFB16:
 204:.././crypto7/tiny-AES128-C/aes.c **** {
 592              		.loc 1 204 13 is_stmt 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              	.LVL39:
 206:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 597              		.loc 1 206 3 view .LVU180
 204:.././crypto7/tiny-AES128-C/aes.c **** {
 598              		.loc 1 204 13 is_stmt 0 view .LVU181
 599 0000 70B5     		push	{r4, r5, r6, lr}
 600              	.LCFI6:
 601              		.cfi_def_cfa_offset 16
 602              		.cfi_offset 4, -16
 603              		.cfi_offset 5, -12
 604              		.cfi_offset 6, -8
 605              		.cfi_offset 14, -4
 206:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 606              		.loc 1 206 9 view .LVU182
 607 0002 FFF7FEFF 		bl	clock
 608              	.LVL40:
 609 0006 0C4D     		ldr	r5, .L34
 206:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 610              		.loc 1 206 3 view .LVU183
 611 0008 FFF7FEFF 		bl	srand
 612              	.LVL41:
 207:.././crypto7/tiny-AES128-C/aes.c ****   for (i = Nb * 4 - 1; i > 0; i--)
 613              		.loc 1 207 3 is_stmt 1 view .LVU184
 208:.././crypto7/tiny-AES128-C/aes.c ****   {
 614              		.loc 1 208 3 view .LVU185
 208:.././crypto7/tiny-AES128-C/aes.c ****   {
 615              		.loc 1 208 24 view .LVU186
 206:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 616              		.loc 1 206 3 is_stmt 0 view .LVU187
 617 000c 1024     		movs	r4, #16
 212:.././crypto7/tiny-AES128-C/aes.c ****     instr_AK_order[j] = tmp;
 618              		.loc 1 212 39 view .LVU188
 619 000e A5F58D76 		sub	r6, r5, #282
 620              	.LVL42:
 621              	.L32:
 210:.././crypto7/tiny-AES128-C/aes.c ****     tmp = instr_AK_order[i];
 622              		.loc 1 210 5 is_stmt 1 view .LVU189
 210:.././crypto7/tiny-AES128-C/aes.c ****     tmp = instr_AK_order[i];
 623              		.loc 1 210 19 is_stmt 0 view .LVU190
 624 0012 FFF7FEFF 		bl	rand
 625              	.LVL43:
 210:.././crypto7/tiny-AES128-C/aes.c ****     tmp = instr_AK_order[i];
 626              		.loc 1 210 27 view .LVU191
 627 0016 C0B2     		uxtb	r0, r0
 628 0018 B0FBF4F3 		udiv	r3, r0, r4
 629 001c 04FB1300 		mls	r0, r4, r3, r0
 630              	.LVL44:
 211:.././crypto7/tiny-AES128-C/aes.c ****     instr_AK_order[i] = instr_AK_order[j];
 631              		.loc 1 211 5 is_stmt 1 view .LVU192
 212:.././crypto7/tiny-AES128-C/aes.c ****     instr_AK_order[j] = tmp;
 632              		.loc 1 212 39 is_stmt 0 view .LVU193
 633 0020 3044     		add	r0, r0, r6
 634              	.LVL45:
 208:.././crypto7/tiny-AES128-C/aes.c ****   {
 635              		.loc 1 208 3 view .LVU194
 636 0022 013C     		subs	r4, r4, #1
 637              	.LVL46:
 211:.././crypto7/tiny-AES128-C/aes.c ****     instr_AK_order[i] = instr_AK_order[j];
 638              		.loc 1 211 9 view .LVU195
 639 0024 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 640              	.LVL47:
 212:.././crypto7/tiny-AES128-C/aes.c ****     instr_AK_order[j] = tmp;
 641              		.loc 1 212 5 is_stmt 1 view .LVU196
 212:.././crypto7/tiny-AES128-C/aes.c ****     instr_AK_order[j] = tmp;
 642              		.loc 1 212 39 is_stmt 0 view .LVU197
 643 0026 90F80B21 		ldrb	r2, [r0, #267]	@ zero_extendqisi2
 212:.././crypto7/tiny-AES128-C/aes.c ****     instr_AK_order[j] = tmp;
 644              		.loc 1 212 23 view .LVU198
 645 002a 05F80129 		strb	r2, [r5], #-1
 213:.././crypto7/tiny-AES128-C/aes.c ****   }
 646              		.loc 1 213 5 is_stmt 1 view .LVU199
 208:.././crypto7/tiny-AES128-C/aes.c ****   {
 647              		.loc 1 208 3 is_stmt 0 view .LVU200
 648 002e 012C     		cmp	r4, #1
 213:.././crypto7/tiny-AES128-C/aes.c ****   }
 649              		.loc 1 213 23 view .LVU201
 650 0030 80F80B31 		strb	r3, [r0, #267]
 208:.././crypto7/tiny-AES128-C/aes.c ****   {
 651              		.loc 1 208 31 is_stmt 1 view .LVU202
 208:.././crypto7/tiny-AES128-C/aes.c ****   {
 652              		.loc 1 208 24 view .LVU203
 208:.././crypto7/tiny-AES128-C/aes.c ****   {
 653              		.loc 1 208 3 is_stmt 0 view .LVU204
 654 0034 EDD1     		bne	.L32
 215:.././crypto7/tiny-AES128-C/aes.c **** 
 655              		.loc 1 215 1 view .LVU205
 656 0036 70BD     		pop	{r4, r5, r6, pc}
 657              	.L35:
 658              		.align	2
 659              	.L34:
 660 0038 1A010000 		.word	.LANCHOR1+282
 661              		.cfi_endproc
 662              	.LFE16:
 664              		.section	.text.Cipher,"ax",%progbits
 665              		.align	1
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 669              		.fpu softvfp
 671              	Cipher:
 672              	.LFB9:
 357:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t round = 0;
 673              		.loc 1 357 1 is_stmt 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 358:.././crypto7/tiny-AES128-C/aes.c **** 
 677              		.loc 1 358 3 view .LVU207
 678              	.LVL48:
 361:.././crypto7/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 679              		.loc 1 361 3 view .LVU208
 357:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t round = 0;
 680              		.loc 1 357 1 is_stmt 0 view .LVU209
 681 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 682              	.LCFI7:
 683              		.cfi_def_cfa_offset 32
 684              		.cfi_offset 4, -32
 685              		.cfi_offset 5, -28
 686              		.cfi_offset 6, -24
 687              		.cfi_offset 7, -20
 688              		.cfi_offset 8, -16
 689              		.cfi_offset 9, -12
 690              		.cfi_offset 10, -8
 691              		.cfi_offset 14, -4
 361:.././crypto7/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 692              		.loc 1 361 3 view .LVU210
 693 0004 FFF7FEFF 		bl	Randomize_instruction_AK.constprop.0
 694              	.LVL49:
 362:.././crypto7/tiny-AES128-C/aes.c **** 
 695              		.loc 1 362 3 is_stmt 1 view .LVU211
 696 0008 0020     		movs	r0, #0
 697 000a FFF7FEFF 		bl	AddRoundKey
 698              	.LVL50:
 367:.././crypto7/tiny-AES128-C/aes.c ****   {
 699              		.loc 1 367 3 view .LVU212
 367:.././crypto7/tiny-AES128-C/aes.c ****   {
 700              		.loc 1 367 19 view .LVU213
 701              	.LBB54:
 702              	.LBB55:
 238:.././crypto7/tiny-AES128-C/aes.c ****     instr_SB_order[j] = tmp;
 703              		.loc 1 238 39 is_stmt 0 view .LVU214
 704 000e 3E4D     		ldr	r5, .L43
 705              	.LBE55:
 706              	.LBE54:
 707              	.LBB57:
 708              	.LBB58:
 318:.././crypto7/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3];
 709              		.loc 1 318 10 view .LVU215
 710 0010 3E4E     		ldr	r6, .L43+4
 711              	.LBE58:
 712              	.LBE57:
 367:.././crypto7/tiny-AES128-C/aes.c ****   {
 713              		.loc 1 367 14 view .LVU216
 714 0012 0124     		movs	r4, #1
 715              	.LVL51:
 716              	.L39:
 369:.././crypto7/tiny-AES128-C/aes.c ****     SubBytes();
 717              		.loc 1 369 5 is_stmt 1 view .LVU217
 718              	.LBB80:
 719              	.LBI54:
 230:.././crypto7/tiny-AES128-C/aes.c **** {
 720              		.loc 1 230 13 view .LVU218
 721              	.LBB56:
 232:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 722              		.loc 1 232 3 view .LVU219
 232:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 723              		.loc 1 232 9 is_stmt 0 view .LVU220
 724 0014 FFF7FEFF 		bl	clock
 725              	.LVL52:
 232:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 726              		.loc 1 232 3 view .LVU221
 727 0018 FFF7FEFF 		bl	srand
 728              	.LVL53:
 233:.././crypto7/tiny-AES128-C/aes.c ****   for (i = Nb * 4 - 1; i > 0; i--)
 729              		.loc 1 233 3 is_stmt 1 view .LVU222
 234:.././crypto7/tiny-AES128-C/aes.c ****   {
 730              		.loc 1 234 3 view .LVU223
 234:.././crypto7/tiny-AES128-C/aes.c ****   {
 731              		.loc 1 234 24 view .LVU224
 732 001c DFF8F080 		ldr	r8, .L43+8
 232:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 733              		.loc 1 232 3 is_stmt 0 view .LVU225
 734 0020 1027     		movs	r7, #16
 735              	.LVL54:
 736              	.L37:
 236:.././crypto7/tiny-AES128-C/aes.c ****     tmp = instr_SB_order[i];
 737              		.loc 1 236 5 is_stmt 1 view .LVU226
 236:.././crypto7/tiny-AES128-C/aes.c ****     tmp = instr_SB_order[i];
 738              		.loc 1 236 19 is_stmt 0 view .LVU227
 739 0022 FFF7FEFF 		bl	rand
 740              	.LVL55:
 236:.././crypto7/tiny-AES128-C/aes.c ****     tmp = instr_SB_order[i];
 741              		.loc 1 236 27 view .LVU228
 742 0026 C0B2     		uxtb	r0, r0
 743 0028 B0FBF7F3 		udiv	r3, r0, r7
 744 002c 07FB1300 		mls	r0, r7, r3, r0
 745              	.LVL56:
 237:.././crypto7/tiny-AES128-C/aes.c ****     instr_SB_order[i] = instr_SB_order[j];
 746              		.loc 1 237 5 is_stmt 1 view .LVU229
 238:.././crypto7/tiny-AES128-C/aes.c ****     instr_SB_order[j] = tmp;
 747              		.loc 1 238 39 is_stmt 0 view .LVU230
 748 0030 2844     		add	r0, r0, r5
 749              	.LVL57:
 234:.././crypto7/tiny-AES128-C/aes.c ****   {
 750              		.loc 1 234 3 view .LVU231
 751 0032 013F     		subs	r7, r7, #1
 752              	.LVL58:
 237:.././crypto7/tiny-AES128-C/aes.c ****     instr_SB_order[i] = instr_SB_order[j];
 753              		.loc 1 237 9 view .LVU232
 754 0034 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 755              	.LVL59:
 238:.././crypto7/tiny-AES128-C/aes.c ****     instr_SB_order[j] = tmp;
 756              		.loc 1 238 5 is_stmt 1 view .LVU233
 238:.././crypto7/tiny-AES128-C/aes.c ****     instr_SB_order[j] = tmp;
 757              		.loc 1 238 39 is_stmt 0 view .LVU234
 758 0038 90F81B21 		ldrb	r2, [r0, #283]	@ zero_extendqisi2
 238:.././crypto7/tiny-AES128-C/aes.c ****     instr_SB_order[j] = tmp;
 759              		.loc 1 238 23 view .LVU235
 760 003c 08F80129 		strb	r2, [r8], #-1
 239:.././crypto7/tiny-AES128-C/aes.c ****   }
 761              		.loc 1 239 5 is_stmt 1 view .LVU236
 234:.././crypto7/tiny-AES128-C/aes.c ****   {
 762              		.loc 1 234 3 is_stmt 0 view .LVU237
 763 0040 012F     		cmp	r7, #1
 239:.././crypto7/tiny-AES128-C/aes.c ****   }
 764              		.loc 1 239 23 view .LVU238
 765 0042 80F81B31 		strb	r3, [r0, #283]
 234:.././crypto7/tiny-AES128-C/aes.c ****   {
 766              		.loc 1 234 31 is_stmt 1 view .LVU239
 234:.././crypto7/tiny-AES128-C/aes.c ****   {
 767              		.loc 1 234 24 view .LVU240
 234:.././crypto7/tiny-AES128-C/aes.c ****   {
 768              		.loc 1 234 3 is_stmt 0 view .LVU241
 769 0046 ECD1     		bne	.L37
 770              	.LVL60:
 234:.././crypto7/tiny-AES128-C/aes.c ****   {
 771              		.loc 1 234 3 view .LVU242
 772              	.LBE56:
 773              	.LBE80:
 370:.././crypto7/tiny-AES128-C/aes.c ****     ShiftRows();
 774              		.loc 1 370 5 is_stmt 1 discriminator 3 view .LVU243
 775 0048 FFF7FEFF 		bl	SubBytes
 776              	.LVL61:
 371:.././crypto7/tiny-AES128-C/aes.c ****     MixColumns();
 777              		.loc 1 371 5 discriminator 3 view .LVU244
 778 004c FFF7FEFF 		bl	ShiftRows
 779              	.LVL62:
 372:.././crypto7/tiny-AES128-C/aes.c ****     Randomize_instruction_AK(round);
 780              		.loc 1 372 5 discriminator 3 view .LVU245
 781              	.LBB81:
 782              	.LBI57:
 312:.././crypto7/tiny-AES128-C/aes.c **** {
 783              		.loc 1 312 13 discriminator 3 view .LVU246
 784              	.LBB79:
 316:.././crypto7/tiny-AES128-C/aes.c ****   {
 785              		.loc 1 316 15 discriminator 3 view .LVU247
 786 0050 D6F8B430 		ldr	r3, [r6, #180]
 787 0054 03F11007 		add	r7, r3, #16
 788              	.LVL63:
 789              	.L38:
 318:.././crypto7/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3];
 790              		.loc 1 318 5 view .LVU248
 318:.././crypto7/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3];
 791              		.loc 1 318 7 is_stmt 0 view .LVU249
 792 0058 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 793              	.LVL64:
 319:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 794              		.loc 1 319 5 is_stmt 1 view .LVU250
 319:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 795              		.loc 1 319 39 is_stmt 0 view .LVU251
 796 005a 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 319:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 797              		.loc 1 319 56 view .LVU252
 798 005c 93F80280 		ldrb	r8, [r3, #2]	@ zero_extendqisi2
 319:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 799              		.loc 1 319 73 view .LVU253
 800 0060 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 319:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 801              		.loc 1 319 9 view .LVU254
 802 0062 82EA010A 		eor	r10, r2, r1
 803              	.LBB59:
 804              	.LBB60:
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 805              		.loc 1 308 20 view .LVU255
 806 0066 4FEADA1E 		lsr	lr, r10, #7
 807 006a 88EA0009 		eor	r9, r8, r0
 808 006e 0EEB4E0E 		add	lr, lr, lr, lsl #1
 809              	.LBE60:
 810              	.LBE59:
 319:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 811              		.loc 1 319 9 view .LVU256
 812 0072 8AEA090C 		eor	ip, r10, r9
 813              	.LVL65:
 320:.././crypto7/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 814              		.loc 1 320 5 is_stmt 1 view .LVU257
 321:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[i][0] ^= Tm ^ Tmp;
 815              		.loc 1 321 5 view .LVU258
 816              	.LBB63:
 817              	.LBI59:
 306:.././crypto7/tiny-AES128-C/aes.c **** {
 818              		.loc 1 306 16 view .LVU259
 819              	.LBB61:
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 820              		.loc 1 308 3 view .LVU260
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 821              		.loc 1 308 3 is_stmt 0 view .LVU261
 822              	.LBE61:
 823              	.LBE63:
 322:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][1] ^ (*state)[i][2];
 824              		.loc 1 322 5 is_stmt 1 view .LVU262
 825              	.LBB64:
 826              	.LBB62:
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 827              		.loc 1 308 20 is_stmt 0 view .LVU263
 828 0076 0EEBCE0E 		add	lr, lr, lr, lsl #3
 829 007a 8EEA4A0E 		eor	lr, lr, r10, lsl #1
 830              	.LBE62:
 831              	.LBE64:
 322:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][1] ^ (*state)[i][2];
 832              		.loc 1 322 20 view .LVU264
 833 007e 82EA0C0A 		eor	r10, r2, ip
 834              	.LVL66:
 322:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][1] ^ (*state)[i][2];
 835              		.loc 1 322 20 view .LVU265
 836 0082 8EEA0A0E 		eor	lr, lr, r10
 323:.././crypto7/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 837              		.loc 1 323 8 view .LVU266
 838 0086 81EA080A 		eor	r10, r1, r8
 322:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][1] ^ (*state)[i][2];
 839              		.loc 1 322 20 view .LVU267
 840 008a 83F800E0 		strb	lr, [r3]
 323:.././crypto7/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 841              		.loc 1 323 5 is_stmt 1 view .LVU268
 842              	.LVL67:
 324:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[i][1] ^= Tm ^ Tmp;
 843              		.loc 1 324 5 view .LVU269
 844              	.LBB65:
 845              	.LBI65:
 306:.././crypto7/tiny-AES128-C/aes.c **** {
 846              		.loc 1 306 16 view .LVU270
 847              	.LBB66:
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 848              		.loc 1 308 3 view .LVU271
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 849              		.loc 1 308 3 is_stmt 0 view .LVU272
 850              	.LBE66:
 851              	.LBE65:
 325:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][2] ^ (*state)[i][3];
 852              		.loc 1 325 5 is_stmt 1 view .LVU273
 853              	.LBB69:
 854              	.LBB67:
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 855              		.loc 1 308 20 is_stmt 0 view .LVU274
 856 008e 4FEADA1E 		lsr	lr, r10, #7
 857 0092 0EEB4E0E 		add	lr, lr, lr, lsl #1
 858 0096 0EEBCE0E 		add	lr, lr, lr, lsl #3
 859              	.LBE67:
 860              	.LBE69:
 325:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][2] ^ (*state)[i][3];
 861              		.loc 1 325 20 view .LVU275
 862 009a 81EA0C01 		eor	r1, r1, ip
 863              	.LBB70:
 864              	.LBB68:
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 865              		.loc 1 308 20 view .LVU276
 866 009e 8EEA4A0E 		eor	lr, lr, r10, lsl #1
 867              	.LBE68:
 868              	.LBE70:
 325:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][2] ^ (*state)[i][3];
 869              		.loc 1 325 20 view .LVU277
 870 00a2 8EEA010E 		eor	lr, lr, r1
 871              	.LBB71:
 872              	.LBB72:
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 873              		.loc 1 308 20 view .LVU278
 874 00a6 4FEAD911 		lsr	r1, r9, #7
 875 00aa 01EB4101 		add	r1, r1, r1, lsl #1
 876 00ae 01EBC101 		add	r1, r1, r1, lsl #3
 877 00b2 81EA4901 		eor	r1, r1, r9, lsl #1
 878              	.LBE72:
 879              	.LBE71:
 328:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][3] ^ t;
 880              		.loc 1 328 20 view .LVU279
 881 00b6 88EA0C08 		eor	r8, r8, ip
 882 00ba 81EA0801 		eor	r1, r1, r8
 883 00be 9970     		strb	r1, [r3, #2]
 329:.././crypto7/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 884              		.loc 1 329 8 view .LVU280
 885 00c0 82EA0001 		eor	r1, r2, r0
 886              	.LBB74:
 887              	.LBB75:
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 888              		.loc 1 308 20 view .LVU281
 889 00c4 CA09     		lsrs	r2, r1, #7
 890              	.LVL68:
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 891              		.loc 1 308 20 view .LVU282
 892 00c6 02EB4202 		add	r2, r2, r2, lsl #1
 893 00ca 02EBC202 		add	r2, r2, r2, lsl #3
 894 00ce 82EA4102 		eor	r2, r2, r1, lsl #1
 895              	.LBE75:
 896              	.LBE74:
 331:.././crypto7/tiny-AES128-C/aes.c ****   }
 897              		.loc 1 331 20 view .LVU283
 898 00d2 80EA0C00 		eor	r0, r0, ip
 899 00d6 4240     		eors	r2, r2, r0
 325:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][2] ^ (*state)[i][3];
 900              		.loc 1 325 20 view .LVU284
 901 00d8 83F801E0 		strb	lr, [r3, #1]
 326:.././crypto7/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 902              		.loc 1 326 5 is_stmt 1 view .LVU285
 903              	.LVL69:
 327:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[i][2] ^= Tm ^ Tmp;
 904              		.loc 1 327 5 view .LVU286
 905              	.LBB77:
 906              	.LBI71:
 306:.././crypto7/tiny-AES128-C/aes.c **** {
 907              		.loc 1 306 16 view .LVU287
 908              	.LBB73:
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 909              		.loc 1 308 3 view .LVU288
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 910              		.loc 1 308 3 is_stmt 0 view .LVU289
 911              	.LBE73:
 912              	.LBE77:
 328:.././crypto7/tiny-AES128-C/aes.c ****     Tm = (*state)[i][3] ^ t;
 913              		.loc 1 328 5 is_stmt 1 view .LVU290
 329:.././crypto7/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 914              		.loc 1 329 5 view .LVU291
 330:.././crypto7/tiny-AES128-C/aes.c ****     (*state)[i][3] ^= Tm ^ Tmp;
 915              		.loc 1 330 5 view .LVU292
 916              	.LBB78:
 917              	.LBI74:
 306:.././crypto7/tiny-AES128-C/aes.c **** {
 918              		.loc 1 306 16 view .LVU293
 919              	.LBB76:
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 920              		.loc 1 308 3 view .LVU294
 308:.././crypto7/tiny-AES128-C/aes.c **** }
 921              		.loc 1 308 3 is_stmt 0 view .LVU295
 922              	.LBE76:
 923              	.LBE78:
 331:.././crypto7/tiny-AES128-C/aes.c ****   }
 924              		.loc 1 331 5 is_stmt 1 view .LVU296
 331:.././crypto7/tiny-AES128-C/aes.c ****   }
 925              		.loc 1 331 20 is_stmt 0 view .LVU297
 926 00dc DA70     		strb	r2, [r3, #3]
 316:.././crypto7/tiny-AES128-C/aes.c ****   {
 927              		.loc 1 316 22 is_stmt 1 view .LVU298
 928              	.LVL70:
 316:.././crypto7/tiny-AES128-C/aes.c ****   {
 929              		.loc 1 316 15 view .LVU299
 316:.././crypto7/tiny-AES128-C/aes.c ****   {
 930              		.loc 1 316 3 is_stmt 0 view .LVU300
 931 00de 0433     		adds	r3, r3, #4
 932              	.LVL71:
 316:.././crypto7/tiny-AES128-C/aes.c ****   {
 933              		.loc 1 316 3 view .LVU301
 934 00e0 9F42     		cmp	r7, r3
 935 00e2 B9D1     		bne	.L38
 936              	.LVL72:
 316:.././crypto7/tiny-AES128-C/aes.c ****   {
 937              		.loc 1 316 3 view .LVU302
 938              	.LBE79:
 939              	.LBE81:
 373:.././crypto7/tiny-AES128-C/aes.c ****     AddRoundKey(round);
 940              		.loc 1 373 5 is_stmt 1 discriminator 3 view .LVU303
 941 00e4 FFF7FEFF 		bl	Randomize_instruction_AK.constprop.0
 942              	.LVL73:
 374:.././crypto7/tiny-AES128-C/aes.c ****   }
 943              		.loc 1 374 5 discriminator 3 view .LVU304
 944 00e8 2046     		mov	r0, r4
 367:.././crypto7/tiny-AES128-C/aes.c ****   {
 945              		.loc 1 367 31 is_stmt 0 discriminator 3 view .LVU305
 946 00ea 0134     		adds	r4, r4, #1
 947              	.LVL74:
 367:.././crypto7/tiny-AES128-C/aes.c ****   {
 948              		.loc 1 367 31 discriminator 3 view .LVU306
 949 00ec E4B2     		uxtb	r4, r4
 374:.././crypto7/tiny-AES128-C/aes.c ****   }
 950              		.loc 1 374 5 discriminator 3 view .LVU307
 951 00ee FFF7FEFF 		bl	AddRoundKey
 952              	.LVL75:
 367:.././crypto7/tiny-AES128-C/aes.c ****   {
 953              		.loc 1 367 31 is_stmt 1 discriminator 3 view .LVU308
 367:.././crypto7/tiny-AES128-C/aes.c ****   {
 954              		.loc 1 367 19 discriminator 3 view .LVU309
 367:.././crypto7/tiny-AES128-C/aes.c ****   {
 955              		.loc 1 367 3 is_stmt 0 discriminator 3 view .LVU310
 956 00f2 0A2C     		cmp	r4, #10
 957 00f4 8ED1     		bne	.L39
 379:.././crypto7/tiny-AES128-C/aes.c ****   ShiftRows();
 958              		.loc 1 379 3 is_stmt 1 view .LVU311
 959 00f6 FFF7FEFF 		bl	SubBytes
 960              	.LVL76:
 380:.././crypto7/tiny-AES128-C/aes.c ****   AddRoundKey(Nr);
 961              		.loc 1 380 3 view .LVU312
 962 00fa FFF7FEFF 		bl	ShiftRows
 963              	.LVL77:
 381:.././crypto7/tiny-AES128-C/aes.c **** }
 964              		.loc 1 381 3 view .LVU313
 965 00fe 2046     		mov	r0, r4
 382:.././crypto7/tiny-AES128-C/aes.c **** 
 966              		.loc 1 382 1 is_stmt 0 view .LVU314
 967 0100 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 968              	.LCFI8:
 969              		.cfi_restore 14
 970              		.cfi_restore 10
 971              		.cfi_restore 9
 972              		.cfi_restore 8
 973              		.cfi_restore 7
 974              		.cfi_restore 6
 975              		.cfi_restore 5
 976              		.cfi_restore 4
 977              		.cfi_def_cfa_offset 0
 978              	.LVL78:
 381:.././crypto7/tiny-AES128-C/aes.c **** }
 979              		.loc 1 381 3 view .LVU315
 980 0104 FFF7FEBF 		b	AddRoundKey
 981              	.LVL79:
 982              	.L44:
 381:.././crypto7/tiny-AES128-C/aes.c **** }
 983              		.loc 1 381 3 view .LVU316
 984              		.align	2
 985              	.L43:
 986 0108 00000000 		.word	.LANCHOR1
 987 010c 00000000 		.word	.LANCHOR0
 988 0110 2A010000 		.word	.LANCHOR1+298
 989              		.cfi_endproc
 990              	.LFE9:
 992              		.section	.text.AES128_ECB_indp_setkey,"ax",%progbits
 993              		.align	1
 994              		.global	AES128_ECB_indp_setkey
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 998              		.fpu softvfp
 1000              	AES128_ECB_indp_setkey:
 1001              	.LVL80:
 1002              	.LFB12:
 392:.././crypto7/tiny-AES128-C/aes.c **** 
 393:.././crypto7/tiny-AES128-C/aes.c **** static void Debug(void)
 394:.././crypto7/tiny-AES128-C/aes.c **** {
 395:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t round = 0;
 396:.././crypto7/tiny-AES128-C/aes.c **** 
 397:.././crypto7/tiny-AES128-C/aes.c ****   // Add the First round key to the state before starting the rounds.
 398:.././crypto7/tiny-AES128-C/aes.c ****   Randomize_instruction_AK(round);
 399:.././crypto7/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 400:.././crypto7/tiny-AES128-C/aes.c **** 
 401:.././crypto7/tiny-AES128-C/aes.c ****   uint8_t i, j;
 402:.././crypto7/tiny-AES128-C/aes.c ****   for (i = 0; i < 4; ++i)
 403:.././crypto7/tiny-AES128-C/aes.c ****   {
 404:.././crypto7/tiny-AES128-C/aes.c ****     for (j = 0; j < 4; ++j)
 405:.././crypto7/tiny-AES128-C/aes.c ****     {
 406:.././crypto7/tiny-AES128-C/aes.c ****       (*state)[i][j] = instr_AK_order[round * Nb * 4 + i * Nb + j];
 407:.././crypto7/tiny-AES128-C/aes.c ****     }
 408:.././crypto7/tiny-AES128-C/aes.c ****   }
 409:.././crypto7/tiny-AES128-C/aes.c **** }
 410:.././crypto7/tiny-AES128-C/aes.c **** 
 411:.././crypto7/tiny-AES128-C/aes.c **** /*****************************************************************************/
 412:.././crypto7/tiny-AES128-C/aes.c **** /* Public functions:                                                         */
 413:.././crypto7/tiny-AES128-C/aes.c **** /*****************************************************************************/
 414:.././crypto7/tiny-AES128-C/aes.c **** 
 415:.././crypto7/tiny-AES128-C/aes.c **** void AES128_ECB_indp_setkey(uint8_t *key)
 416:.././crypto7/tiny-AES128-C/aes.c **** {
 1003              		.loc 1 416 1 is_stmt 1 view -0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 1007              		@ link register save eliminated.
 417:.././crypto7/tiny-AES128-C/aes.c ****   Key = key;
 1008              		.loc 1 417 3 view .LVU318
 1009              		.loc 1 417 7 is_stmt 0 view .LVU319
 1010 0000 014B     		ldr	r3, .L46
 1011 0002 1860     		str	r0, [r3]
 418:.././crypto7/tiny-AES128-C/aes.c ****   KeyExpansion();
 1012              		.loc 1 418 3 is_stmt 1 view .LVU320
 1013 0004 FFF7FEBF 		b	KeyExpansion
 1014              	.LVL81:
 1015              	.L47:
 1016              		.loc 1 418 3 is_stmt 0 view .LVU321
 1017              		.align	2
 1018              	.L46:
 1019 0008 00000000 		.word	.LANCHOR0
 1020              		.cfi_endproc
 1021              	.LFE12:
 1023              		.section	.text.AES128_ECB_indp_crypto,"ax",%progbits
 1024              		.align	1
 1025              		.global	AES128_ECB_indp_crypto
 1026              		.syntax unified
 1027              		.thumb
 1028              		.thumb_func
 1029              		.fpu softvfp
 1031              	AES128_ECB_indp_crypto:
 1032              	.LVL82:
 1033              	.LFB13:
 419:.././crypto7/tiny-AES128-C/aes.c **** }
 420:.././crypto7/tiny-AES128-C/aes.c **** 
 421:.././crypto7/tiny-AES128-C/aes.c **** void AES128_ECB_indp_crypto(uint8_t *input)
 422:.././crypto7/tiny-AES128-C/aes.c **** {
 1034              		.loc 1 422 1 is_stmt 1 view -0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 423:.././crypto7/tiny-AES128-C/aes.c ****   state = (state_t *)input;
 1038              		.loc 1 423 3 view .LVU323
 422:.././crypto7/tiny-AES128-C/aes.c ****   state = (state_t *)input;
 1039              		.loc 1 422 1 is_stmt 0 view .LVU324
 1040 0000 08B5     		push	{r3, lr}
 1041              	.LCFI9:
 1042              		.cfi_def_cfa_offset 8
 1043              		.cfi_offset 3, -8
 1044              		.cfi_offset 14, -4
 422:.././crypto7/tiny-AES128-C/aes.c ****   state = (state_t *)input;
 1045              		.loc 1 422 1 view .LVU325
 1046 0002 0146     		mov	r1, r0
 1047              		.loc 1 423 9 view .LVU326
 1048 0004 0448     		ldr	r0, .L49
 1049              	.LVL83:
 1050              		.loc 1 423 9 view .LVU327
 1051 0006 C0F8B410 		str	r1, [r0, #180]
 424:.././crypto7/tiny-AES128-C/aes.c ****   BlockCopy(input_save, input);
 1052              		.loc 1 424 3 is_stmt 1 view .LVU328
 1053 000a B830     		adds	r0, r0, #184
 1054 000c FFF7FEFF 		bl	BlockCopy
 1055              	.LVL84:
 425:.././crypto7/tiny-AES128-C/aes.c ****   Cipher();
 1056              		.loc 1 425 3 view .LVU329
 426:.././crypto7/tiny-AES128-C/aes.c **** }
 1057              		.loc 1 426 1 is_stmt 0 view .LVU330
 1058 0010 BDE80840 		pop	{r3, lr}
 1059              	.LCFI10:
 1060              		.cfi_restore 14
 1061              		.cfi_restore 3
 1062              		.cfi_def_cfa_offset 0
 425:.././crypto7/tiny-AES128-C/aes.c ****   Cipher();
 1063              		.loc 1 425 3 view .LVU331
 1064 0014 FFF7FEBF 		b	Cipher
 1065              	.LVL85:
 1066              	.L50:
 1067              		.align	2
 1068              	.L49:
 1069 0018 00000000 		.word	.LANCHOR0
 1070              		.cfi_endproc
 1071              	.LFE13:
 1073              		.section	.text.AES128_ECB_indp_crypto_debug,"ax",%progbits
 1074              		.align	1
 1075              		.global	AES128_ECB_indp_crypto_debug
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1079              		.fpu softvfp
 1081              	AES128_ECB_indp_crypto_debug:
 1082              	.LVL86:
 1083              	.LFB14:
 427:.././crypto7/tiny-AES128-C/aes.c **** 
 428:.././crypto7/tiny-AES128-C/aes.c **** void AES128_ECB_indp_crypto_debug(uint8_t *input)
 429:.././crypto7/tiny-AES128-C/aes.c **** {
 1084              		.loc 1 429 1 is_stmt 1 view -0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 430:.././crypto7/tiny-AES128-C/aes.c ****   state = (state_t *)input;
 1088              		.loc 1 430 3 view .LVU333
 429:.././crypto7/tiny-AES128-C/aes.c ****   state = (state_t *)input;
 1089              		.loc 1 429 1 is_stmt 0 view .LVU334
 1090 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1091              	.LCFI11:
 1092              		.cfi_def_cfa_offset 24
 1093              		.cfi_offset 3, -24
 1094              		.cfi_offset 4, -20
 1095              		.cfi_offset 5, -16
 1096              		.cfi_offset 6, -12
 1097              		.cfi_offset 7, -8
 1098              		.cfi_offset 14, -4
 1099              		.loc 1 430 9 view .LVU335
 1100 0002 0F4C     		ldr	r4, .L56
 1101 0004 0F4E     		ldr	r6, .L56+4
 1102 0006 C4F8B400 		str	r0, [r4, #180]
 431:.././crypto7/tiny-AES128-C/aes.c ****   BlockCopy(input_save, input);
 1103              		.loc 1 431 3 is_stmt 1 view .LVU336
 429:.././crypto7/tiny-AES128-C/aes.c ****   state = (state_t *)input;
 1104              		.loc 1 429 1 is_stmt 0 view .LVU337
 1105 000a 0146     		mov	r1, r0
 1106              		.loc 1 431 3 view .LVU338
 1107 000c 04F1B800 		add	r0, r4, #184
 1108              	.LVL87:
 1109              		.loc 1 431 3 view .LVU339
 1110 0010 FFF7FEFF 		bl	BlockCopy
 1111              	.LVL88:
 432:.././crypto7/tiny-AES128-C/aes.c ****   Debug();
 1112              		.loc 1 432 3 is_stmt 1 view .LVU340
 1113              	.LBB84:
 1114              	.LBI84:
 393:.././crypto7/tiny-AES128-C/aes.c **** {
 1115              		.loc 1 393 13 view .LVU341
 1116              	.LBB85:
 395:.././crypto7/tiny-AES128-C/aes.c **** 
 1117              		.loc 1 395 3 view .LVU342
 398:.././crypto7/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 1118              		.loc 1 398 3 view .LVU343
 1119 0014 FFF7FEFF 		bl	Randomize_instruction_AK.constprop.0
 1120              	.LVL89:
 399:.././crypto7/tiny-AES128-C/aes.c **** 
 1121              		.loc 1 399 3 view .LVU344
 1122 0018 0020     		movs	r0, #0
 1123 001a FFF7FEFF 		bl	AddRoundKey
 1124              	.LVL90:
 401:.././crypto7/tiny-AES128-C/aes.c ****   for (i = 0; i < 4; ++i)
 1125              		.loc 1 401 3 view .LVU345
 402:.././crypto7/tiny-AES128-C/aes.c ****   {
 1126              		.loc 1 402 3 view .LVU346
 402:.././crypto7/tiny-AES128-C/aes.c ****   {
 1127              		.loc 1 402 15 view .LVU347
 406:.././crypto7/tiny-AES128-C/aes.c ****     }
 1128              		.loc 1 406 8 is_stmt 0 view .LVU348
 1129 001e D4F8B410 		ldr	r1, [r4, #180]
 1130 0022 0023     		movs	r3, #0
 404:.././crypto7/tiny-AES128-C/aes.c ****     {
 1131              		.loc 1 404 5 view .LVU349
 1132 0024 0D1D     		adds	r5, r1, #4
 1133              	.LVL91:
 1134              	.L52:
 404:.././crypto7/tiny-AES128-C/aes.c ****     {
 1135              		.loc 1 404 17 is_stmt 1 view .LVU350
 1136 0026 F018     		adds	r0, r6, r3
 1137 0028 5A18     		adds	r2, r3, r1
 404:.././crypto7/tiny-AES128-C/aes.c ****     {
 1138              		.loc 1 404 5 is_stmt 0 view .LVU351
 1139 002a EC18     		adds	r4, r5, r3
 1140              	.LVL92:
 1141              	.L53:
 406:.././crypto7/tiny-AES128-C/aes.c ****     }
 1142              		.loc 1 406 7 is_stmt 1 view .LVU352
 406:.././crypto7/tiny-AES128-C/aes.c ****     }
 1143              		.loc 1 406 38 is_stmt 0 view .LVU353
 1144 002c 10F8017B 		ldrb	r7, [r0], #1	@ zero_extendqisi2
 1145              	.LVL93:
 406:.././crypto7/tiny-AES128-C/aes.c ****     }
 1146              		.loc 1 406 22 view .LVU354
 1147 0030 02F8017B 		strb	r7, [r2], #1
 404:.././crypto7/tiny-AES128-C/aes.c ****     {
 1148              		.loc 1 404 24 is_stmt 1 view .LVU355
 1149              	.LVL94:
 404:.././crypto7/tiny-AES128-C/aes.c ****     {
 1150              		.loc 1 404 17 view .LVU356
 404:.././crypto7/tiny-AES128-C/aes.c ****     {
 1151              		.loc 1 404 5 is_stmt 0 view .LVU357
 1152 0034 A242     		cmp	r2, r4
 1153 0036 F9D1     		bne	.L53
 402:.././crypto7/tiny-AES128-C/aes.c ****   {
 1154              		.loc 1 402 22 is_stmt 1 view .LVU358
 1155              	.LVL95:
 402:.././crypto7/tiny-AES128-C/aes.c ****   {
 1156              		.loc 1 402 15 view .LVU359
 402:.././crypto7/tiny-AES128-C/aes.c ****   {
 1157              		.loc 1 402 3 is_stmt 0 view .LVU360
 1158 0038 0433     		adds	r3, r3, #4
 1159              	.LVL96:
 402:.././crypto7/tiny-AES128-C/aes.c ****   {
 1160              		.loc 1 402 3 view .LVU361
 1161 003a 102B     		cmp	r3, #16
 1162 003c F3D1     		bne	.L52
 1163              	.LBE85:
 1164              	.LBE84:
 433:.././crypto7/tiny-AES128-C/aes.c **** }
 1165              		.loc 1 433 1 view .LVU362
 1166 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1167              	.LVL97:
 1168              	.L57:
 1169              		.loc 1 433 1 view .LVU363
 1170              		.align	2
 1171              	.L56:
 1172 0040 00000000 		.word	.LANCHOR0
 1173 0044 0B010000 		.word	.LANCHOR1+267
 1174              		.cfi_endproc
 1175              	.LFE14:
 1177              		.section	.text.AES128_ECB_encrypt,"ax",%progbits
 1178              		.align	1
 1179              		.global	AES128_ECB_encrypt
 1180              		.syntax unified
 1181              		.thumb
 1182              		.thumb_func
 1183              		.fpu softvfp
 1185              	AES128_ECB_encrypt:
 1186              	.LVL98:
 1187              	.LFB15:
 434:.././crypto7/tiny-AES128-C/aes.c **** 
 435:.././crypto7/tiny-AES128-C/aes.c **** void AES128_ECB_encrypt(uint8_t *input, uint8_t *key, uint8_t *output)
 436:.././crypto7/tiny-AES128-C/aes.c **** {
 1188              		.loc 1 436 1 is_stmt 1 view -0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 0
 1191              		@ frame_needed = 0, uses_anonymous_args = 0
 437:.././crypto7/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 438:.././crypto7/tiny-AES128-C/aes.c ****   BlockCopy(output, input);
 1192              		.loc 1 438 3 view .LVU365
 436:.././crypto7/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1193              		.loc 1 436 1 is_stmt 0 view .LVU366
 1194 0000 38B5     		push	{r3, r4, r5, lr}
 1195              	.LCFI12:
 1196              		.cfi_def_cfa_offset 16
 1197              		.cfi_offset 3, -16
 1198              		.cfi_offset 4, -12
 1199              		.cfi_offset 5, -8
 1200              		.cfi_offset 14, -4
 436:.././crypto7/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1201              		.loc 1 436 1 view .LVU367
 1202 0002 0D46     		mov	r5, r1
 1203              		.loc 1 438 3 view .LVU368
 1204 0004 0146     		mov	r1, r0
 1205              	.LVL99:
 1206              		.loc 1 438 3 view .LVU369
 1207 0006 1046     		mov	r0, r2
 1208              	.LVL100:
 436:.././crypto7/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1209              		.loc 1 436 1 view .LVU370
 1210 0008 1446     		mov	r4, r2
 1211              		.loc 1 438 3 view .LVU371
 1212 000a FFF7FEFF 		bl	BlockCopy
 1213              	.LVL101:
 439:.././crypto7/tiny-AES128-C/aes.c ****   state = (state_t *)output;
 1214              		.loc 1 439 3 is_stmt 1 view .LVU372
 1215              		.loc 1 439 9 is_stmt 0 view .LVU373
 1216 000e 054B     		ldr	r3, .L59
 1217 0010 C3F8B440 		str	r4, [r3, #180]
 440:.././crypto7/tiny-AES128-C/aes.c **** 
 441:.././crypto7/tiny-AES128-C/aes.c ****   Key = key;
 1218              		.loc 1 441 3 is_stmt 1 view .LVU374
 1219              		.loc 1 441 7 is_stmt 0 view .LVU375
 1220 0014 1D60     		str	r5, [r3]
 442:.././crypto7/tiny-AES128-C/aes.c ****   KeyExpansion();
 1221              		.loc 1 442 3 is_stmt 1 view .LVU376
 1222 0016 FFF7FEFF 		bl	KeyExpansion
 1223              	.LVL102:
 443:.././crypto7/tiny-AES128-C/aes.c **** 
 444:.././crypto7/tiny-AES128-C/aes.c ****   // The next function call encrypts the PlainText with the Key using AES algorithm.
 445:.././crypto7/tiny-AES128-C/aes.c ****   Cipher();
 1224              		.loc 1 445 3 view .LVU377
 446:.././crypto7/tiny-AES128-C/aes.c **** }...
 1225              		.loc 1 446 1 is_stmt 0 view .LVU378
 1226 001a BDE83840 		pop	{r3, r4, r5, lr}
 1227              	.LCFI13:
 1228              		.cfi_restore 14
 1229              		.cfi_restore 5
 1230              		.cfi_restore 4
 1231              		.cfi_restore 3
 1232              		.cfi_def_cfa_offset 0
 1233              	.LVL103:
 445:.././crypto7/tiny-AES128-C/aes.c ****   Cipher();
 1234              		.loc 1 445 3 view .LVU379
 1235 001e FFF7FEBF 		b	Cipher
 1236              	.LVL104:
 1237              	.L60:
 1238 0022 00BF     		.align	2
 1239              	.L59:
 1240 0024 00000000 		.word	.LANCHOR0
 1241              		.cfi_endproc
 1242              	.LFE15:
 1244              		.global	Rcon
 1245              		.global	rsbox
 1246              		.global	sbox
 1247              		.data
 1248              		.set	.LANCHOR1,. + 0
 1251              	sbox:
 1252 0000 637C777B 		.ascii	"c|w{\362ko\3050\001g+\376\327\253v\312\202\311}\372"
 1252      F26B6FC5 
 1252      3001672B 
 1252      FED7AB76 
 1252      CA82C97D 
 1253 0015 5947F0AD 		.ascii	"YG\360\255\324\242\257\234\244r\300\267\375\223&6?\367"
 1253      D4A2AF9C 
 1253      A472C0B7 
 1253      FD932636 
 1253      3FF7
 1254 0027 CC34A5E5 		.ascii	"\3144\245\345\361q\3301\025\004\307#\303\030\226\005"
 1254      F171D831 
 1254      1504C723 
 1254      C3189605 
 1255 0037 9A071280 		.ascii	"\232\007\022\200\342\353'\262u\011\203,\032\033nZ\240"
 1255      E2EB27B2 
 1255      7509832C 
 1255      1A1B6E5A 
 1255      A0
 1256 0048 523BD6B3 		.ascii	"R;\326\263)\343/\204S\321\000\355 \374\261[j\313\276"
 1256      29E32F84 
 1256      53D100ED 
 1256      20FCB15B 
 1256      6ACBBE
 1257 005b 394A4C58 		.ascii	"9JLX\317\320\357\252\373CM3\205E\371\002\177P<\237\250"
 1257      CFD0EFAA 
 1257      FB434D33 
 1257      8545F902 
 1257      7F503C9F 
 1258 0070 51A3408F 		.ascii	"Q\243@\217\222\2358\365\274\266\332!\020\377\363\322"
 1258      929D38F5 
 1258      BCB6DA21 
 1258      10FFF3D2 
 1259 0080 CD0C13EC 		.ascii	"\315\014\023\354_\227D\027\304\247~=d]\031s`\201O\334"
 1259      5F974417 
 1259      C4A77E3D 
 1259      645D1973 
 1259      60814FDC 
 1260 0094 222A9088 		.ascii	"\"*\220\210F\356\270\024\336^\013\333\3402:\012I\006"
 1260      46EEB814 
 1260      DE5E0BDB 
 1260      E0323A0A 
 1260      4906
 1261 00a6 245CC2D3 		.ascii	"$\\\302\323\254b\221\225\344y\347\3107m\215\325N\251"
 1261      AC629195 
 1261      E479E7C8 
 1261      376D8DD5 
 1261      4EA9
 1262 00b8 6C56F4EA 		.ascii	"lV\364\352ez\256\010\272x%.\034\246\264\306\350\335"
 1262      657AAE08 
 1262      BA78252E 
 1262      1CA6B4C6 
 1262      E8DD
 1263 00ca 741F4BBD 		.ascii	"t\037K\275\213\212p>\265fH\003\366\016a5W\271\206\301"
 1263      8B8A703E 
 1263      B5664803 
 1263      F60E6135 
 1263      57B986C1 
 1264 00de 1D9EE1F8 		.ascii	"\035\236\341\370\230\021i\331\216\224\233\036\207\351"
 1264      981169D9 
 1264      8E949B1E 
 1264      87E9
 1265 00ec CE5528DF 		.ascii	"\316U(\337\214\241\211\015\277\346BhA\231-\017\260T"
 1265      8CA1890D 
 1265      BFE64268 
 1265      41992D0F 
 1265      B054
 1266 00fe BB16     		.ascii	"\273\026"
 1269              	Rcon:
 1270 0100 8D010204 		.ascii	"\215\001\002\004\010\020 @\200\0336"
 1270      08102040 
 1270      801B36
 1273              	instr_AK_order:
 1274 010b 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 1274      04050607 
 1274      08090A0B 
 1274      0C
 1275 0118 0D0E0F   		.ascii	"\015\016\017"
 1278              	instr_SB_order:
 1279 011b 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 1279      04050607 
 1279      08090A0B 
 1279      0C
 1280 0128 0D0E0F   		.ascii	"\015\016\017"
 1283              	rsbox:
 1284 012b 52096AD5 		.ascii	"R\011j\32506\2458\277@\243\236\201\363\327\373|\343"
 1284      3036A538 
 1284      BF40A39E 
 1284      81F3D7FB 
 1284      7CE3
 1285 013d 39829B2F 		.ascii	"9\202\233/\377\2074\216CD\304\336\351\313T{\2242\246"
 1285      FF87348E 
 1285      4344C4DE 
 1285      E9CB547B 
 1285      9432A6
 1286 0150 C2233DEE 		.ascii	"\302#=\356L\225\013B\372\303N\010.\241f(\331$\262v["
 1286      4C950B42 
 1286      FAC34E08 
 1286      2EA16628 
 1286      D924B276 
 1287 0165 A2496D8B 		.ascii	"\242Im\213\321%r\370\366d\206h\230\026\324\244\\\314"
 1287      D12572F8 
 1287      F6648668 
 1287      9816D4A4 
 1287      5CCC
 1288 0177 5D65B692 		.ascii	"]e\266\222lpHP\375\355\271\332^\025FW\247\215\235\204"
 1288      6C704850 
 1288      FDEDB9DA 
 1288      5E154657 
 1288      A78D9D84 
 1289 018b 90D8AB00 		.ascii	"\220\330\253\000\214\274\323\012\367\344X\005\270\263"
 1289      8CBCD30A 
 1289      F7E45805 
 1289      B8B3
 1290 0199 4506D02C 		.ascii	"E\006\320,\036\217\312?\017\002\301\257\275\003\001"
 1290      1E8FCA3F 
 1290      0F02C1AF 
 1290      BD0301
 1291 01a8 138A6B3A 		.ascii	"\023\212k:\221\021AOg\334\352\227\362\317\316\360\264"
 1291      9111414F 
 1291      67DCEA97 
 1291      F2CFCEF0 
 1291      B4
 1292 01b9 E67396AC 		.ascii	"\346s\226\254t\"\347\2555\205\342\3717\350\034u\337"
 1292      7422E7AD 
 1292      3585E2F9 
 1292      37E81C75 
 1292      DF
 1293 01ca 6E47F11A 		.ascii	"nG\361\032q\035)\305\211o\267b\016\252\030\276\033\374"
 1293      711D29C5 
 1293      896FB762 
 1293      0EAA18BE 
 1293      1BFC
 1294 01dc 563E4BC6 		.ascii	"V>K\306\322y \232\333\300\376x\315Z\364\037\335\250"
 1294      D279209A 
 1294      DBC0FE78 
 1294      CD5AF41F 
 1294      DDA8
 1295 01ee 338807C7 		.ascii	"3\210\007\3071\261\022\020Y'\200\354_`Q\177\251\031"
 1295      31B11210 
 1295      592780EC 
 1295      5F60517F 
 1295      A919
 1296 0200 B54A0D2D 		.ascii	"\265J\015-\345z\237\223\311\234\357\240\340;M\256*\365"
 1296      E57A9F93 
 1296      C99CEFA0 
 1296      E03B4DAE 
 1296      2AF5
 1297 0212 B0C8EBBB 		.ascii	"\260\310\353\273<\203S\231a\027+\004~\272w\326&\341"
 1297      3C835399 
 1297      61172B04 
 1297      7EBA77D6 
 1297      26E1
 1298 0224 69146355 		.ascii	"i\024cU!\014}"
 1298      210C7D
 1299              		.bss
 1300              		.align	2
 1301              		.set	.LANCHOR0,. + 0
 1304              	Key:
 1305 0000 00000000 		.space	4
 1308              	RoundKey:
 1309 0004 00000000 		.space	176
 1309      00000000 
 1309      00000000 
 1309      00000000 
 1309      00000000 
 1312              	state:
 1313 00b4 00000000 		.space	4
 1316              	input_save:
 1317 00b8 00000000 		.space	16
 1317      00000000 
 1317      00000000 
 1317      00000000 
 1318              		.text
 1319              	.Letext0:
 1320              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1321              		.file 3 ".././crypto7/tiny-AES128-C/random_shift_rows.h"
 1322              		.file 4 "/usr/include/newlib/stdlib.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 aes.c
     /tmp/cctM1m5S.s:16     .text.KeyExpansion:0000000000000000 $t
     /tmp/cctM1m5S.s:23     .text.KeyExpansion:0000000000000000 KeyExpansion
     /tmp/cctM1m5S.s:232    .text.KeyExpansion:00000000000000a0 $d
     /tmp/cctM1m5S.s:239    .text.AddRoundKey:0000000000000000 $t
     /tmp/cctM1m5S.s:245    .text.AddRoundKey:0000000000000000 AddRoundKey
     /tmp/cctM1m5S.s:317    .text.AddRoundKey:000000000000003c $d
     /tmp/cctM1m5S.s:323    .text.SubBytes:0000000000000000 $t
     /tmp/cctM1m5S.s:329    .text.SubBytes:0000000000000000 SubBytes
     /tmp/cctM1m5S.s:422    .text.SubBytes:0000000000000030 $d
     /tmp/cctM1m5S.s:428    .text.BlockCopy:0000000000000000 $t
     /tmp/cctM1m5S.s:434    .text.BlockCopy:0000000000000000 BlockCopy
     /tmp/cctM1m5S.s:470    .text.ShiftRows:0000000000000000 $t
     /tmp/cctM1m5S.s:476    .text.ShiftRows:0000000000000000 ShiftRows
     /tmp/cctM1m5S.s:578    .text.ShiftRows:000000000000005c $d
     /tmp/cctM1m5S.s:584    .text.Randomize_instruction_AK.constprop.0:0000000000000000 $t
     /tmp/cctM1m5S.s:590    .text.Randomize_instruction_AK.constprop.0:0000000000000000 Randomize_instruction_AK.constprop.0
     /tmp/cctM1m5S.s:660    .text.Randomize_instruction_AK.constprop.0:0000000000000038 $d
     /tmp/cctM1m5S.s:665    .text.Cipher:0000000000000000 $t
     /tmp/cctM1m5S.s:671    .text.Cipher:0000000000000000 Cipher
     /tmp/cctM1m5S.s:986    .text.Cipher:0000000000000108 $d
     /tmp/cctM1m5S.s:993    .text.AES128_ECB_indp_setkey:0000000000000000 $t
     /tmp/cctM1m5S.s:1000   .text.AES128_ECB_indp_setkey:0000000000000000 AES128_ECB_indp_setkey
     /tmp/cctM1m5S.s:1019   .text.AES128_ECB_indp_setkey:0000000000000008 $d
     /tmp/cctM1m5S.s:1024   .text.AES128_ECB_indp_crypto:0000000000000000 $t
     /tmp/cctM1m5S.s:1031   .text.AES128_ECB_indp_crypto:0000000000000000 AES128_ECB_indp_crypto
     /tmp/cctM1m5S.s:1069   .text.AES128_ECB_indp_crypto:0000000000000018 $d
     /tmp/cctM1m5S.s:1074   .text.AES128_ECB_indp_crypto_debug:0000000000000000 $t
     /tmp/cctM1m5S.s:1081   .text.AES128_ECB_indp_crypto_debug:0000000000000000 AES128_ECB_indp_crypto_debug
     /tmp/cctM1m5S.s:1172   .text.AES128_ECB_indp_crypto_debug:0000000000000040 $d
     /tmp/cctM1m5S.s:1178   .text.AES128_ECB_encrypt:0000000000000000 $t
     /tmp/cctM1m5S.s:1185   .text.AES128_ECB_encrypt:0000000000000000 AES128_ECB_encrypt
     /tmp/cctM1m5S.s:1240   .text.AES128_ECB_encrypt:0000000000000024 $d
     /tmp/cctM1m5S.s:1269   .data:0000000000000100 Rcon
     /tmp/cctM1m5S.s:1283   .data:000000000000012b rsbox
     /tmp/cctM1m5S.s:1251   .data:0000000000000000 sbox
     /tmp/cctM1m5S.s:1273   .data:000000000000010b instr_AK_order
     /tmp/cctM1m5S.s:1278   .data:000000000000011b instr_SB_order
     /tmp/cctM1m5S.s:1300   .bss:0000000000000000 $d
     /tmp/cctM1m5S.s:1304   .bss:0000000000000000 Key
     /tmp/cctM1m5S.s:1308   .bss:0000000000000004 RoundKey
     /tmp/cctM1m5S.s:1312   .bss:00000000000000b4 state
     /tmp/cctM1m5S.s:1316   .bss:00000000000000b8 input_save

UNDEFINED SYMBOLS
malloc
free
shift_rows
clock
srand
rand
