   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"aes.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.KeyExpansion,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	KeyExpansion:
  24              	.LFB1:
  25              		.file 1 ".././crypto5/tiny-AES128-C/aes.c"
   1:.././crypto5/tiny-AES128-C/aes.c **** /* This AES-128 comes from https://github.com/kokke/tiny-AES128-C which is released into public dom
   2:.././crypto5/tiny-AES128-C/aes.c **** 
   3:.././crypto5/tiny-AES128-C/aes.c **** /*
   4:.././crypto5/tiny-AES128-C/aes.c **** 
   5:.././crypto5/tiny-AES128-C/aes.c **** This is an implementation of the AES128 algorithm, specifically ECB and CBC mode.
   6:.././crypto5/tiny-AES128-C/aes.c **** 
   7:.././crypto5/tiny-AES128-C/aes.c **** The implementation is verified against the test vectors in:
   8:.././crypto5/tiny-AES128-C/aes.c ****   National Institute of Standards and Technology Special Publication 800-38A 2001 ED
   9:.././crypto5/tiny-AES128-C/aes.c **** 
  10:.././crypto5/tiny-AES128-C/aes.c **** ECB-AES128
  11:.././crypto5/tiny-AES128-C/aes.c **** ----------
  12:.././crypto5/tiny-AES128-C/aes.c **** 
  13:.././crypto5/tiny-AES128-C/aes.c ****   plain-text:
  14:.././crypto5/tiny-AES128-C/aes.c ****     6bc1bee22e409f96e93d7e117393172a
  15:.././crypto5/tiny-AES128-C/aes.c ****     ae2d8a571e03ac9c9eb76fac45af8e51
  16:.././crypto5/tiny-AES128-C/aes.c ****     30c81c46a35ce411e5fbc1191a0a52ef
  17:.././crypto5/tiny-AES128-C/aes.c ****     f69f2445df4f9b17ad2b417be66c3710
  18:.././crypto5/tiny-AES128-C/aes.c **** 
  19:.././crypto5/tiny-AES128-C/aes.c ****   key:
  20:.././crypto5/tiny-AES128-C/aes.c ****     2b7e151628aed2a6abf7158809cf4f3c
  21:.././crypto5/tiny-AES128-C/aes.c **** 
  22:.././crypto5/tiny-AES128-C/aes.c ****   resulting cipher
  23:.././crypto5/tiny-AES128-C/aes.c ****     3ad77bb40d7a3660a89ecaf32466ef97
  24:.././crypto5/tiny-AES128-C/aes.c ****     f5d3d58503b9699de785895a96fdbaaf
  25:.././crypto5/tiny-AES128-C/aes.c ****     43b1cd7f598ece23881b00e3ed030688
  26:.././crypto5/tiny-AES128-C/aes.c ****     7b0c785e27e8ad3f8223207104725dd4
  27:.././crypto5/tiny-AES128-C/aes.c **** 
  28:.././crypto5/tiny-AES128-C/aes.c **** 
  29:.././crypto5/tiny-AES128-C/aes.c **** NOTE:   String length must be evenly divisible by 16byte (str_len % 16 == 0)
  30:.././crypto5/tiny-AES128-C/aes.c ****         You should pad the end of the string with zeros if this is not the case.
  31:.././crypto5/tiny-AES128-C/aes.c **** 
  32:.././crypto5/tiny-AES128-C/aes.c **** */
  33:.././crypto5/tiny-AES128-C/aes.c **** 
  34:.././crypto5/tiny-AES128-C/aes.c **** /*****************************************************************************/
  35:.././crypto5/tiny-AES128-C/aes.c **** /* Includes:                                                                 */
  36:.././crypto5/tiny-AES128-C/aes.c **** /*****************************************************************************/
  37:.././crypto5/tiny-AES128-C/aes.c **** #include <stdint.h>
  38:.././crypto5/tiny-AES128-C/aes.c **** #include <string.h> // CBC mode, for memset
  39:.././crypto5/tiny-AES128-C/aes.c **** #include "aes.h"
  40:.././crypto5/tiny-AES128-C/aes.c **** #include "random_shift_rows.h"
  41:.././crypto5/tiny-AES128-C/aes.c **** 
  42:.././crypto5/tiny-AES128-C/aes.c **** /*****************************************************************************/
  43:.././crypto5/tiny-AES128-C/aes.c **** /* Defines:                                                                  */
  44:.././crypto5/tiny-AES128-C/aes.c **** /*****************************************************************************/
  45:.././crypto5/tiny-AES128-C/aes.c **** // The number of columns comprising a state in AES. This is a constant in AES. Value=4
  46:.././crypto5/tiny-AES128-C/aes.c **** #define Nb 4
  47:.././crypto5/tiny-AES128-C/aes.c **** // The number of 32 bit words in a key.
  48:.././crypto5/tiny-AES128-C/aes.c **** #define Nk 4
  49:.././crypto5/tiny-AES128-C/aes.c **** // Key length in bytes [128 bit]
  50:.././crypto5/tiny-AES128-C/aes.c **** #define KEYLEN 16
  51:.././crypto5/tiny-AES128-C/aes.c **** // The number of rounds in AES Cipher.
  52:.././crypto5/tiny-AES128-C/aes.c **** // #define Nr 10
  53:.././crypto5/tiny-AES128-C/aes.c **** #define Nr 10
  54:.././crypto5/tiny-AES128-C/aes.c **** 
  55:.././crypto5/tiny-AES128-C/aes.c **** // jcallan@github points out that declaring Multiply as a function
  56:.././crypto5/tiny-AES128-C/aes.c **** // reduces code size considerably with the Keil ARM compiler.
  57:.././crypto5/tiny-AES128-C/aes.c **** // See this link for more information: https://github.com/kokke/tiny-AES128-C/pull/3
  58:.././crypto5/tiny-AES128-C/aes.c **** #ifndef MULTIPLY_AS_A_FUNCTION
  59:.././crypto5/tiny-AES128-C/aes.c **** #define MULTIPLY_AS_A_FUNCTION 0
  60:.././crypto5/tiny-AES128-C/aes.c **** #endif
  61:.././crypto5/tiny-AES128-C/aes.c **** 
  62:.././crypto5/tiny-AES128-C/aes.c **** /*****************************************************************************/
  63:.././crypto5/tiny-AES128-C/aes.c **** /* Private variables:                                                        */
  64:.././crypto5/tiny-AES128-C/aes.c **** /*****************************************************************************/
  65:.././crypto5/tiny-AES128-C/aes.c **** // state - array holding the intermediate results during decryption.
  66:.././crypto5/tiny-AES128-C/aes.c **** typedef uint8_t state_t[4][4];
  67:.././crypto5/tiny-AES128-C/aes.c **** static state_t *state;
  68:.././crypto5/tiny-AES128-C/aes.c **** static state_t *state_copy;
  69:.././crypto5/tiny-AES128-C/aes.c **** 
  70:.././crypto5/tiny-AES128-C/aes.c **** // The array that stores the round keys.
  71:.././crypto5/tiny-AES128-C/aes.c **** static uint8_t RoundKey[176];
  72:.././crypto5/tiny-AES128-C/aes.c **** 
  73:.././crypto5/tiny-AES128-C/aes.c **** static uint8_t input_save[16];
  74:.././crypto5/tiny-AES128-C/aes.c **** 
  75:.././crypto5/tiny-AES128-C/aes.c **** // The Key input to the AES Program
  76:.././crypto5/tiny-AES128-C/aes.c **** static uint8_t *Key;
  77:.././crypto5/tiny-AES128-C/aes.c **** 
  78:.././crypto5/tiny-AES128-C/aes.c **** // The lookup-tables are marked const so they can be placed in read-only storage instead of RAM
  79:.././crypto5/tiny-AES128-C/aes.c **** // The numbers below can be computed dynamically trading ROM for RAM -
  80:.././crypto5/tiny-AES128-C/aes.c **** // This can be useful in (embedded) bootloader applications, where ROM is often limited.
  81:.././crypto5/tiny-AES128-C/aes.c **** AES_CONST_VAR uint8_t sbox[256] = {
  82:.././crypto5/tiny-AES128-C/aes.c ****     // 0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F
  83:.././crypto5/tiny-AES128-C/aes.c ****     0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
  84:.././crypto5/tiny-AES128-C/aes.c ****     0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,
  85:.././crypto5/tiny-AES128-C/aes.c ****     0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,
  86:.././crypto5/tiny-AES128-C/aes.c ****     0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,
  87:.././crypto5/tiny-AES128-C/aes.c ****     0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,
  88:.././crypto5/tiny-AES128-C/aes.c ****     0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,
  89:.././crypto5/tiny-AES128-C/aes.c ****     0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,
  90:.././crypto5/tiny-AES128-C/aes.c ****     0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,
  91:.././crypto5/tiny-AES128-C/aes.c ****     0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,
  92:.././crypto5/tiny-AES128-C/aes.c ****     0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,
  93:.././crypto5/tiny-AES128-C/aes.c ****     0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,
  94:.././crypto5/tiny-AES128-C/aes.c ****     0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,
  95:.././crypto5/tiny-AES128-C/aes.c ****     0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,
  96:.././crypto5/tiny-AES128-C/aes.c ****     0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,
  97:.././crypto5/tiny-AES128-C/aes.c ****     0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
  98:.././crypto5/tiny-AES128-C/aes.c ****     0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16}
  99:.././crypto5/tiny-AES128-C/aes.c **** 
 100:.././crypto5/tiny-AES128-C/aes.c **** AES_CONST_VAR uint8_t rsbox[256] =
 101:.././crypto5/tiny-AES128-C/aes.c ****     {0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb
 102:.././crypto5/tiny-AES128-C/aes.c ****      0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb
 103:.././crypto5/tiny-AES128-C/aes.c ****      0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e
 104:.././crypto5/tiny-AES128-C/aes.c ****      0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25
 105:.././crypto5/tiny-AES128-C/aes.c ****      0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92
 106:.././crypto5/tiny-AES128-C/aes.c ****      0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84
 107:.././crypto5/tiny-AES128-C/aes.c ****      0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06
 108:.././crypto5/tiny-AES128-C/aes.c ****      0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b
 109:.././crypto5/tiny-AES128-C/aes.c ****      0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73
 110:.././crypto5/tiny-AES128-C/aes.c ****      0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e
 111:.././crypto5/tiny-AES128-C/aes.c ****      0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b
 112:.././crypto5/tiny-AES128-C/aes.c ****      0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4
 113:.././crypto5/tiny-AES128-C/aes.c ****      0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f
 114:.././crypto5/tiny-AES128-C/aes.c ****      0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef
 115:.././crypto5/tiny-AES128-C/aes.c ****      0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61
 116:.././crypto5/tiny-AES128-C/aes.c ****      0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d
 117:.././crypto5/tiny-AES128-C/aes.c **** 
 118:.././crypto5/tiny-AES128-C/aes.c **** // The round constant word array, Rcon[i], contains the values given by
 119:.././crypto5/tiny-AES128-C/aes.c **** // x to th e power (i-1) being powers of x (x is denoted as {02}) in the field GF(2^8)
 120:.././crypto5/tiny-AES128-C/aes.c **** // Note that i starts at 1, not 0).
 121:.././crypto5/tiny-AES128-C/aes.c **** AES_CONST_VAR uint8_t Rcon[11] = {
 122:.././crypto5/tiny-AES128-C/aes.c ****     0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36};
 123:.././crypto5/tiny-AES128-C/aes.c **** 
 124:.././crypto5/tiny-AES128-C/aes.c **** /*****************************************************************************/
 125:.././crypto5/tiny-AES128-C/aes.c **** /* Private functions:                                                        */
 126:.././crypto5/tiny-AES128-C/aes.c **** /*****************************************************************************/
 127:.././crypto5/tiny-AES128-C/aes.c **** static uint8_t getSBoxValue(uint8_t num)
 128:.././crypto5/tiny-AES128-C/aes.c **** {
 129:.././crypto5/tiny-AES128-C/aes.c ****   return sbox[num];
 130:.././crypto5/tiny-AES128-C/aes.c **** }
 131:.././crypto5/tiny-AES128-C/aes.c **** 
 132:.././crypto5/tiny-AES128-C/aes.c **** // This function produces Nb(Nr+1) round keys. The round keys are used in each round to decrypt the
 133:.././crypto5/tiny-AES128-C/aes.c **** static void KeyExpansion(void)
 134:.././crypto5/tiny-AES128-C/aes.c **** {
  26              		.loc 1 134 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
 135:.././crypto5/tiny-AES128-C/aes.c ****   uint32_t i, j, k;
  30              		.loc 1 135 3 view .LVU1
 136:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t tempa[4]; // Used for the column/row operations
  31              		.loc 1 136 3 view .LVU2
 137:.././crypto5/tiny-AES128-C/aes.c **** 
 138:.././crypto5/tiny-AES128-C/aes.c ****   // The first round key is the key itself.
 139:.././crypto5/tiny-AES128-C/aes.c ****   for (i = 0; i < Nk; ++i)
  32              		.loc 1 139 3 view .LVU3
  33              	.LVL0:
  34              		.loc 1 139 15 view .LVU4
 134:.././crypto5/tiny-AES128-C/aes.c ****   uint32_t i, j, k;
  35              		.loc 1 134 1 is_stmt 0 view .LVU5
  36 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 24
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42 0002 274A     		ldr	r2, .L9
  43 0004 52F8043B 		ldr	r3, [r2], #4
  44 0008 03F11001 		add	r1, r3, #16
  45              	.LVL1:
  46              	.L2:
 140:.././crypto5/tiny-AES128-C/aes.c ****   {
 141:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 0] = Key[(i * 4) + 0];
  47              		.loc 1 141 5 is_stmt 1 discriminator 3 view .LVU6
  48              		.loc 1 141 32 is_stmt 0 discriminator 3 view .LVU7
  49 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  50              		.loc 1 141 27 discriminator 3 view .LVU8
  51 000e 1070     		strb	r0, [r2]
 142:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 1] = Key[(i * 4) + 1];
  52              		.loc 1 142 5 is_stmt 1 discriminator 3 view .LVU9
  53              		.loc 1 142 32 is_stmt 0 discriminator 3 view .LVU10
  54 0010 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
  55              		.loc 1 142 27 discriminator 3 view .LVU11
  56 0012 5070     		strb	r0, [r2, #1]
 143:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 2] = Key[(i * 4) + 2];
  57              		.loc 1 143 5 is_stmt 1 discriminator 3 view .LVU12
  58              		.loc 1 143 32 is_stmt 0 discriminator 3 view .LVU13
  59 0014 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
  60              		.loc 1 143 27 discriminator 3 view .LVU14
  61 0016 9070     		strb	r0, [r2, #2]
 144:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 3] = Key[(i * 4) + 3];
  62              		.loc 1 144 5 is_stmt 1 discriminator 3 view .LVU15
  63              		.loc 1 144 32 is_stmt 0 discriminator 3 view .LVU16
  64 0018 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
  65              		.loc 1 144 27 discriminator 3 view .LVU17
  66 001a D070     		strb	r0, [r2, #3]
 139:.././crypto5/tiny-AES128-C/aes.c ****   {
  67              		.loc 1 139 23 is_stmt 1 discriminator 3 view .LVU18
 139:.././crypto5/tiny-AES128-C/aes.c ****   {
  68              		.loc 1 139 15 discriminator 3 view .LVU19
 139:.././crypto5/tiny-AES128-C/aes.c ****   {
  69              		.loc 1 139 3 is_stmt 0 discriminator 3 view .LVU20
  70 001c 0433     		adds	r3, r3, #4
  71 001e 8B42     		cmp	r3, r1
  72 0020 02F10402 		add	r2, r2, #4
  73 0024 F2D1     		bne	.L2
  74 0026 1F4B     		ldr	r3, .L9+4
  75              	.LBB12:
  76              	.LBB13:
 129:.././crypto5/tiny-AES128-C/aes.c **** }
  77              		.loc 1 129 14 view .LVU21
  78 0028 1F48     		ldr	r0, .L9+8
  79              	.LBE13:
  80              	.LBE12:
 139:.././crypto5/tiny-AES128-C/aes.c ****   {
  81              		.loc 1 139 3 view .LVU22
  82 002a 0421     		movs	r1, #4
  83              	.L3:
  84              	.LVL2:
 145:.././crypto5/tiny-AES128-C/aes.c ****   }
 146:.././crypto5/tiny-AES128-C/aes.c **** 
 147:.././crypto5/tiny-AES128-C/aes.c ****   // All other round keys are found from the previous round keys.
 148:.././crypto5/tiny-AES128-C/aes.c ****   for (; (i < (Nb * (Nr + 1))); ++i)
 149:.././crypto5/tiny-AES128-C/aes.c ****   {
 150:.././crypto5/tiny-AES128-C/aes.c ****     for (j = 0; j < 4; ++j)
  85              		.loc 1 150 17 is_stmt 1 view .LVU23
  86 002c 1A68     		ldr	r2, [r3]	@ unaligned
 151:.././crypto5/tiny-AES128-C/aes.c ****     {
 152:.././crypto5/tiny-AES128-C/aes.c ****       tempa[j] = RoundKey[(i - 1) * 4 + j];
  87              		.loc 1 152 16 is_stmt 0 view .LVU24
  88 002e 0192     		str	r2, [sp, #4]
  89              	.LVL3:
 153:.././crypto5/tiny-AES128-C/aes.c ****     }
 154:.././crypto5/tiny-AES128-C/aes.c ****     if (i % Nk == 0)
  90              		.loc 1 154 5 is_stmt 1 view .LVU25
  91              		.loc 1 154 8 is_stmt 0 view .LVU26
  92 0030 8C07     		lsls	r4, r1, #30
  93 0032 16D1     		bne	.L6
 155:.././crypto5/tiny-AES128-C/aes.c ****     {
 156:.././crypto5/tiny-AES128-C/aes.c ****       // This function rotates the 4 bytes in a word to the left once.
 157:.././crypto5/tiny-AES128-C/aes.c ****       // [a0,a1,a2,a3] becomes [a1,a2,a3,a0]
 158:.././crypto5/tiny-AES128-C/aes.c **** 
 159:.././crypto5/tiny-AES128-C/aes.c ****       // Function RotWord()
 160:.././crypto5/tiny-AES128-C/aes.c ****       {
 161:.././crypto5/tiny-AES128-C/aes.c ****         k = tempa[0];
  94              		.loc 1 161 9 is_stmt 1 view .LVU27
  95              	.LVL4:
 162:.././crypto5/tiny-AES128-C/aes.c ****         tempa[0] = tempa[1];
  96              		.loc 1 162 9 view .LVU28
 163:.././crypto5/tiny-AES128-C/aes.c ****         tempa[1] = tempa[2];
  97              		.loc 1 163 9 view .LVU29
 164:.././crypto5/tiny-AES128-C/aes.c ****         tempa[2] = tempa[3];
  98              		.loc 1 164 9 view .LVU30
 165:.././crypto5/tiny-AES128-C/aes.c ****         tempa[3] = k;
  99              		.loc 1 165 9 view .LVU31
 166:.././crypto5/tiny-AES128-C/aes.c ****       }
 167:.././crypto5/tiny-AES128-C/aes.c **** 
 168:.././crypto5/tiny-AES128-C/aes.c ****       // SubWord() is a function that takes a four-byte input word and
 169:.././crypto5/tiny-AES128-C/aes.c ****       // applies the S-box to each of the four bytes to produce an output word.
 170:.././crypto5/tiny-AES128-C/aes.c **** 
 171:.././crypto5/tiny-AES128-C/aes.c ****       // Function Subword()
 172:.././crypto5/tiny-AES128-C/aes.c ****       {
 173:.././crypto5/tiny-AES128-C/aes.c ****         tempa[0] = getSBoxValue(tempa[0]);
 100              		.loc 1 173 9 view .LVU32
 101              	.LBB17:
 102              	.LBI12:
 127:.././crypto5/tiny-AES128-C/aes.c **** {
 103              		.loc 1 127 16 view .LVU33
 104              	.LBB14:
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 105              		.loc 1 129 3 view .LVU34
 106              	.LBE14:
 107              	.LBE17:
 108              	.LBB18:
 109              	.LBB19:
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 110              		.loc 1 129 14 is_stmt 0 view .LVU35
 111 0034 C2F30745 		ubfx	r5, r2, #16, #8
 112              	.LBE19:
 113              	.LBE18:
 114              	.LBB21:
 115              	.LBB15:
 116 0038 C2F30724 		ubfx	r4, r2, #8, #8
 117              	.LBE15:
 118              	.LBE21:
 174:.././crypto5/tiny-AES128-C/aes.c ****         tempa[1] = getSBoxValue(tempa[1]);
 119              		.loc 1 174 18 view .LVU36
 120 003c 455D     		ldrb	r5, [r0, r5]	@ zero_extendqisi2
 121 003e 8DF80550 		strb	r5, [sp, #5]
 122              	.LVL5:
 123              	.LBB22:
 124              	.LBB23:
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 125              		.loc 1 129 14 view .LVU37
 126 0042 150E     		lsrs	r5, r2, #24
 127              	.LBE23:
 128              	.LBE22:
 129              	.LBB25:
 130              	.LBB26:
 131 0044 D2B2     		uxtb	r2, r2
 132              	.LBE26:
 133              	.LBE25:
 134              	.LBB28:
 135              	.LBB16:
 136 0046 045D     		ldrb	r4, [r0, r4]	@ zero_extendqisi2
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 137              		.loc 1 129 14 view .LVU38
 138              	.LBE16:
 139              	.LBE28:
 140              		.loc 1 174 9 is_stmt 1 view .LVU39
 141              	.LVL6:
 142              	.LBB29:
 143              	.LBI18:
 127:.././crypto5/tiny-AES128-C/aes.c **** {
 144              		.loc 1 127 16 view .LVU40
 145              	.LBB20:
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 146              		.loc 1 129 3 view .LVU41
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 147              		.loc 1 129 3 is_stmt 0 view .LVU42
 148              	.LBE20:
 149              	.LBE29:
 175:.././crypto5/tiny-AES128-C/aes.c ****         tempa[2] = getSBoxValue(tempa[2]);
 150              		.loc 1 175 9 is_stmt 1 view .LVU43
 151              	.LBB30:
 152              	.LBI22:
 127:.././crypto5/tiny-AES128-C/aes.c **** {
 153              		.loc 1 127 16 view .LVU44
 154              	.LBB24:
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 155              		.loc 1 129 3 view .LVU45
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 156              		.loc 1 129 3 is_stmt 0 view .LVU46
 157              	.LBE24:
 158              	.LBE30:
 176:.././crypto5/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 159              		.loc 1 176 18 view .LVU47
 160 0048 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 161 004a 8DF80720 		strb	r2, [sp, #7]
 177:.././crypto5/tiny-AES128-C/aes.c ****       }
 178:.././crypto5/tiny-AES128-C/aes.c **** 
 179:.././crypto5/tiny-AES128-C/aes.c ****       tempa[0] = tempa[0] ^ Rcon[i / Nk];
 162              		.loc 1 179 33 view .LVU48
 163 004e 00EB9102 		add	r2, r0, r1, lsr #2
 175:.././crypto5/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 164              		.loc 1 175 18 view .LVU49
 165 0052 455D     		ldrb	r5, [r0, r5]	@ zero_extendqisi2
 166              		.loc 1 179 16 view .LVU50
 167 0054 92F80021 		ldrb	r2, [r2, #256]	@ zero_extendqisi2
 175:.././crypto5/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 168              		.loc 1 175 18 view .LVU51
 169 0058 8DF80650 		strb	r5, [sp, #6]
 176:.././crypto5/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 170              		.loc 1 176 9 is_stmt 1 view .LVU52
 171              	.LVL7:
 172              	.LBB31:
 173              	.LBI25:
 127:.././crypto5/tiny-AES128-C/aes.c **** {
 174              		.loc 1 127 16 view .LVU53
 175              	.LBB27:
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 176              		.loc 1 129 3 view .LVU54
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 177              		.loc 1 129 3 is_stmt 0 view .LVU55
 178              	.LBE27:
 179              	.LBE31:
 180              		.loc 1 179 7 is_stmt 1 view .LVU56
 181              		.loc 1 179 16 is_stmt 0 view .LVU57
 182 005c 6240     		eors	r2, r2, r4
 183 005e 8DF80420 		strb	r2, [sp, #4]
 184              	.LVL8:
 185              	.L6:
 180:.././crypto5/tiny-AES128-C/aes.c ****     }
 181:.././crypto5/tiny-AES128-C/aes.c ****     else if (Nk > 6 && i % Nk == 4)
 182:.././crypto5/tiny-AES128-C/aes.c ****     {
 183:.././crypto5/tiny-AES128-C/aes.c ****       // Function Subword()
 184:.././crypto5/tiny-AES128-C/aes.c ****       {
 185:.././crypto5/tiny-AES128-C/aes.c ****         tempa[0] = getSBoxValue(tempa[0]);
 186:.././crypto5/tiny-AES128-C/aes.c ****         tempa[1] = getSBoxValue(tempa[1]);
 187:.././crypto5/tiny-AES128-C/aes.c ****         tempa[2] = getSBoxValue(tempa[2]);
 188:.././crypto5/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 189:.././crypto5/tiny-AES128-C/aes.c ****       }
 190:.././crypto5/tiny-AES128-C/aes.c ****     }
 191:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 0] = RoundKey[(i - Nk) * 4 + 0] ^ tempa[0];
 186              		.loc 1 191 5 is_stmt 1 view .LVU58
 187              		.loc 1 191 25 is_stmt 0 view .LVU59
 188 0062 13F80C2C 		ldrb	r2, [r3, #-12]	@ zero_extendqisi2
 189 0066 9DF80440 		ldrb	r4, [sp, #4]	@ zero_extendqisi2
 190 006a 6240     		eors	r2, r2, r4
 191 006c 1A71     		strb	r2, [r3, #4]
 192:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 1] = RoundKey[(i - Nk) * 4 + 1] ^ tempa[1];
 192              		.loc 1 192 5 is_stmt 1 view .LVU60
 193              		.loc 1 192 25 is_stmt 0 view .LVU61
 194 006e 9DF80540 		ldrb	r4, [sp, #5]	@ zero_extendqisi2
 195 0072 13F80B2C 		ldrb	r2, [r3, #-11]	@ zero_extendqisi2
 196 0076 6240     		eors	r2, r2, r4
 197 0078 5A71     		strb	r2, [r3, #5]
 193:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 2] = RoundKey[(i - Nk) * 4 + 2] ^ tempa[2];
 198              		.loc 1 193 5 is_stmt 1 view .LVU62
 199              		.loc 1 193 25 is_stmt 0 view .LVU63
 200 007a 9DF80640 		ldrb	r4, [sp, #6]	@ zero_extendqisi2
 201 007e 13F80A2C 		ldrb	r2, [r3, #-10]	@ zero_extendqisi2
 202 0082 6240     		eors	r2, r2, r4
 203 0084 9A71     		strb	r2, [r3, #6]
 194:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 3] = RoundKey[(i - Nk) * 4 + 3] ^ tempa[3];
 204              		.loc 1 194 5 is_stmt 1 view .LVU64
 205              		.loc 1 194 25 is_stmt 0 view .LVU65
 206 0086 9DF80740 		ldrb	r4, [sp, #7]	@ zero_extendqisi2
 207 008a 13F8092C 		ldrb	r2, [r3, #-9]	@ zero_extendqisi2
 148:.././crypto5/tiny-AES128-C/aes.c ****   {
 208              		.loc 1 148 33 view .LVU66
 209 008e 0131     		adds	r1, r1, #1
 210              	.LVL9:
 211              		.loc 1 194 25 view .LVU67
 212 0090 6240     		eors	r2, r2, r4
 148:.././crypto5/tiny-AES128-C/aes.c ****   {
 213              		.loc 1 148 3 view .LVU68
 214 0092 2C29     		cmp	r1, #44
 215              		.loc 1 194 25 view .LVU69
 216 0094 DA71     		strb	r2, [r3, #7]
 148:.././crypto5/tiny-AES128-C/aes.c ****   {
 217              		.loc 1 148 33 is_stmt 1 view .LVU70
 218              	.LVL10:
 148:.././crypto5/tiny-AES128-C/aes.c ****   {
 219              		.loc 1 148 10 view .LVU71
 148:.././crypto5/tiny-AES128-C/aes.c ****   {
 220              		.loc 1 148 3 is_stmt 0 view .LVU72
 221 0096 03F10403 		add	r3, r3, #4
 222 009a C7D1     		bne	.L3
 195:.././crypto5/tiny-AES128-C/aes.c ****   }
 196:.././crypto5/tiny-AES128-C/aes.c **** }
 223              		.loc 1 196 1 view .LVU73
 224 009c 03B0     		add	sp, sp, #12
 225              	.LCFI1:
 226              		.cfi_def_cfa_offset 12
 227              		@ sp needed
 228 009e 30BD     		pop	{r4, r5, pc}
 229              	.L10:
 230              		.align	2
 231              	.L9:
 232 00a0 00000000 		.word	.LANCHOR0
 233 00a4 10000000 		.word	.LANCHOR0+16
 234 00a8 00000000 		.word	.LANCHOR1
 235              		.cfi_endproc
 236              	.LFE1:
 238              		.section	.text.AddRoundKey,"ax",%progbits
 239              		.align	1
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu softvfp
 245              	AddRoundKey:
 246              	.LVL11:
 247              	.LFB3:
 197:.././crypto5/tiny-AES128-C/aes.c **** 
 198:.././crypto5/tiny-AES128-C/aes.c **** static void Randomize_permuation_key(uint8_t round)
 199:.././crypto5/tiny-AES128-C/aes.c **** {
 200:.././crypto5/tiny-AES128-C/aes.c ****   srand(clock());
 201:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 202:.././crypto5/tiny-AES128-C/aes.c ****   for (i = Nb * 4 - 1; i > 0; i--)
 203:.././crypto5/tiny-AES128-C/aes.c ****   {
 204:.././crypto5/tiny-AES128-C/aes.c ****     j = ((uint8_t)rand()) % (i + 1); // A random integer Fisher
 205:.././crypto5/tiny-AES128-C/aes.c ****     tmp = RoundKey[round * Nb * 4 + (i / 4) * Nb + (i % 4)];
 206:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (i / 4) * Nb + (i % 4)] = RoundKey[round * Nb * 4 + (j / 4) * Nb + (j
 207:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (j / 4) * Nb + (j % 4)] = tmp;
 208:.././crypto5/tiny-AES128-C/aes.c ****   }
 209:.././crypto5/tiny-AES128-C/aes.c **** }
 210:.././crypto5/tiny-AES128-C/aes.c **** 
 211:.././crypto5/tiny-AES128-C/aes.c **** // This function adds the round key to state.
 212:.././crypto5/tiny-AES128-C/aes.c **** // The round key is added to the state by an XOR function.
 213:.././crypto5/tiny-AES128-C/aes.c **** static void AddRoundKey(uint8_t round)
 214:.././crypto5/tiny-AES128-C/aes.c **** {
 248              		.loc 1 214 1 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 215:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t i, j;
 252              		.loc 1 215 3 view .LVU75
 216:.././crypto5/tiny-AES128-C/aes.c ****   for (i = 0; i < 4; ++i)
 253              		.loc 1 216 3 view .LVU76
 254              		.loc 1 216 15 view .LVU77
 217:.././crypto5/tiny-AES128-C/aes.c ****   {
 218:.././crypto5/tiny-AES128-C/aes.c ****     for (j = 0; j < 4; ++j)
 219:.././crypto5/tiny-AES128-C/aes.c ****     {
 220:.././crypto5/tiny-AES128-C/aes.c ****       (*state)[i][j] ^= RoundKey[round * Nb * 4 + i * Nb + j];
 255              		.loc 1 220 22 is_stmt 0 view .LVU78
 256 0000 0B4B     		ldr	r3, .L16
 214:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t i, j;
 257              		.loc 1 214 1 view .LVU79
 258 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 259              	.LCFI2:
 260              		.cfi_def_cfa_offset 20
 261              		.cfi_offset 4, -20
 262              		.cfi_offset 5, -16
 263              		.cfi_offset 6, -12
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
 266 0004 D3F8B440 		ldr	r4, [r3, #180]
 267 0008 0001     		lsls	r0, r0, #4
 268              	.LVL12:
 214:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t i, j;
 269              		.loc 1 214 1 view .LVU80
 270 000a 211D     		adds	r1, r4, #4
 271 000c 1A1D     		adds	r2, r3, #4
 272 000e 1434     		adds	r4, r4, #20
 273              	.LVL13:
 274              	.L12:
 218:.././crypto5/tiny-AES128-C/aes.c ****     {
 275              		.loc 1 218 17 is_stmt 1 view .LVU81
 276 0010 0B1F     		subs	r3, r1, #4
 277 0012 1618     		adds	r6, r2, r0
 278              	.LVL14:
 279              	.L13:
 280              		.loc 1 220 7 discriminator 3 view .LVU82
 281              		.loc 1 220 22 is_stmt 0 discriminator 3 view .LVU83
 282 0014 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 283              		.loc 1 220 33 discriminator 3 view .LVU84
 284 0016 16F8017B 		ldrb	r7, [r6], #1	@ zero_extendqisi2
 285              		.loc 1 220 22 discriminator 3 view .LVU85
 286 001a 7D40     		eors	r5, r5, r7
 287 001c 03F8015B 		strb	r5, [r3], #1
 218:.././crypto5/tiny-AES128-C/aes.c ****     {
 288              		.loc 1 218 24 is_stmt 1 discriminator 3 view .LVU86
 218:.././crypto5/tiny-AES128-C/aes.c ****     {
 289              		.loc 1 218 17 discriminator 3 view .LVU87
 218:.././crypto5/tiny-AES128-C/aes.c ****     {
 290              		.loc 1 218 5 is_stmt 0 discriminator 3 view .LVU88
 291 0020 8B42     		cmp	r3, r1
 292 0022 F7D1     		bne	.L13
 216:.././crypto5/tiny-AES128-C/aes.c ****   {
 293              		.loc 1 216 22 is_stmt 1 discriminator 2 view .LVU89
 294              	.LVL15:
 216:.././crypto5/tiny-AES128-C/aes.c ****   {
 295              		.loc 1 216 15 discriminator 2 view .LVU90
 216:.././crypto5/tiny-AES128-C/aes.c ****   {
 296              		.loc 1 216 3 is_stmt 0 discriminator 2 view .LVU91
 297 0024 191D     		adds	r1, r3, #4
 298 0026 A142     		cmp	r1, r4
 299 0028 00F10400 		add	r0, r0, #4
 300 002c F0D1     		bne	.L12
 221:.././crypto5/tiny-AES128-C/aes.c ****     }
 222:.././crypto5/tiny-AES128-C/aes.c ****   }
 223:.././crypto5/tiny-AES128-C/aes.c **** }
 301              		.loc 1 223 1 view .LVU92
 302 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 303              	.L17:
 304              		.align	2
 305              	.L16:
 306 0030 00000000 		.word	.LANCHOR0
 307              		.cfi_endproc
 308              	.LFE3:
 310              		.section	.text.SubBytes,"ax",%progbits
 311              		.align	1
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 317              	SubBytes:
 318              	.LFB4:
 224:.././crypto5/tiny-AES128-C/aes.c **** 
 225:.././crypto5/tiny-AES128-C/aes.c **** // The SubBytes Function Substitutes the values in the
 226:.././crypto5/tiny-AES128-C/aes.c **** // state matrix with values in an S-box.
 227:.././crypto5/tiny-AES128-C/aes.c **** static void SubBytes(void)
 228:.././crypto5/tiny-AES128-C/aes.c **** {
 319              		.loc 1 228 1 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 229:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t i, j;
 323              		.loc 1 229 3 view .LVU94
 230:.././crypto5/tiny-AES128-C/aes.c ****   for (i = 0; i < 4; ++i)
 324              		.loc 1 230 3 view .LVU95
 325              	.LVL16:
 326              		.loc 1 230 15 view .LVU96
 231:.././crypto5/tiny-AES128-C/aes.c ****   {
 232:.././crypto5/tiny-AES128-C/aes.c ****     for (j = 0; j < 4; ++j)
 233:.././crypto5/tiny-AES128-C/aes.c ****     {
 234:.././crypto5/tiny-AES128-C/aes.c ****       (*state)[j][i] = getSBoxValue((*state)[j][i]);
 327              		.loc 1 234 38 is_stmt 0 view .LVU97
 328 0000 094B     		ldr	r3, .L23
 329              	.LBB32:
 330              	.LBB33:
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 331              		.loc 1 129 14 view .LVU98
 332 0002 0A48     		ldr	r0, .L23+4
 333 0004 D3F8B430 		ldr	r3, [r3, #180]
 334              	.LBE33:
 335              	.LBE32:
 228:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t i, j;
 336              		.loc 1 228 1 view .LVU99
 337 0008 10B5     		push	{r4, lr}
 338              	.LCFI3:
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 4, -8
 341              		.cfi_offset 14, -4
 342 000a 191D     		adds	r1, r3, #4
 343              	.LVL17:
 344              	.L19:
 232:.././crypto5/tiny-AES128-C/aes.c ****     {
 345              		.loc 1 232 17 is_stmt 1 view .LVU100
 228:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t i, j;
 346              		.loc 1 228 1 is_stmt 0 view .LVU101
 347 000c 0022     		movs	r2, #0
 348              	.LVL18:
 349              	.L20:
 350              		.loc 1 234 7 is_stmt 1 discriminator 3 view .LVU102
 351              	.LBB35:
 352              	.LBI32:
 127:.././crypto5/tiny-AES128-C/aes.c **** {
 353              		.loc 1 127 16 discriminator 3 view .LVU103
 354              	.LBB34:
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 355              		.loc 1 129 3 discriminator 3 view .LVU104
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 356              		.loc 1 129 14 is_stmt 0 discriminator 3 view .LVU105
 357 000e 13F82240 		ldrb	r4, [r3, r2, lsl #2]	@ zero_extendqisi2
 358 0012 045D     		ldrb	r4, [r0, r4]	@ zero_extendqisi2
 359              	.LVL19:
 129:.././crypto5/tiny-AES128-C/aes.c **** }
 360              		.loc 1 129 14 discriminator 3 view .LVU106
 361              	.LBE34:
 362              	.LBE35:
 363              		.loc 1 234 22 discriminator 3 view .LVU107
 364 0014 03F82240 		strb	r4, [r3, r2, lsl #2]
 232:.././crypto5/tiny-AES128-C/aes.c ****     {
 365              		.loc 1 232 24 is_stmt 1 discriminator 3 view .LVU108
 366              	.LVL20:
 232:.././crypto5/tiny-AES128-C/aes.c ****     {
 367              		.loc 1 232 17 discriminator 3 view .LVU109
 232:.././crypto5/tiny-AES128-C/aes.c ****     {
 368              		.loc 1 232 5 is_stmt 0 discriminator 3 view .LVU110
 369 0018 0132     		adds	r2, r2, #1
 370              	.LVL21:
 232:.././crypto5/tiny-AES128-C/aes.c ****     {
 371              		.loc 1 232 5 discriminator 3 view .LVU111
 372 001a 042A     		cmp	r2, #4
 373 001c F7D1     		bne	.L20
 230:.././crypto5/tiny-AES128-C/aes.c ****   {
 374              		.loc 1 230 22 is_stmt 1 discriminator 2 view .LVU112
 375              	.LVL22:
 230:.././crypto5/tiny-AES128-C/aes.c ****   {
 376              		.loc 1 230 15 discriminator 2 view .LVU113
 230:.././crypto5/tiny-AES128-C/aes.c ****   {
 377              		.loc 1 230 3 is_stmt 0 discriminator 2 view .LVU114
 378 001e 0133     		adds	r3, r3, #1
 379              	.LVL23:
 230:.././crypto5/tiny-AES128-C/aes.c ****   {
 380              		.loc 1 230 3 discriminator 2 view .LVU115
 381 0020 8B42     		cmp	r3, r1
 382 0022 F3D1     		bne	.L19
 235:.././crypto5/tiny-AES128-C/aes.c ****     }
 236:.././crypto5/tiny-AES128-C/aes.c ****   }
 237:.././crypto5/tiny-AES128-C/aes.c **** }
 383              		.loc 1 237 1 view .LVU116
 384 0024 10BD     		pop	{r4, pc}
 385              	.L24:
 386 0026 00BF     		.align	2
 387              	.L23:
 388 0028 00000000 		.word	.LANCHOR0
 389 002c 00000000 		.word	.LANCHOR1
 390              		.cfi_endproc
 391              	.LFE4:
 393              		.section	.text.BlockCopy,"ax",%progbits
 394              		.align	1
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu softvfp
 400              	BlockCopy:
 401              	.LVL24:
 402              	.LFB9:
 238:.././crypto5/tiny-AES128-C/aes.c **** 
 239:.././crypto5/tiny-AES128-C/aes.c **** // The ShiftRows() function shifts the rows in the state to the left.
 240:.././crypto5/tiny-AES128-C/aes.c **** // Each row is shifted with different offset.
 241:.././crypto5/tiny-AES128-C/aes.c **** // Offset = Row number. So the first row is not shifted.
 242:.././crypto5/tiny-AES128-C/aes.c **** static void ShiftRows(void)
 243:.././crypto5/tiny-AES128-C/aes.c **** {
 244:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t temp;
 245:.././crypto5/tiny-AES128-C/aes.c ****   state_copy = (state_t *)malloc(sizeof(state_t) * 16);
 246:.././crypto5/tiny-AES128-C/aes.c **** 
 247:.././crypto5/tiny-AES128-C/aes.c ****   // Randomize_permuation();
 248:.././crypto5/tiny-AES128-C/aes.c **** 
 249:.././crypto5/tiny-AES128-C/aes.c ****   for (temp = 0; temp < 16; ++temp)
 250:.././crypto5/tiny-AES128-C/aes.c ****   {
 251:.././crypto5/tiny-AES128-C/aes.c ****     (*state_copy)[temp % 4][temp / 4] = (*state)[temp % 4][temp / 4]; // NOTE: [column index][row i
 252:.././crypto5/tiny-AES128-C/aes.c ****   }
 253:.././crypto5/tiny-AES128-C/aes.c **** 
 254:.././crypto5/tiny-AES128-C/aes.c ****   for (temp = 0; temp < 16; ++temp)
 255:.././crypto5/tiny-AES128-C/aes.c ****   {
 256:.././crypto5/tiny-AES128-C/aes.c ****     (*state)[temp % 4][temp / 4] = (*state_copy)[shift_rows[temp] % 4][shift_rows[temp] / 4];
 257:.././crypto5/tiny-AES128-C/aes.c ****   }
 258:.././crypto5/tiny-AES128-C/aes.c **** 
 259:.././crypto5/tiny-AES128-C/aes.c ****   free(state_copy);
 260:.././crypto5/tiny-AES128-C/aes.c **** 
 261:.././crypto5/tiny-AES128-C/aes.c ****   /*
 262:.././crypto5/tiny-AES128-C/aes.c ****   // Rotate first row 1 columns to left
 263:.././crypto5/tiny-AES128-C/aes.c ****   temp = (*state)[0][1];
 264:.././crypto5/tiny-AES128-C/aes.c ****   (*state)[0][1] = (*state)[1][1];
 265:.././crypto5/tiny-AES128-C/aes.c ****   (*state)[1][1] = (*state)[2][1];
 266:.././crypto5/tiny-AES128-C/aes.c ****   (*state)[2][1] = (*state)[3][1];
 267:.././crypto5/tiny-AES128-C/aes.c ****   (*state)[3][1] = temp;
 268:.././crypto5/tiny-AES128-C/aes.c **** 
 269:.././crypto5/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left
 270:.././crypto5/tiny-AES128-C/aes.c ****   temp = (*state)[0][2];
 271:.././crypto5/tiny-AES128-C/aes.c ****   (*state)[0][2] = (*state)[2][2];
 272:.././crypto5/tiny-AES128-C/aes.c ****   (*state)[2][2] = temp;
 273:.././crypto5/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left
 274:.././crypto5/tiny-AES128-C/aes.c ****   temp = (*state)[1][2];
 275:.././crypto5/tiny-AES128-C/aes.c ****   (*state)[1][2] = (*state)[3][2];
 276:.././crypto5/tiny-AES128-C/aes.c ****   (*state)[3][2] = temp;
 277:.././crypto5/tiny-AES128-C/aes.c **** 
 278:.././crypto5/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left
 279:.././crypto5/tiny-AES128-C/aes.c **** 
 280:.././crypto5/tiny-AES128-C/aes.c ****   // Rotate third row 3 columns to left
 281:.././crypto5/tiny-AES128-C/aes.c ****   temp = (*state)[0][3];
 282:.././crypto5/tiny-AES128-C/aes.c ****   (*state)[0][3] = (*state)[3][3];
 283:.././crypto5/tiny-AES128-C/aes.c ****   (*state)[3][3] = (*state)[2][3];
 284:.././crypto5/tiny-AES128-C/aes.c ****   (*state)[2][3] = (*state)[1][3];
 285:.././crypto5/tiny-AES128-C/aes.c ****   (*state)[1][3] = temp;
 286:.././crypto5/tiny-AES128-C/aes.c ****   */
 287:.././crypto5/tiny-AES128-C/aes.c **** }
 288:.././crypto5/tiny-AES128-C/aes.c **** 
 289:.././crypto5/tiny-AES128-C/aes.c **** static uint8_t xtime(uint8_t x)
 290:.././crypto5/tiny-AES128-C/aes.c **** {
 291:.././crypto5/tiny-AES128-C/aes.c ****   return ((x << 1) ^ (((x >> 7) & 1) * 0x1b));
 292:.././crypto5/tiny-AES128-C/aes.c **** }
 293:.././crypto5/tiny-AES128-C/aes.c **** 
 294:.././crypto5/tiny-AES128-C/aes.c **** // MixColumns function mixes the columns of the state matrix
 295:.././crypto5/tiny-AES128-C/aes.c **** static void MixColumns(void)
 296:.././crypto5/tiny-AES128-C/aes.c **** {
 297:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t i;
 298:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t Tmp, Tm, t;
 299:.././crypto5/tiny-AES128-C/aes.c ****   for (i = 0; i < 4; ++i)
 300:.././crypto5/tiny-AES128-C/aes.c ****   {
 301:.././crypto5/tiny-AES128-C/aes.c ****     t = (*state)[i][0];
 302:.././crypto5/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3];
 303:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 304:.././crypto5/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 305:.././crypto5/tiny-AES128-C/aes.c ****     (*state)[i][0] ^= Tm ^ Tmp;
 306:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][1] ^ (*state)[i][2];
 307:.././crypto5/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 308:.././crypto5/tiny-AES128-C/aes.c ****     (*state)[i][1] ^= Tm ^ Tmp;
 309:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][2] ^ (*state)[i][3];
 310:.././crypto5/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 311:.././crypto5/tiny-AES128-C/aes.c ****     (*state)[i][2] ^= Tm ^ Tmp;
 312:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][3] ^ t;
 313:.././crypto5/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 314:.././crypto5/tiny-AES128-C/aes.c ****     (*state)[i][3] ^= Tm ^ Tmp;
 315:.././crypto5/tiny-AES128-C/aes.c ****   }
 316:.././crypto5/tiny-AES128-C/aes.c **** }
 317:.././crypto5/tiny-AES128-C/aes.c **** 
 318:.././crypto5/tiny-AES128-C/aes.c **** // Multiply is used to multiply numbers in the field GF(2^8)
 319:.././crypto5/tiny-AES128-C/aes.c **** #if MULTIPLY_AS_A_FUNCTION
 320:.././crypto5/tiny-AES128-C/aes.c **** static uint8_t Multiply(uint8_t x, uint8_t y)
 321:.././crypto5/tiny-AES128-C/aes.c **** {
 322:.././crypto5/tiny-AES128-C/aes.c ****   return (((y & 1) * x) ^
 323:.././crypto5/tiny-AES128-C/aes.c ****           ((y >> 1 & 1) * xtime(x)) ^
 324:.././crypto5/tiny-AES128-C/aes.c ****           ((y >> 2 & 1) * xtime(xtime(x))) ^
 325:.././crypto5/tiny-AES128-C/aes.c ****           ((y >> 3 & 1) * xtime(xtime(xtime(x)))) ^
 326:.././crypto5/tiny-AES128-C/aes.c ****           ((y >> 4 & 1) * xtime(xtime(xtime(xtime(x))))));
 327:.././crypto5/tiny-AES128-C/aes.c **** }
 328:.././crypto5/tiny-AES128-C/aes.c **** #else
 329:.././crypto5/tiny-AES128-C/aes.c **** #define Multiply(x, y)                       \
 330:.././crypto5/tiny-AES128-C/aes.c ****   (((y & 1) * x) ^                           \
 331:.././crypto5/tiny-AES128-C/aes.c ****    ((y >> 1 & 1) * xtime(x)) ^               \
 332:.././crypto5/tiny-AES128-C/aes.c ****    ((y >> 2 & 1) * xtime(xtime(x))) ^        \
 333:.././crypto5/tiny-AES128-C/aes.c ****    ((y >> 3 & 1) * xtime(xtime(xtime(x)))) ^ \
 334:.././crypto5/tiny-AES128-C/aes.c ****    ((y >> 4 & 1) * xtime(xtime(xtime(xtime(x))))))
 335:.././crypto5/tiny-AES128-C/aes.c **** 
 336:.././crypto5/tiny-AES128-C/aes.c **** #endif
 337:.././crypto5/tiny-AES128-C/aes.c **** 
 338:.././crypto5/tiny-AES128-C/aes.c **** // Cipher is the main function that encrypts the PlainText.
 339:.././crypto5/tiny-AES128-C/aes.c **** static void Cipher(void)
 340:.././crypto5/tiny-AES128-C/aes.c **** {
 341:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t round = 0;
 342:.././crypto5/tiny-AES128-C/aes.c **** 
 343:.././crypto5/tiny-AES128-C/aes.c ****   // Add the First round key to the state before starting the rounds.
 344:.././crypto5/tiny-AES128-C/aes.c ****   Randomize_permuation_key(round);
 345:.././crypto5/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 346:.././crypto5/tiny-AES128-C/aes.c **** 
 347:.././crypto5/tiny-AES128-C/aes.c ****   // There will be Nr rounds.
 348:.././crypto5/tiny-AES128-C/aes.c ****   // The first Nr-1 rounds are identical.
 349:.././crypto5/tiny-AES128-C/aes.c ****   // These Nr-1 rounds are executed in the loop below.
 350:.././crypto5/tiny-AES128-C/aes.c ****   for (round = 1; round < Nr; ++round)
 351:.././crypto5/tiny-AES128-C/aes.c ****   {
 352:.././crypto5/tiny-AES128-C/aes.c ****     SubBytes();
 353:.././crypto5/tiny-AES128-C/aes.c ****     ShiftRows();
 354:.././crypto5/tiny-AES128-C/aes.c ****     MixColumns();
 355:.././crypto5/tiny-AES128-C/aes.c ****     Randomize_permuation_key(round);
 356:.././crypto5/tiny-AES128-C/aes.c ****     AddRoundKey(round);
 357:.././crypto5/tiny-AES128-C/aes.c ****   }
 358:.././crypto5/tiny-AES128-C/aes.c **** 
 359:.././crypto5/tiny-AES128-C/aes.c ****   // The last round is given below.
 360:.././crypto5/tiny-AES128-C/aes.c ****   // The MixColumns function is not here in the last round.
 361:.././crypto5/tiny-AES128-C/aes.c ****   SubBytes();
 362:.././crypto5/tiny-AES128-C/aes.c ****   ShiftRows();
 363:.././crypto5/tiny-AES128-C/aes.c ****   AddRoundKey(Nr);
 364:.././crypto5/tiny-AES128-C/aes.c **** }
 365:.././crypto5/tiny-AES128-C/aes.c **** 
 366:.././crypto5/tiny-AES128-C/aes.c **** static void BlockCopy(uint8_t *output, const uint8_t *input)
 367:.././crypto5/tiny-AES128-C/aes.c **** {
 403              		.loc 1 367 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 368:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t i;
 408              		.loc 1 368 3 view .LVU118
 369:.././crypto5/tiny-AES128-C/aes.c ****   for (i = 0; i < KEYLEN; ++i)
 409              		.loc 1 369 3 view .LVU119
 410              		.loc 1 369 15 view .LVU120
 411 0000 4B1E     		subs	r3, r1, #1
 412 0002 0138     		subs	r0, r0, #1
 413              	.LVL25:
 414              		.loc 1 369 15 is_stmt 0 view .LVU121
 415 0004 0F31     		adds	r1, r1, #15
 416              	.LVL26:
 417              	.L26:
 370:.././crypto5/tiny-AES128-C/aes.c ****   {
 371:.././crypto5/tiny-AES128-C/aes.c ****     output[i] = input[i];
 418              		.loc 1 371 5 is_stmt 1 discriminator 3 view .LVU122
 419              		.loc 1 371 22 is_stmt 0 discriminator 3 view .LVU123
 420 0006 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
 421              	.LVL27:
 422              		.loc 1 371 15 discriminator 3 view .LVU124
 423 000a 00F8012F 		strb	r2, [r0, #1]!
 369:.././crypto5/tiny-AES128-C/aes.c ****   for (i = 0; i < KEYLEN; ++i)
 424              		.loc 1 369 27 is_stmt 1 discriminator 3 view .LVU125
 425              	.LVL28:
 369:.././crypto5/tiny-AES128-C/aes.c ****   for (i = 0; i < KEYLEN; ++i)
 426              		.loc 1 369 15 discriminator 3 view .LVU126
 369:.././crypto5/tiny-AES128-C/aes.c ****   for (i = 0; i < KEYLEN; ++i)
 427              		.loc 1 369 3 is_stmt 0 discriminator 3 view .LVU127
 428 000e 8B42     		cmp	r3, r1
 429 0010 F9D1     		bne	.L26
 372:.././crypto5/tiny-AES128-C/aes.c ****   }
 373:.././crypto5/tiny-AES128-C/aes.c **** }
 430              		.loc 1 373 1 view .LVU128
 431 0012 7047     		bx	lr
 432              		.cfi_endproc
 433              	.LFE9:
 435              		.section	.text.Randomize_permuation_key,"ax",%progbits
 436              		.align	1
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu softvfp
 442              	Randomize_permuation_key:
 443              	.LVL29:
 444              	.LFB2:
 199:.././crypto5/tiny-AES128-C/aes.c ****   srand(clock());
 445              		.loc 1 199 1 is_stmt 1 view -0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 200:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 449              		.loc 1 200 3 view .LVU130
 199:.././crypto5/tiny-AES128-C/aes.c ****   srand(clock());
 450              		.loc 1 199 1 is_stmt 0 view .LVU131
 451 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 452              	.LCFI4:
 453              		.cfi_def_cfa_offset 24
 454              		.cfi_offset 4, -24
 455              		.cfi_offset 5, -20
 456              		.cfi_offset 6, -16
 457              		.cfi_offset 7, -12
 458              		.cfi_offset 8, -8
 459              		.cfi_offset 14, -4
 199:.././crypto5/tiny-AES128-C/aes.c ****   srand(clock());
 460              		.loc 1 199 1 view .LVU132
 461 0004 0546     		mov	r5, r0
 200:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 462              		.loc 1 200 9 view .LVU133
 463 0006 FFF7FEFF 		bl	clock
 464              	.LVL30:
 200:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t i, j, tmp;
 465              		.loc 1 200 3 view .LVU134
 466 000a FFF7FEFF 		bl	srand
 467              	.LVL31:
 201:.././crypto5/tiny-AES128-C/aes.c ****   for (i = Nb * 4 - 1; i > 0; i--)
 468              		.loc 1 201 3 is_stmt 1 view .LVU135
 202:.././crypto5/tiny-AES128-C/aes.c ****   {
 469              		.loc 1 202 3 view .LVU136
 202:.././crypto5/tiny-AES128-C/aes.c ****   {
 470              		.loc 1 202 24 view .LVU137
 205:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (i / 4) * Nb + (i % 4)] = RoundKey[round * Nb * 4 + (j / 4) * Nb + (j
 471              		.loc 1 205 9 is_stmt 0 view .LVU138
 472 000e 134F     		ldr	r7, .L31
 205:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (i / 4) * Nb + (i % 4)] = RoundKey[round * Nb * 4 + (j / 4) * Nb + (j
 473              		.loc 1 205 35 view .LVU139
 474 0010 AD00     		lsls	r5, r5, #2
 475 0012 4FF01008 		mov	r8, #16
 476              	.LVL32:
 477              	.L29:
 204:.././crypto5/tiny-AES128-C/aes.c ****     tmp = RoundKey[round * Nb * 4 + (i / 4) * Nb + (i % 4)];
 478              		.loc 1 204 19 discriminator 3 view .LVU140
 479 0016 FFF7FEFF 		bl	rand
 480              	.LVL33:
 481 001a 08F1FF36 		add	r6, r8, #-1
 482 001e F4B2     		uxtb	r4, r6
 483              	.LVL34:
 204:.././crypto5/tiny-AES128-C/aes.c ****     tmp = RoundKey[round * Nb * 4 + (i / 4) * Nb + (i % 4)];
 484              		.loc 1 204 5 is_stmt 1 discriminator 3 view .LVU141
 204:.././crypto5/tiny-AES128-C/aes.c ****     tmp = RoundKey[round * Nb * 4 + (i / 4) * Nb + (i % 4)];
 485              		.loc 1 204 27 is_stmt 0 discriminator 3 view .LVU142
 486 0020 C0B2     		uxtb	r0, r0
 487 0022 B0FBF8F3 		udiv	r3, r0, r8
 488 0026 08FB1300 		mls	r0, r8, r3, r0
 489              	.LVL35:
 205:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (i / 4) * Nb + (i % 4)] = RoundKey[round * Nb * 4 + (j / 4) * Nb + (j
 490              		.loc 1 205 5 is_stmt 1 discriminator 3 view .LVU143
 205:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (i / 4) * Nb + (i % 4)] = RoundKey[round * Nb * 4 + (j / 4) * Nb + (j
 491              		.loc 1 205 35 is_stmt 0 discriminator 3 view .LVU144
 492 002a 05EB9403 		add	r3, r5, r4, lsr #2
 205:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (i / 4) * Nb + (i % 4)] = RoundKey[round * Nb * 4 + (j / 4) * Nb + (j
 493              		.loc 1 205 55 discriminator 3 view .LVU145
 494 002e 04F00304 		and	r4, r4, #3
 495              	.LVL36:
 205:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (i / 4) * Nb + (i % 4)] = RoundKey[round * Nb * 4 + (j / 4) * Nb + (j
 496              		.loc 1 205 50 discriminator 3 view .LVU146
 497 0032 04EB8304 		add	r4, r4, r3, lsl #2
 206:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (j / 4) * Nb + (j % 4)] = tmp;
 498              		.loc 1 206 86 discriminator 3 view .LVU147
 499 0036 C0F38503 		ubfx	r3, r0, #2, #6
 206:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (j / 4) * Nb + (j % 4)] = tmp;
 500              		.loc 1 206 81 discriminator 3 view .LVU148
 501 003a 5A19     		adds	r2, r3, r5
 206:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (j / 4) * Nb + (j % 4)] = tmp;
 502              		.loc 1 206 101 discriminator 3 view .LVU149
 503 003c 00F00303 		and	r3, r0, #3
 206:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (j / 4) * Nb + (j % 4)] = tmp;
 504              		.loc 1 206 96 discriminator 3 view .LVU150
 505 0040 03EB8203 		add	r3, r3, r2, lsl #2
 205:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (i / 4) * Nb + (i % 4)] = RoundKey[round * Nb * 4 + (j / 4) * Nb + (j
 506              		.loc 1 205 9 discriminator 3 view .LVU151
 507 0044 3C44     		add	r4, r4, r7
 206:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (j / 4) * Nb + (j % 4)] = tmp;
 508              		.loc 1 206 65 discriminator 3 view .LVU152
 509 0046 3B44     		add	r3, r3, r7
 205:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (i / 4) * Nb + (i % 4)] = RoundKey[round * Nb * 4 + (j / 4) * Nb + (j
 510              		.loc 1 205 9 discriminator 3 view .LVU153
 511 0048 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 512              	.LVL37:
 206:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (j / 4) * Nb + (j % 4)] = tmp;
 513              		.loc 1 206 5 is_stmt 1 discriminator 3 view .LVU154
 206:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (j / 4) * Nb + (j % 4)] = tmp;
 514              		.loc 1 206 65 is_stmt 0 discriminator 3 view .LVU155
 515 004a 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 206:.././crypto5/tiny-AES128-C/aes.c ****     RoundKey[round * Nb * 4 + (j / 4) * Nb + (j % 4)] = tmp;
 516              		.loc 1 206 55 discriminator 3 view .LVU156
 517 004c 2271     		strb	r2, [r4, #4]
 207:.././crypto5/tiny-AES128-C/aes.c ****   }
 518              		.loc 1 207 5 is_stmt 1 discriminator 3 view .LVU157
 202:.././crypto5/tiny-AES128-C/aes.c ****   {
 519              		.loc 1 202 3 is_stmt 0 discriminator 3 view .LVU158
 520 004e 012E     		cmp	r6, #1
 207:.././crypto5/tiny-AES128-C/aes.c ****   }
 521              		.loc 1 207 55 discriminator 3 view .LVU159
 522 0050 1971     		strb	r1, [r3, #4]
 202:.././crypto5/tiny-AES128-C/aes.c ****   {
 523              		.loc 1 202 31 is_stmt 1 discriminator 3 view .LVU160
 524              	.LVL38:
 202:.././crypto5/tiny-AES128-C/aes.c ****   {
 525              		.loc 1 202 24 discriminator 3 view .LVU161
 202:.././crypto5/tiny-AES128-C/aes.c ****   {
 526              		.loc 1 202 3 is_stmt 0 discriminator 3 view .LVU162
 527 0052 B046     		mov	r8, r6
 528 0054 DFD1     		bne	.L29
 209:.././crypto5/tiny-AES128-C/aes.c **** 
 529              		.loc 1 209 1 view .LVU163
 530 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 531              	.LVL39:
 532              	.L32:
 209:.././crypto5/tiny-AES128-C/aes.c **** 
 533              		.loc 1 209 1 view .LVU164
 534 005a 00BF     		.align	2
 535              	.L31:
 536 005c 00000000 		.word	.LANCHOR0
 537              		.cfi_endproc
 538              	.LFE2:
 540              		.section	.text.ShiftRows,"ax",%progbits
 541              		.align	1
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 545              		.fpu softvfp
 547              	ShiftRows:
 548              	.LFB5:
 243:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t temp;
 549              		.loc 1 243 1 is_stmt 1 view -0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 244:.././crypto5/tiny-AES128-C/aes.c ****   state_copy = (state_t *)malloc(sizeof(state_t) * 16);
 553              		.loc 1 244 3 view .LVU166
 245:.././crypto5/tiny-AES128-C/aes.c **** 
 554              		.loc 1 245 3 view .LVU167
 243:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t temp;
 555              		.loc 1 243 1 is_stmt 0 view .LVU168
 556 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 557              	.LCFI5:
 558              		.cfi_def_cfa_offset 24
 559              		.cfi_offset 3, -24
 560              		.cfi_offset 4, -20
 561              		.cfi_offset 5, -16
 562              		.cfi_offset 6, -12
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 245:.././crypto5/tiny-AES128-C/aes.c **** 
 565              		.loc 1 245 27 view .LVU169
 566 0002 4FF48070 		mov	r0, #256
 567 0006 FFF7FEFF 		bl	malloc
 568              	.LVL40:
 249:.././crypto5/tiny-AES128-C/aes.c ****   {
 569              		.loc 1 249 3 is_stmt 1 view .LVU170
 249:.././crypto5/tiny-AES128-C/aes.c ****   {
 570              		.loc 1 249 18 view .LVU171
 251:.././crypto5/tiny-AES128-C/aes.c ****   }
 571              		.loc 1 251 42 is_stmt 0 view .LVU172
 572 000a 144B     		ldr	r3, .L38
 573 000c D3F8B450 		ldr	r5, [r3, #180]
 574 0010 0023     		movs	r3, #0
 575              	.LVL41:
 576              	.L34:
 251:.././crypto5/tiny-AES128-C/aes.c ****   }
 577              		.loc 1 251 5 is_stmt 1 discriminator 3 view .LVU173
 251:.././crypto5/tiny-AES128-C/aes.c ****   }
 578              		.loc 1 251 55 is_stmt 0 discriminator 3 view .LVU174
 579 0012 03F00302 		and	r2, r3, #3
 251:.././crypto5/tiny-AES128-C/aes.c ****   }
 580              		.loc 1 251 65 discriminator 3 view .LVU175
 581 0016 C3F38501 		ubfx	r1, r3, #2, #6
 251:.././crypto5/tiny-AES128-C/aes.c ****   }
 582              		.loc 1 251 39 discriminator 3 view .LVU176
 583 001a 00EB8204 		add	r4, r0, r2, lsl #2
 251:.././crypto5/tiny-AES128-C/aes.c ****   }
 584              		.loc 1 251 59 discriminator 3 view .LVU177
 585 001e 05EB8202 		add	r2, r5, r2, lsl #2
 249:.././crypto5/tiny-AES128-C/aes.c ****   {
 586              		.loc 1 249 3 discriminator 3 view .LVU178
 587 0022 0133     		adds	r3, r3, #1
 588              	.LVL42:
 251:.././crypto5/tiny-AES128-C/aes.c ****   }
 589              		.loc 1 251 39 discriminator 3 view .LVU179
 590 0024 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 591 0026 6254     		strb	r2, [r4, r1]
 249:.././crypto5/tiny-AES128-C/aes.c ****   {
 592              		.loc 1 249 29 is_stmt 1 discriminator 3 view .LVU180
 249:.././crypto5/tiny-AES128-C/aes.c ****   {
 593              		.loc 1 249 18 discriminator 3 view .LVU181
 249:.././crypto5/tiny-AES128-C/aes.c ****   {
 594              		.loc 1 249 3 is_stmt 0 discriminator 3 view .LVU182
 595 0028 102B     		cmp	r3, #16
 596 002a F2D1     		bne	.L34
 597 002c 0C4E     		ldr	r6, .L38+4
 254:.././crypto5/tiny-AES128-C/aes.c ****   {
 598              		.loc 1 254 13 view .LVU183
 599 002e 0023     		movs	r3, #0
 600              	.L35:
 601              	.LVL43:
 256:.././crypto5/tiny-AES128-C/aes.c ****   }
 602              		.loc 1 256 5 is_stmt 1 discriminator 3 view .LVU184
 256:.././crypto5/tiny-AES128-C/aes.c ****   }
 603              		.loc 1 256 60 is_stmt 0 discriminator 3 view .LVU185
 604 0030 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 256:.././crypto5/tiny-AES128-C/aes.c ****   }
 605              		.loc 1 256 67 discriminator 3 view .LVU186
 606 0034 02F00304 		and	r4, r2, #3
 256:.././crypto5/tiny-AES128-C/aes.c ****   }
 607              		.loc 1 256 19 discriminator 3 view .LVU187
 608 0038 03F00301 		and	r1, r3, #3
 256:.././crypto5/tiny-AES128-C/aes.c ****   }
 609              		.loc 1 256 29 discriminator 3 view .LVU188
 610 003c 9F08     		lsrs	r7, r3, #2
 256:.././crypto5/tiny-AES128-C/aes.c ****   }
 611              		.loc 1 256 89 discriminator 3 view .LVU189
 612 003e 9208     		lsrs	r2, r2, #2
 256:.././crypto5/tiny-AES128-C/aes.c ****   }
 613              		.loc 1 256 71 discriminator 3 view .LVU190
 614 0040 00EB8404 		add	r4, r0, r4, lsl #2
 254:.././crypto5/tiny-AES128-C/aes.c ****   {
 615              		.loc 1 254 29 discriminator 3 view .LVU191
 616 0044 0133     		adds	r3, r3, #1
 617              	.LVL44:
 256:.././crypto5/tiny-AES128-C/aes.c ****   }
 618              		.loc 1 256 34 discriminator 3 view .LVU192
 619 0046 05EB8101 		add	r1, r5, r1, lsl #2
 254:.././crypto5/tiny-AES128-C/aes.c ****   {
 620              		.loc 1 254 29 discriminator 3 view .LVU193
 621 004a DBB2     		uxtb	r3, r3
 256:.././crypto5/tiny-AES128-C/aes.c ****   }
 622              		.loc 1 256 34 discriminator 3 view .LVU194
 623 004c A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 624 004e CA55     		strb	r2, [r1, r7]
 254:.././crypto5/tiny-AES128-C/aes.c ****   {
 625              		.loc 1 254 29 is_stmt 1 discriminator 3 view .LVU195
 626              	.LVL45:
 254:.././crypto5/tiny-AES128-C/aes.c ****   {
 627              		.loc 1 254 18 discriminator 3 view .LVU196
 254:.././crypto5/tiny-AES128-C/aes.c ****   {
 628              		.loc 1 254 3 is_stmt 0 discriminator 3 view .LVU197
 629 0050 102B     		cmp	r3, #16
 630 0052 EDD1     		bne	.L35
 259:.././crypto5/tiny-AES128-C/aes.c **** 
 631              		.loc 1 259 3 is_stmt 1 view .LVU198
 287:.././crypto5/tiny-AES128-C/aes.c **** 
 632              		.loc 1 287 1 is_stmt 0 view .LVU199
 633 0054 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 634              	.LCFI6:
 635              		.cfi_restore 14
 636              		.cfi_restore 7
 637              		.cfi_restore 6
 638              		.cfi_restore 5
 639              		.cfi_restore 4
 640              		.cfi_restore 3
 641              		.cfi_def_cfa_offset 0
 642              	.LVL46:
 259:.././crypto5/tiny-AES128-C/aes.c **** 
 643              		.loc 1 259 3 view .LVU200
 644 0058 FFF7FEBF 		b	free
 645              	.LVL47:
 646              	.L39:
 647              		.align	2
 648              	.L38:
 649 005c 00000000 		.word	.LANCHOR0
 650 0060 00000000 		.word	shift_rows
 651              		.cfi_endproc
 652              	.LFE5:
 654              		.section	.text.Cipher,"ax",%progbits
 655              		.align	1
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 659              		.fpu softvfp
 661              	Cipher:
 662              	.LFB8:
 340:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t round = 0;
 663              		.loc 1 340 1 is_stmt 1 view -0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 341:.././crypto5/tiny-AES128-C/aes.c **** 
 667              		.loc 1 341 3 view .LVU202
 668              	.LVL48:
 344:.././crypto5/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 669              		.loc 1 344 3 view .LVU203
 340:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t round = 0;
 670              		.loc 1 340 1 is_stmt 0 view .LVU204
 671 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 672              	.LCFI7:
 673              		.cfi_def_cfa_offset 32
 674              		.cfi_offset 3, -32
 675              		.cfi_offset 4, -28
 676              		.cfi_offset 5, -24
 677              		.cfi_offset 6, -20
 678              		.cfi_offset 7, -16
 679              		.cfi_offset 8, -12
 680              		.cfi_offset 9, -8
 681              		.cfi_offset 14, -4
 344:.././crypto5/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 682              		.loc 1 344 3 view .LVU205
 683 0004 0020     		movs	r0, #0
 684 0006 FFF7FEFF 		bl	Randomize_permuation_key
 685              	.LVL49:
 345:.././crypto5/tiny-AES128-C/aes.c **** 
 686              		.loc 1 345 3 is_stmt 1 view .LVU206
 687 000a 0020     		movs	r0, #0
 688 000c FFF7FEFF 		bl	AddRoundKey
 689              	.LVL50:
 350:.././crypto5/tiny-AES128-C/aes.c ****   {
 690              		.loc 1 350 3 view .LVU207
 350:.././crypto5/tiny-AES128-C/aes.c ****   {
 691              		.loc 1 350 19 view .LVU208
 692              	.LBB46:
 693              	.LBB47:
 301:.././crypto5/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3];
 694              		.loc 1 301 10 is_stmt 0 view .LVU209
 695 0010 304C     		ldr	r4, .L45
 696              	.LBE47:
 697              	.LBE46:
 350:.././crypto5/tiny-AES128-C/aes.c ****   {
 698              		.loc 1 350 14 view .LVU210
 699 0012 0125     		movs	r5, #1
 700              	.LVL51:
 701              	.L42:
 352:.././crypto5/tiny-AES128-C/aes.c ****     ShiftRows();
 702              		.loc 1 352 5 is_stmt 1 discriminator 3 view .LVU211
 703 0014 FFF7FEFF 		bl	SubBytes
 704              	.LVL52:
 353:.././crypto5/tiny-AES128-C/aes.c ****     MixColumns();
 705              		.loc 1 353 5 discriminator 3 view .LVU212
 706 0018 FFF7FEFF 		bl	ShiftRows
 707              	.LVL53:
 354:.././crypto5/tiny-AES128-C/aes.c ****     Randomize_permuation_key(round);
 708              		.loc 1 354 5 discriminator 3 view .LVU213
 709              	.LBB69:
 710              	.LBI46:
 295:.././crypto5/tiny-AES128-C/aes.c **** {
 711              		.loc 1 295 13 discriminator 3 view .LVU214
 712              	.LBB68:
 297:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t Tmp, Tm, t;
 713              		.loc 1 297 3 discriminator 3 view .LVU215
 298:.././crypto5/tiny-AES128-C/aes.c ****   for (i = 0; i < 4; ++i)
 714              		.loc 1 298 3 discriminator 3 view .LVU216
 299:.././crypto5/tiny-AES128-C/aes.c ****   {
 715              		.loc 1 299 3 discriminator 3 view .LVU217
 299:.././crypto5/tiny-AES128-C/aes.c ****   {
 716              		.loc 1 299 15 discriminator 3 view .LVU218
 717 001c D4F8B430 		ldr	r3, [r4, #180]
 718 0020 03F11006 		add	r6, r3, #16
 719              	.LVL54:
 720              	.L41:
 301:.././crypto5/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3];
 721              		.loc 1 301 5 view .LVU219
 301:.././crypto5/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3];
 722              		.loc 1 301 7 is_stmt 0 view .LVU220
 723 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 724              	.LVL55:
 302:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 725              		.loc 1 302 5 is_stmt 1 view .LVU221
 302:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 726              		.loc 1 302 39 is_stmt 0 view .LVU222
 727 0026 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 302:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 728              		.loc 1 302 56 view .LVU223
 729 0028 93F802E0 		ldrb	lr, [r3, #2]	@ zero_extendqisi2
 302:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 730              		.loc 1 302 73 view .LVU224
 731 002c D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 302:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 732              		.loc 1 302 9 view .LVU225
 733 002e 82EA0109 		eor	r9, r2, r1
 734              	.LBB48:
 735              	.LBB49:
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 736              		.loc 1 291 20 view .LVU226
 737 0032 4FEAD91C 		lsr	ip, r9, #7
 738 0036 8EEA0008 		eor	r8, lr, r0
 739 003a 0CEB4C0C 		add	ip, ip, ip, lsl #1
 740              	.LBE49:
 741              	.LBE48:
 302:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][0] ^ (*state)[i][1];
 742              		.loc 1 302 9 view .LVU227
 743 003e 88EA0907 		eor	r7, r8, r9
 744              	.LVL56:
 303:.././crypto5/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 745              		.loc 1 303 5 is_stmt 1 view .LVU228
 304:.././crypto5/tiny-AES128-C/aes.c ****     (*state)[i][0] ^= Tm ^ Tmp;
 746              		.loc 1 304 5 view .LVU229
 747              	.LBB52:
 748              	.LBI48:
 289:.././crypto5/tiny-AES128-C/aes.c **** {
 749              		.loc 1 289 16 view .LVU230
 750              	.LBB50:
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 751              		.loc 1 291 3 view .LVU231
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 752              		.loc 1 291 3 is_stmt 0 view .LVU232
 753              	.LBE50:
 754              	.LBE52:
 305:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][1] ^ (*state)[i][2];
 755              		.loc 1 305 5 is_stmt 1 view .LVU233
 756              	.LBB53:
 757              	.LBB51:
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 758              		.loc 1 291 20 is_stmt 0 view .LVU234
 759 0042 0CEBCC0C 		add	ip, ip, ip, lsl #3
 760 0046 8CEA490C 		eor	ip, ip, r9, lsl #1
 761              	.LBE51:
 762              	.LBE53:
 305:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][1] ^ (*state)[i][2];
 763              		.loc 1 305 20 view .LVU235
 764 004a 82EA0709 		eor	r9, r2, r7
 765              	.LVL57:
 305:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][1] ^ (*state)[i][2];
 766              		.loc 1 305 20 view .LVU236
 767 004e 8CEA090C 		eor	ip, ip, r9
 306:.././crypto5/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 768              		.loc 1 306 8 view .LVU237
 769 0052 81EA0E09 		eor	r9, r1, lr
 305:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][1] ^ (*state)[i][2];
 770              		.loc 1 305 20 view .LVU238
 771 0056 83F800C0 		strb	ip, [r3]
 306:.././crypto5/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 772              		.loc 1 306 5 is_stmt 1 view .LVU239
 773              	.LVL58:
 307:.././crypto5/tiny-AES128-C/aes.c ****     (*state)[i][1] ^= Tm ^ Tmp;
 774              		.loc 1 307 5 view .LVU240
 775              	.LBB54:
 776              	.LBI54:
 289:.././crypto5/tiny-AES128-C/aes.c **** {
 777              		.loc 1 289 16 view .LVU241
 778              	.LBB55:
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 779              		.loc 1 291 3 view .LVU242
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 780              		.loc 1 291 3 is_stmt 0 view .LVU243
 781              	.LBE55:
 782              	.LBE54:
 308:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][2] ^ (*state)[i][3];
 783              		.loc 1 308 5 is_stmt 1 view .LVU244
 784              	.LBB58:
 785              	.LBB56:
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 786              		.loc 1 291 20 is_stmt 0 view .LVU245
 787 005a 4FEAD91C 		lsr	ip, r9, #7
 788 005e 0CEB4C0C 		add	ip, ip, ip, lsl #1
 789 0062 0CEBCC0C 		add	ip, ip, ip, lsl #3
 790              	.LBE56:
 791              	.LBE58:
 308:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][2] ^ (*state)[i][3];
 792              		.loc 1 308 20 view .LVU246
 793 0066 7940     		eors	r1, r1, r7
 794              	.LBB59:
 795              	.LBB57:
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 796              		.loc 1 291 20 view .LVU247
 797 0068 8CEA490C 		eor	ip, ip, r9, lsl #1
 798              	.LBE57:
 799              	.LBE59:
 308:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][2] ^ (*state)[i][3];
 800              		.loc 1 308 20 view .LVU248
 801 006c 8CEA010C 		eor	ip, ip, r1
 802              	.LBB60:
 803              	.LBB61:
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 804              		.loc 1 291 20 view .LVU249
 805 0070 4FEAD811 		lsr	r1, r8, #7
 806 0074 01EB4101 		add	r1, r1, r1, lsl #1
 807 0078 01EBC101 		add	r1, r1, r1, lsl #3
 808 007c 81EA4801 		eor	r1, r1, r8, lsl #1
 809              	.LBE61:
 810              	.LBE60:
 311:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][3] ^ t;
 811              		.loc 1 311 20 view .LVU250
 812 0080 8EEA070E 		eor	lr, lr, r7
 813 0084 81EA0E01 		eor	r1, r1, lr
 814 0088 9970     		strb	r1, [r3, #2]
 312:.././crypto5/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 815              		.loc 1 312 8 view .LVU251
 816 008a 82EA0001 		eor	r1, r2, r0
 817              	.LBB63:
 818              	.LBB64:
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 819              		.loc 1 291 20 view .LVU252
 820 008e CA09     		lsrs	r2, r1, #7
 821              	.LVL59:
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 822              		.loc 1 291 20 view .LVU253
 823 0090 02EB4202 		add	r2, r2, r2, lsl #1
 824 0094 02EBC202 		add	r2, r2, r2, lsl #3
 825 0098 82EA4102 		eor	r2, r2, r1, lsl #1
 826              	.LBE64:
 827              	.LBE63:
 314:.././crypto5/tiny-AES128-C/aes.c ****   }
 828              		.loc 1 314 20 view .LVU254
 829 009c 7840     		eors	r0, r0, r7
 830 009e 4240     		eors	r2, r2, r0
 308:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][2] ^ (*state)[i][3];
 831              		.loc 1 308 20 view .LVU255
 832 00a0 83F801C0 		strb	ip, [r3, #1]
 309:.././crypto5/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 833              		.loc 1 309 5 is_stmt 1 view .LVU256
 834              	.LVL60:
 310:.././crypto5/tiny-AES128-C/aes.c ****     (*state)[i][2] ^= Tm ^ Tmp;
 835              		.loc 1 310 5 view .LVU257
 836              	.LBB66:
 837              	.LBI60:
 289:.././crypto5/tiny-AES128-C/aes.c **** {
 838              		.loc 1 289 16 view .LVU258
 839              	.LBB62:
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 840              		.loc 1 291 3 view .LVU259
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 841              		.loc 1 291 3 is_stmt 0 view .LVU260
 842              	.LBE62:
 843              	.LBE66:
 311:.././crypto5/tiny-AES128-C/aes.c ****     Tm = (*state)[i][3] ^ t;
 844              		.loc 1 311 5 is_stmt 1 view .LVU261
 312:.././crypto5/tiny-AES128-C/aes.c ****     Tm = xtime(Tm);
 845              		.loc 1 312 5 view .LVU262
 313:.././crypto5/tiny-AES128-C/aes.c ****     (*state)[i][3] ^= Tm ^ Tmp;
 846              		.loc 1 313 5 view .LVU263
 847              	.LBB67:
 848              	.LBI63:
 289:.././crypto5/tiny-AES128-C/aes.c **** {
 849              		.loc 1 289 16 view .LVU264
 850              	.LBB65:
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 851              		.loc 1 291 3 view .LVU265
 291:.././crypto5/tiny-AES128-C/aes.c **** }
 852              		.loc 1 291 3 is_stmt 0 view .LVU266
 853              	.LBE65:
 854              	.LBE67:
 314:.././crypto5/tiny-AES128-C/aes.c ****   }
 855              		.loc 1 314 5 is_stmt 1 view .LVU267
 314:.././crypto5/tiny-AES128-C/aes.c ****   }
 856              		.loc 1 314 20 is_stmt 0 view .LVU268
 857 00a4 DA70     		strb	r2, [r3, #3]
 299:.././crypto5/tiny-AES128-C/aes.c ****   {
 858              		.loc 1 299 22 is_stmt 1 view .LVU269
 859              	.LVL61:
 299:.././crypto5/tiny-AES128-C/aes.c ****   {
 860              		.loc 1 299 15 view .LVU270
 299:.././crypto5/tiny-AES128-C/aes.c ****   {
 861              		.loc 1 299 3 is_stmt 0 view .LVU271
 862 00a6 0433     		adds	r3, r3, #4
 863              	.LVL62:
 299:.././crypto5/tiny-AES128-C/aes.c ****   {
 864              		.loc 1 299 3 view .LVU272
 865 00a8 9E42     		cmp	r6, r3
 866 00aa BBD1     		bne	.L41
 867              	.LVL63:
 299:.././crypto5/tiny-AES128-C/aes.c ****   {
 868              		.loc 1 299 3 view .LVU273
 869              	.LBE68:
 870              	.LBE69:
 355:.././crypto5/tiny-AES128-C/aes.c ****     AddRoundKey(round);
 871              		.loc 1 355 5 is_stmt 1 discriminator 3 view .LVU274
 872 00ac 2846     		mov	r0, r5
 873 00ae FFF7FEFF 		bl	Randomize_permuation_key
 874              	.LVL64:
 356:.././crypto5/tiny-AES128-C/aes.c ****   }
 875              		.loc 1 356 5 discriminator 3 view .LVU275
 876 00b2 2846     		mov	r0, r5
 350:.././crypto5/tiny-AES128-C/aes.c ****   {
 877              		.loc 1 350 31 is_stmt 0 discriminator 3 view .LVU276
 878 00b4 0135     		adds	r5, r5, #1
 879              	.LVL65:
 350:.././crypto5/tiny-AES128-C/aes.c ****   {
 880              		.loc 1 350 31 discriminator 3 view .LVU277
 881 00b6 EDB2     		uxtb	r5, r5
 356:.././crypto5/tiny-AES128-C/aes.c ****   }
 882              		.loc 1 356 5 discriminator 3 view .LVU278
 883 00b8 FFF7FEFF 		bl	AddRoundKey
 884              	.LVL66:
 350:.././crypto5/tiny-AES128-C/aes.c ****   {
 885              		.loc 1 350 31 is_stmt 1 discriminator 3 view .LVU279
 350:.././crypto5/tiny-AES128-C/aes.c ****   {
 886              		.loc 1 350 19 discriminator 3 view .LVU280
 350:.././crypto5/tiny-AES128-C/aes.c ****   {
 887              		.loc 1 350 3 is_stmt 0 discriminator 3 view .LVU281
 888 00bc 0A2D     		cmp	r5, #10
 889 00be A9D1     		bne	.L42
 361:.././crypto5/tiny-AES128-C/aes.c ****   ShiftRows();
 890              		.loc 1 361 3 is_stmt 1 view .LVU282
 891 00c0 FFF7FEFF 		bl	SubBytes
 892              	.LVL67:
 362:.././crypto5/tiny-AES128-C/aes.c ****   AddRoundKey(Nr);
 893              		.loc 1 362 3 view .LVU283
 894 00c4 FFF7FEFF 		bl	ShiftRows
 895              	.LVL68:
 363:.././crypto5/tiny-AES128-C/aes.c **** }
 896              		.loc 1 363 3 view .LVU284
 897 00c8 2846     		mov	r0, r5
 364:.././crypto5/tiny-AES128-C/aes.c **** 
 898              		.loc 1 364 1 is_stmt 0 view .LVU285
 899 00ca BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 900              	.LCFI8:
 901              		.cfi_restore 14
 902              		.cfi_restore 9
 903              		.cfi_restore 8
 904              		.cfi_restore 7
 905              		.cfi_restore 6
 906              		.cfi_restore 5
 907              		.cfi_restore 4
 908              		.cfi_restore 3
 909              		.cfi_def_cfa_offset 0
 910              	.LVL69:
 363:.././crypto5/tiny-AES128-C/aes.c **** }
 911              		.loc 1 363 3 view .LVU286
 912 00ce FFF7FEBF 		b	AddRoundKey
 913              	.LVL70:
 914              	.L46:
 363:.././crypto5/tiny-AES128-C/aes.c **** }
 915              		.loc 1 363 3 view .LVU287
 916 00d2 00BF     		.align	2
 917              	.L45:
 918 00d4 00000000 		.word	.LANCHOR0
 919              		.cfi_endproc
 920              	.LFE8:
 922              		.section	.text.AES128_ECB_indp_setkey,"ax",%progbits
 923              		.align	1
 924              		.global	AES128_ECB_indp_setkey
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu softvfp
 930              	AES128_ECB_indp_setkey:
 931              	.LVL71:
 932              	.LFB11:
 374:.././crypto5/tiny-AES128-C/aes.c **** 
 375:.././crypto5/tiny-AES128-C/aes.c **** static void Debug(void)
 376:.././crypto5/tiny-AES128-C/aes.c **** {
 377:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t round = 0;
 378:.././crypto5/tiny-AES128-C/aes.c **** 
 379:.././crypto5/tiny-AES128-C/aes.c ****   // Add the First round key to the state before starting the rounds.
 380:.././crypto5/tiny-AES128-C/aes.c ****   Randomize_permuation_key(round);
 381:.././crypto5/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 382:.././crypto5/tiny-AES128-C/aes.c **** 
 383:.././crypto5/tiny-AES128-C/aes.c ****   uint8_t i, j;
 384:.././crypto5/tiny-AES128-C/aes.c ****   for (i = 0; i < 4; ++i)
 385:.././crypto5/tiny-AES128-C/aes.c ****   {
 386:.././crypto5/tiny-AES128-C/aes.c ****     for (j = 0; j < 4; ++j)
 387:.././crypto5/tiny-AES128-C/aes.c ****     {
 388:.././crypto5/tiny-AES128-C/aes.c ****       (*state)[i][j] = RoundKey[round * Nb * 4 + i * Nb + j];
 389:.././crypto5/tiny-AES128-C/aes.c ****     }
 390:.././crypto5/tiny-AES128-C/aes.c ****   }
 391:.././crypto5/tiny-AES128-C/aes.c **** }
 392:.././crypto5/tiny-AES128-C/aes.c **** 
 393:.././crypto5/tiny-AES128-C/aes.c **** /*****************************************************************************/
 394:.././crypto5/tiny-AES128-C/aes.c **** /* Public functions:                                                         */
 395:.././crypto5/tiny-AES128-C/aes.c **** /*****************************************************************************/
 396:.././crypto5/tiny-AES128-C/aes.c **** 
 397:.././crypto5/tiny-AES128-C/aes.c **** void AES128_ECB_indp_setkey(uint8_t *key)
 398:.././crypto5/tiny-AES128-C/aes.c **** {
 933              		.loc 1 398 1 is_stmt 1 view -0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              		@ link register save eliminated.
 399:.././crypto5/tiny-AES128-C/aes.c ****   Key = key;
 938              		.loc 1 399 3 view .LVU289
 939              		.loc 1 399 7 is_stmt 0 view .LVU290
 940 0000 014B     		ldr	r3, .L48
 941 0002 1860     		str	r0, [r3]
 400:.././crypto5/tiny-AES128-C/aes.c ****   KeyExpansion();
 942              		.loc 1 400 3 is_stmt 1 view .LVU291
 943 0004 FFF7FEBF 		b	KeyExpansion
 944              	.LVL72:
 945              	.L49:
 946              		.loc 1 400 3 is_stmt 0 view .LVU292
 947              		.align	2
 948              	.L48:
 949 0008 00000000 		.word	.LANCHOR0
 950              		.cfi_endproc
 951              	.LFE11:
 953              		.section	.text.AES128_ECB_indp_crypto,"ax",%progbits
 954              		.align	1
 955              		.global	AES128_ECB_indp_crypto
 956              		.syntax unified
 957              		.thumb
 958              		.thumb_func
 959              		.fpu softvfp
 961              	AES128_ECB_indp_crypto:
 962              	.LVL73:
 963              	.LFB12:
 401:.././crypto5/tiny-AES128-C/aes.c **** }
 402:.././crypto5/tiny-AES128-C/aes.c **** 
 403:.././crypto5/tiny-AES128-C/aes.c **** void AES128_ECB_indp_crypto(uint8_t *input)
 404:.././crypto5/tiny-AES128-C/aes.c **** {
 964              		.loc 1 404 1 is_stmt 1 view -0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 0
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 405:.././crypto5/tiny-AES128-C/aes.c ****   state = (state_t *)input;
 968              		.loc 1 405 3 view .LVU294
 404:.././crypto5/tiny-AES128-C/aes.c ****   state = (state_t *)input;
 969              		.loc 1 404 1 is_stmt 0 view .LVU295
 970 0000 08B5     		push	{r3, lr}
 971              	.LCFI9:
 972              		.cfi_def_cfa_offset 8
 973              		.cfi_offset 3, -8
 974              		.cfi_offset 14, -4
 404:.././crypto5/tiny-AES128-C/aes.c ****   state = (state_t *)input;
 975              		.loc 1 404 1 view .LVU296
 976 0002 0146     		mov	r1, r0
 977              		.loc 1 405 9 view .LVU297
 978 0004 0448     		ldr	r0, .L51
 979              	.LVL74:
 980              		.loc 1 405 9 view .LVU298
 981 0006 C0F8B410 		str	r1, [r0, #180]
 406:.././crypto5/tiny-AES128-C/aes.c ****   BlockCopy(input_save, input);
 982              		.loc 1 406 3 is_stmt 1 view .LVU299
 983 000a B830     		adds	r0, r0, #184
 984 000c FFF7FEFF 		bl	BlockCopy
 985              	.LVL75:
 407:.././crypto5/tiny-AES128-C/aes.c ****   Cipher();
 986              		.loc 1 407 3 view .LVU300
 408:.././crypto5/tiny-AES128-C/aes.c **** }
 987              		.loc 1 408 1 is_stmt 0 view .LVU301
 988 0010 BDE80840 		pop	{r3, lr}
 989              	.LCFI10:
 990              		.cfi_restore 14
 991              		.cfi_restore 3
 992              		.cfi_def_cfa_offset 0
 407:.././crypto5/tiny-AES128-C/aes.c ****   Cipher();
 993              		.loc 1 407 3 view .LVU302
 994 0014 FFF7FEBF 		b	Cipher
 995              	.LVL76:
 996              	.L52:
 997              		.align	2
 998              	.L51:
 999 0018 00000000 		.word	.LANCHOR0
 1000              		.cfi_endproc
 1001              	.LFE12:
 1003              		.section	.text.AES128_ECB_indp_crypto_debug,"ax",%progbits
 1004              		.align	1
 1005              		.global	AES128_ECB_indp_crypto_debug
 1006              		.syntax unified
 1007              		.thumb
 1008              		.thumb_func
 1009              		.fpu softvfp
 1011              	AES128_ECB_indp_crypto_debug:
 1012              	.LVL77:
 1013              	.LFB13:
 409:.././crypto5/tiny-AES128-C/aes.c **** 
 410:.././crypto5/tiny-AES128-C/aes.c **** void AES128_ECB_indp_crypto_debug(uint8_t *input)
 411:.././crypto5/tiny-AES128-C/aes.c **** {
 1014              		.loc 1 411 1 is_stmt 1 view -0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 0
 1017              		@ frame_needed = 0, uses_anonymous_args = 0
 412:.././crypto5/tiny-AES128-C/aes.c ****   state = (state_t *)input;
 1018              		.loc 1 412 3 view .LVU304
 411:.././crypto5/tiny-AES128-C/aes.c ****   state = (state_t *)input;
 1019              		.loc 1 411 1 is_stmt 0 view .LVU305
 1020 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1021              	.LCFI11:
 1022              		.cfi_def_cfa_offset 24
 1023              		.cfi_offset 3, -24
 1024              		.cfi_offset 4, -20
 1025              		.cfi_offset 5, -16
 1026              		.cfi_offset 6, -12
 1027              		.cfi_offset 7, -8
 1028              		.cfi_offset 14, -4
 1029              		.loc 1 412 9 view .LVU306
 1030 0002 104C     		ldr	r4, .L58
 411:.././crypto5/tiny-AES128-C/aes.c ****   state = (state_t *)input;
 1031              		.loc 1 411 1 view .LVU307
 1032 0004 0146     		mov	r1, r0
 1033              		.loc 1 412 9 view .LVU308
 1034 0006 C4F8B400 		str	r0, [r4, #180]
 413:.././crypto5/tiny-AES128-C/aes.c ****   BlockCopy(input_save, input);
 1035              		.loc 1 413 3 is_stmt 1 view .LVU309
 1036 000a 04F1B800 		add	r0, r4, #184
 1037              	.LVL78:
 1038              		.loc 1 413 3 is_stmt 0 view .LVU310
 1039 000e FFF7FEFF 		bl	BlockCopy
 1040              	.LVL79:
 414:.././crypto5/tiny-AES128-C/aes.c ****   Debug();
 1041              		.loc 1 414 3 is_stmt 1 view .LVU311
 1042              	.LBB72:
 1043              	.LBI72:
 375:.././crypto5/tiny-AES128-C/aes.c **** {
 1044              		.loc 1 375 13 view .LVU312
 1045              	.LBB73:
 377:.././crypto5/tiny-AES128-C/aes.c **** 
 1046              		.loc 1 377 3 view .LVU313
 380:.././crypto5/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 1047              		.loc 1 380 3 view .LVU314
 1048 0012 0020     		movs	r0, #0
 1049 0014 FFF7FEFF 		bl	Randomize_permuation_key
 1050              	.LVL80:
 381:.././crypto5/tiny-AES128-C/aes.c **** 
 1051              		.loc 1 381 3 view .LVU315
 1052 0018 0020     		movs	r0, #0
 1053 001a FFF7FEFF 		bl	AddRoundKey
 1054              	.LVL81:
 383:.././crypto5/tiny-AES128-C/aes.c ****   for (i = 0; i < 4; ++i)
 1055              		.loc 1 383 3 view .LVU316
 384:.././crypto5/tiny-AES128-C/aes.c ****   {
 1056              		.loc 1 384 3 view .LVU317
 384:.././crypto5/tiny-AES128-C/aes.c ****   {
 1057              		.loc 1 384 15 view .LVU318
 388:.././crypto5/tiny-AES128-C/aes.c ****     }
 1058              		.loc 1 388 8 is_stmt 0 view .LVU319
 1059 001e D4F8B410 		ldr	r1, [r4, #180]
 1060 0022 0023     		movs	r3, #0
 1061 0024 0434     		adds	r4, r4, #4
 386:.././crypto5/tiny-AES128-C/aes.c ****     {
 1062              		.loc 1 386 5 view .LVU320
 1063 0026 0E1D     		adds	r6, r1, #4
 1064              	.LVL82:
 1065              	.L54:
 386:.././crypto5/tiny-AES128-C/aes.c ****     {
 1066              		.loc 1 386 17 is_stmt 1 view .LVU321
 1067 0028 E018     		adds	r0, r4, r3
 1068 002a 5A18     		adds	r2, r3, r1
 386:.././crypto5/tiny-AES128-C/aes.c ****     {
 1069              		.loc 1 386 5 is_stmt 0 view .LVU322
 1070 002c F518     		adds	r5, r6, r3
 1071              	.LVL83:
 1072              	.L55:
 388:.././crypto5/tiny-AES128-C/aes.c ****     }
 1073              		.loc 1 388 7 is_stmt 1 view .LVU323
 388:.././crypto5/tiny-AES128-C/aes.c ****     }
 1074              		.loc 1 388 32 is_stmt 0 view .LVU324
 1075 002e 10F8017B 		ldrb	r7, [r0], #1	@ zero_extendqisi2
 1076              	.LVL84:
 388:.././crypto5/tiny-AES128-C/aes.c ****     }
 1077              		.loc 1 388 22 view .LVU325
 1078 0032 02F8017B 		strb	r7, [r2], #1
 386:.././crypto5/tiny-AES128-C/aes.c ****     {
 1079              		.loc 1 386 24 is_stmt 1 view .LVU326
 1080              	.LVL85:
 386:.././crypto5/tiny-AES128-C/aes.c ****     {
 1081              		.loc 1 386 17 view .LVU327
 386:.././crypto5/tiny-AES128-C/aes.c ****     {
 1082              		.loc 1 386 5 is_stmt 0 view .LVU328
 1083 0036 AA42     		cmp	r2, r5
 1084 0038 F9D1     		bne	.L55
 384:.././crypto5/tiny-AES128-C/aes.c ****   {
 1085              		.loc 1 384 22 is_stmt 1 view .LVU329
 1086              	.LVL86:
 384:.././crypto5/tiny-AES128-C/aes.c ****   {
 1087              		.loc 1 384 15 view .LVU330
 384:.././crypto5/tiny-AES128-C/aes.c ****   {
 1088              		.loc 1 384 3 is_stmt 0 view .LVU331
 1089 003a 0433     		adds	r3, r3, #4
 1090              	.LVL87:
 384:.././crypto5/tiny-AES128-C/aes.c ****   {
 1091              		.loc 1 384 3 view .LVU332
 1092 003c 102B     		cmp	r3, #16
 1093 003e F3D1     		bne	.L54
 1094              	.LBE73:
 1095              	.LBE72:
 415:.././crypto5/tiny-AES128-C/aes.c **** }
 1096              		.loc 1 415 1 view .LVU333
 1097 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1098              	.LVL88:
 1099              	.L59:
 1100              		.loc 1 415 1 view .LVU334
 1101 0042 00BF     		.align	2
 1102              	.L58:
 1103 0044 00000000 		.word	.LANCHOR0
 1104              		.cfi_endproc
 1105              	.LFE13:
 1107              		.section	.text.AES128_ECB_encrypt,"ax",%progbits
 1108              		.align	1
 1109              		.global	AES128_ECB_encrypt
 1110              		.syntax unified
 1111              		.thumb
 1112              		.thumb_func
 1113              		.fpu softvfp
 1115              	AES128_ECB_encrypt:
 1116              	.LVL89:
 1117              	.LFB14:
 416:.././crypto5/tiny-AES128-C/aes.c **** 
 417:.././crypto5/tiny-AES128-C/aes.c **** void AES128_ECB_encrypt(uint8_t *input, uint8_t *key, uint8_t *output)
 418:.././crypto5/tiny-AES128-C/aes.c **** {
 1118              		.loc 1 418 1 is_stmt 1 view -0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 419:.././crypto5/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 420:.././crypto5/tiny-AES128-C/aes.c ****   BlockCopy(output, input);
 1122              		.loc 1 420 3 view .LVU336
 418:.././crypto5/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1123              		.loc 1 418 1 is_stmt 0 view .LVU337
 1124 0000 38B5     		push	{r3, r4, r5, lr}
 1125              	.LCFI12:
 1126              		.cfi_def_cfa_offset 16
 1127              		.cfi_offset 3, -16
 1128              		.cfi_offset 4, -12
 1129              		.cfi_offset 5, -8
 1130              		.cfi_offset 14, -4
 418:.././crypto5/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1131              		.loc 1 418 1 view .LVU338
 1132 0002 0D46     		mov	r5, r1
 1133              		.loc 1 420 3 view .LVU339
 1134 0004 0146     		mov	r1, r0
 1135              	.LVL90:
 1136              		.loc 1 420 3 view .LVU340
 1137 0006 1046     		mov	r0, r2
 1138              	.LVL91:
 418:.././crypto5/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1139              		.loc 1 418 1 view .LVU341
 1140 0008 1446     		mov	r4, r2
 1141              		.loc 1 420 3 view .LVU342
 1142 000a FFF7FEFF 		bl	BlockCopy
 1143              	.LVL92:
 421:.././crypto5/tiny-AES128-C/aes.c ****   state = (state_t *)output;
 1144              		.loc 1 421 3 is_stmt 1 view .LVU343
 1145              		.loc 1 421 9 is_stmt 0 view .LVU344
 1146 000e 054B     		ldr	r3, .L61
 1147 0010 C3F8B440 		str	r4, [r3, #180]
 422:.././crypto5/tiny-AES128-C/aes.c **** 
 423:.././crypto5/tiny-AES128-C/aes.c ****   Key = key;
 1148              		.loc 1 423 3 is_stmt 1 view .LVU345
 1149              		.loc 1 423 7 is_stmt 0 view .LVU346
 1150 0014 1D60     		str	r5, [r3]
 424:.././crypto5/tiny-AES128-C/aes.c ****   KeyExpansion();
 1151              		.loc 1 424 3 is_stmt 1 view .LVU347
 1152 0016 FFF7FEFF 		bl	KeyExpansion
 1153              	.LVL93:
 425:.././crypto5/tiny-AES128-C/aes.c **** 
 426:.././crypto5/tiny-AES128-C/aes.c ****   // The next function call encrypts the PlainText with the Key using AES algorithm.
 427:.././crypto5/tiny-AES128-C/aes.c ****   Cipher();
 1154              		.loc 1 427 3 view .LVU348
 428:.././crypto5/tiny-AES128-C/aes.c **** }...
 1155              		.loc 1 428 1 is_stmt 0 view .LVU349
 1156 001a BDE83840 		pop	{r3, r4, r5, lr}
 1157              	.LCFI13:
 1158              		.cfi_restore 14
 1159              		.cfi_restore 5
 1160              		.cfi_restore 4
 1161              		.cfi_restore 3
 1162              		.cfi_def_cfa_offset 0
 1163              	.LVL94:
 427:.././crypto5/tiny-AES128-C/aes.c ****   Cipher();
 1164              		.loc 1 427 3 view .LVU350
 1165 001e FFF7FEBF 		b	Cipher
 1166              	.LVL95:
 1167              	.L62:
 1168 0022 00BF     		.align	2
 1169              	.L61:
 1170 0024 00000000 		.word	.LANCHOR0
 1171              		.cfi_endproc
 1172              	.LFE14:
 1174              		.global	Rcon
 1175              		.global	rsbox
 1176              		.global	sbox
 1177              		.data
 1178              		.set	.LANCHOR1,. + 0
 1181              	sbox:
 1182 0000 637C777B 		.ascii	"c|w{\362ko\3050\001g+\376\327\253v\312\202\311}\372"
 1182      F26B6FC5 
 1182      3001672B 
 1182      FED7AB76 
 1182      CA82C97D 
 1183 0015 5947F0AD 		.ascii	"YG\360\255\324\242\257\234\244r\300\267\375\223&6?\367"
 1183      D4A2AF9C 
 1183      A472C0B7 
 1183      FD932636 
 1183      3FF7
 1184 0027 CC34A5E5 		.ascii	"\3144\245\345\361q\3301\025\004\307#\303\030\226\005"
 1184      F171D831 
 1184      1504C723 
 1184      C3189605 
 1185 0037 9A071280 		.ascii	"\232\007\022\200\342\353'\262u\011\203,\032\033nZ\240"
 1185      E2EB27B2 
 1185      7509832C 
 1185      1A1B6E5A 
 1185      A0
 1186 0048 523BD6B3 		.ascii	"R;\326\263)\343/\204S\321\000\355 \374\261[j\313\276"
 1186      29E32F84 
 1186      53D100ED 
 1186      20FCB15B 
 1186      6ACBBE
 1187 005b 394A4C58 		.ascii	"9JLX\317\320\357\252\373CM3\205E\371\002\177P<\237\250"
 1187      CFD0EFAA 
 1187      FB434D33 
 1187      8545F902 
 1187      7F503C9F 
 1188 0070 51A3408F 		.ascii	"Q\243@\217\222\2358\365\274\266\332!\020\377\363\322"
 1188      929D38F5 
 1188      BCB6DA21 
 1188      10FFF3D2 
 1189 0080 CD0C13EC 		.ascii	"\315\014\023\354_\227D\027\304\247~=d]\031s`\201O\334"
 1189      5F974417 
 1189      C4A77E3D 
 1189      645D1973 
 1189      60814FDC 
 1190 0094 222A9088 		.ascii	"\"*\220\210F\356\270\024\336^\013\333\3402:\012I\006"
 1190      46EEB814 
 1190      DE5E0BDB 
 1190      E0323A0A 
 1190      4906
 1191 00a6 245CC2D3 		.ascii	"$\\\302\323\254b\221\225\344y\347\3107m\215\325N\251"
 1191      AC629195 
 1191      E479E7C8 
 1191      376D8DD5 
 1191      4EA9
 1192 00b8 6C56F4EA 		.ascii	"lV\364\352ez\256\010\272x%.\034\246\264\306\350\335"
 1192      657AAE08 
 1192      BA78252E 
 1192      1CA6B4C6 
 1192      E8DD
 1193 00ca 741F4BBD 		.ascii	"t\037K\275\213\212p>\265fH\003\366\016a5W\271\206\301"
 1193      8B8A703E 
 1193      B5664803 
 1193      F60E6135 
 1193      57B986C1 
 1194 00de 1D9EE1F8 		.ascii	"\035\236\341\370\230\021i\331\216\224\233\036\207\351"
 1194      981169D9 
 1194      8E949B1E 
 1194      87E9
 1195 00ec CE5528DF 		.ascii	"\316U(\337\214\241\211\015\277\346BhA\231-\017\260T"
 1195      8CA1890D 
 1195      BFE64268 
 1195      41992D0F 
 1195      B054
 1196 00fe BB16     		.ascii	"\273\026"
 1199              	Rcon:
 1200 0100 8D010204 		.ascii	"\215\001\002\004\010\020 @\200\0336"
 1200      08102040 
 1200      801B36
 1203              	rsbox:
 1204 010b 52096AD5 		.ascii	"R\011j\32506\2458\277@\243\236\201\363\327\373|\343"
 1204      3036A538 
 1204      BF40A39E 
 1204      81F3D7FB 
 1204      7CE3
 1205 011d 39829B2F 		.ascii	"9\202\233/\377\2074\216CD\304\336\351\313T{\2242\246"
 1205      FF87348E 
 1205      4344C4DE 
 1205      E9CB547B 
 1205      9432A6
 1206 0130 C2233DEE 		.ascii	"\302#=\356L\225\013B\372\303N\010.\241f(\331$\262v["
 1206      4C950B42 
 1206      FAC34E08 
 1206      2EA16628 
 1206      D924B276 
 1207 0145 A2496D8B 		.ascii	"\242Im\213\321%r\370\366d\206h\230\026\324\244\\\314"
 1207      D12572F8 
 1207      F6648668 
 1207      9816D4A4 
 1207      5CCC
 1208 0157 5D65B692 		.ascii	"]e\266\222lpHP\375\355\271\332^\025FW\247\215\235\204"
 1208      6C704850 
 1208      FDEDB9DA 
 1208      5E154657 
 1208      A78D9D84 
 1209 016b 90D8AB00 		.ascii	"\220\330\253\000\214\274\323\012\367\344X\005\270\263"
 1209      8CBCD30A 
 1209      F7E45805 
 1209      B8B3
 1210 0179 4506D02C 		.ascii	"E\006\320,\036\217\312?\017\002\301\257\275\003\001"
 1210      1E8FCA3F 
 1210      0F02C1AF 
 1210      BD0301
 1211 0188 138A6B3A 		.ascii	"\023\212k:\221\021AOg\334\352\227\362\317\316\360\264"
 1211      9111414F 
 1211      67DCEA97 
 1211      F2CFCEF0 
 1211      B4
 1212 0199 E67396AC 		.ascii	"\346s\226\254t\"\347\2555\205\342\3717\350\034u\337"
 1212      7422E7AD 
 1212      3585E2F9 
 1212      37E81C75 
 1212      DF
 1213 01aa 6E47F11A 		.ascii	"nG\361\032q\035)\305\211o\267b\016\252\030\276\033\374"
 1213      711D29C5 
 1213      896FB762 
 1213      0EAA18BE 
 1213      1BFC
 1214 01bc 563E4BC6 		.ascii	"V>K\306\322y \232\333\300\376x\315Z\364\037\335\250"
 1214      D279209A 
 1214      DBC0FE78 
 1214      CD5AF41F 
 1214      DDA8
 1215 01ce 338807C7 		.ascii	"3\210\007\3071\261\022\020Y'\200\354_`Q\177\251\031"
 1215      31B11210 
 1215      592780EC 
 1215      5F60517F 
 1215      A919
 1216 01e0 B54A0D2D 		.ascii	"\265J\015-\345z\237\223\311\234\357\240\340;M\256*\365"
 1216      E57A9F93 
 1216      C99CEFA0 
 1216      E03B4DAE 
 1216      2AF5
 1217 01f2 B0C8EBBB 		.ascii	"\260\310\353\273<\203S\231a\027+\004~\272w\326&\341"
 1217      3C835399 
 1217      61172B04 
 1217      7EBA77D6 
 1217      26E1
 1218 0204 69146355 		.ascii	"i\024cU!\014}"
 1218      210C7D
 1219              		.bss
 1220              		.align	2
 1221              		.set	.LANCHOR0,. + 0
 1224              	Key:
 1225 0000 00000000 		.space	4
 1228              	RoundKey:
 1229 0004 00000000 		.space	176
 1229      00000000 
 1229      00000000 
 1229      00000000 
 1229      00000000 
 1232              	state:
 1233 00b4 00000000 		.space	4
 1236              	input_save:
 1237 00b8 00000000 		.space	16
 1237      00000000 
 1237      00000000 
 1237      00000000 
 1238              		.text
 1239              	.Letext0:
 1240              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1241              		.file 3 ".././crypto5/tiny-AES128-C/random_shift_rows.h"
 1242              		.file 4 "/usr/include/newlib/stdlib.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 aes.c
     /tmp/ccvO2Oq6.s:16     .text.KeyExpansion:0000000000000000 $t
     /tmp/ccvO2Oq6.s:23     .text.KeyExpansion:0000000000000000 KeyExpansion
     /tmp/ccvO2Oq6.s:232    .text.KeyExpansion:00000000000000a0 $d
     /tmp/ccvO2Oq6.s:239    .text.AddRoundKey:0000000000000000 $t
     /tmp/ccvO2Oq6.s:245    .text.AddRoundKey:0000000000000000 AddRoundKey
     /tmp/ccvO2Oq6.s:306    .text.AddRoundKey:0000000000000030 $d
     /tmp/ccvO2Oq6.s:311    .text.SubBytes:0000000000000000 $t
     /tmp/ccvO2Oq6.s:317    .text.SubBytes:0000000000000000 SubBytes
     /tmp/ccvO2Oq6.s:388    .text.SubBytes:0000000000000028 $d
     /tmp/ccvO2Oq6.s:394    .text.BlockCopy:0000000000000000 $t
     /tmp/ccvO2Oq6.s:400    .text.BlockCopy:0000000000000000 BlockCopy
     /tmp/ccvO2Oq6.s:436    .text.Randomize_permuation_key:0000000000000000 $t
     /tmp/ccvO2Oq6.s:442    .text.Randomize_permuation_key:0000000000000000 Randomize_permuation_key
     /tmp/ccvO2Oq6.s:536    .text.Randomize_permuation_key:000000000000005c $d
     /tmp/ccvO2Oq6.s:541    .text.ShiftRows:0000000000000000 $t
     /tmp/ccvO2Oq6.s:547    .text.ShiftRows:0000000000000000 ShiftRows
     /tmp/ccvO2Oq6.s:649    .text.ShiftRows:000000000000005c $d
     /tmp/ccvO2Oq6.s:655    .text.Cipher:0000000000000000 $t
     /tmp/ccvO2Oq6.s:661    .text.Cipher:0000000000000000 Cipher
     /tmp/ccvO2Oq6.s:918    .text.Cipher:00000000000000d4 $d
     /tmp/ccvO2Oq6.s:923    .text.AES128_ECB_indp_setkey:0000000000000000 $t
     /tmp/ccvO2Oq6.s:930    .text.AES128_ECB_indp_setkey:0000000000000000 AES128_ECB_indp_setkey
     /tmp/ccvO2Oq6.s:949    .text.AES128_ECB_indp_setkey:0000000000000008 $d
     /tmp/ccvO2Oq6.s:954    .text.AES128_ECB_indp_crypto:0000000000000000 $t
     /tmp/ccvO2Oq6.s:961    .text.AES128_ECB_indp_crypto:0000000000000000 AES128_ECB_indp_crypto
     /tmp/ccvO2Oq6.s:999    .text.AES128_ECB_indp_crypto:0000000000000018 $d
     /tmp/ccvO2Oq6.s:1004   .text.AES128_ECB_indp_crypto_debug:0000000000000000 $t
     /tmp/ccvO2Oq6.s:1011   .text.AES128_ECB_indp_crypto_debug:0000000000000000 AES128_ECB_indp_crypto_debug
     /tmp/ccvO2Oq6.s:1103   .text.AES128_ECB_indp_crypto_debug:0000000000000044 $d
     /tmp/ccvO2Oq6.s:1108   .text.AES128_ECB_encrypt:0000000000000000 $t
     /tmp/ccvO2Oq6.s:1115   .text.AES128_ECB_encrypt:0000000000000000 AES128_ECB_encrypt
     /tmp/ccvO2Oq6.s:1170   .text.AES128_ECB_encrypt:0000000000000024 $d
     /tmp/ccvO2Oq6.s:1199   .data:0000000000000100 Rcon
     /tmp/ccvO2Oq6.s:1203   .data:000000000000010b rsbox
     /tmp/ccvO2Oq6.s:1181   .data:0000000000000000 sbox
     /tmp/ccvO2Oq6.s:1220   .bss:0000000000000000 $d
     /tmp/ccvO2Oq6.s:1224   .bss:0000000000000000 Key
     /tmp/ccvO2Oq6.s:1228   .bss:0000000000000004 RoundKey
     /tmp/ccvO2Oq6.s:1232   .bss:00000000000000b4 state
     /tmp/ccvO2Oq6.s:1236   .bss:00000000000000b8 input_save

UNDEFINED SYMBOLS
clock
srand
rand
malloc
free
shift_rows
